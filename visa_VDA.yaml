openapi: 3.0.1
info:
  title: Visa Direct Account and Wallet
  description: ''
  version: '1'
servers:
  - url: https://sandbox.api.visa.com
    description: Sandbox server
security: []
tags:
  - name: Visa Direct Account and Wallet Receive API
    description: Visa Direct Account and Wallet Receive API
  - name: Visa Direct Account and Wallet Send API
    description: Visa Direct Account and Wallet Send API
paths:
  /visapayouts/v3/payouts:
    get:
      tags:
        - Visa Direct Account and Wallet Send API
      summary: Query Payout
      description: Query Payout
      operationId: QueryPayout
      parameters:
        - name: id
          in: query
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/PayoutIdentifier'
        - name: idType
          in: query
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/TransactionIdType'
        - name: initiatingPartyId
          in: query
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/InitiatingPartyId'
      responses:
        '200':
          $ref: '#/components/responses/QueryResponseAccount'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1visapayouts~1v3~1payouts/get'
          default: false
      x-hideTryIt: true
    post:
      tags:
        - Visa Direct Account and Wallet Send API
      summary: Send Payout
      description: >-
        This API allows an originator to send Visa a payout request to push
        funds with relevant sender, recipient, and recipient's bank account  or
        recipient's wallet information.
      operationId: SendPayout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPayoutRequest'
            examples:
              VDA Payment Received Scenario:
                summary: VDA Payment Received Scenario
                value:
                  recipientDetail:
                    lastName: smith
                    firstName: Jessica
                    bank:
                      bankCode: '800554'
                      bankCodeType: SORT_CODE
                      accountNumberType: DEFAULT
                      accountName: Money Market
                      countryCode: GBR
                      bankName: Barclays
                      accountNumber: '6970093'
                      currencyCode: GBP
                    address:
                      country: GBR
                      city: London
                      postalCode: '675456'
                      addressLine1: 123 Main St
                      state: CF
                    type: I
                  senderDetail:
                    address:
                      country: USA
                      city: Washington
                      addressLine1: addressline1
                    name: Ben
                    type: C
                    senderAccountNumber: senderAccountNumber
                  payoutMethod: B
                  transactionDetail:
                    initiatingPartyId: 1002
                    businessApplicationId: FD
                    statementNarrative: advancepayment
                    transactionAmount: 1.5
                    transactionCurrencyCode: GBP
                    settlementCurrencyCode: GBP
                    clientReferenceId: '888852397088'
                    senderSourceOfFunds: '01'
              VDW Transaction Timeout Scenario:
                summary: VDW Transaction Timeout Scenario
                value:
                  recipientDetail:
                    lastName: Do
                    firstName: John
                    wallet:
                      countryCode: UGA
                      accountIdentifier: '+8801888513102'
                      accountIdentifierType: PHONENUMBER
                      currencyCode: UGX
                      operatorName: AIRTEL_MONEY
                    type: I
                  senderDetail:
                    senderReferenceNumber: '122342'
                    lastName: Sender
                    firstName: Ben
                    address:
                      country: USA
                      city: Washington
                      postalCode: '111222'
                      addressLine1: addressline5
                      state: CF
                    type: I
                  payoutMethod: W
                  transactionDetail:
                    initiatingPartyId: 1003
                    businessApplicationId: FD
                    transactionAmount: 1000
                    transactionCurrencyCode: USD
                    endToEndId: '123456'
                    clientReferenceId: '829149656561'
              VDA Transaction Timeout Scenario:
                summary: VDA Transaction Timeout Scenario
                value:
                  recipientDetail:
                    lastName: smith
                    firstName: Jessica
                    bank:
                      bankCode: '800554'
                      bankCodeType: SORT_CODE
                      accountNumberType: DEFAULT
                      accountName: Money Market
                      countryCode: GBR
                      bankName: Barclays
                      accountNumber: '6970095'
                      currencyCode: GBP
                    address:
                      country: GBR
                      city: London
                      postalCode: '675456'
                      addressLine1: 123 Main St
                      state: CF
                    type: I
                  senderDetail:
                    address:
                      country: USA
                      city: Washington
                      addressLine1: addressline1
                    name: Ben
                    type: C
                    senderAccountNumber: senderAccountNumber
                  payoutMethod: B
                  transactionDetail:
                    initiatingPartyId: 1002
                    businessApplicationId: FD
                    statementNarrative: advancepayment
                    transactionAmount: 1.5
                    transactionCurrencyCode: GBP
                    settlementCurrencyCode: GBP
                    clientReferenceId: '140466879604'
                    senderSourceOfFunds: '01'
              VDW Payment Received Scenario:
                summary: VDW Payment Received Scenario
                value:
                  recipientDetail:
                    lastName: Do
                    firstName: John
                    wallet:
                      countryCode: UGA
                      accountIdentifier: '+8801888513100'
                      accountIdentifierType: PHONENUMBER
                      currencyCode: UGX
                      operatorName: AIRTEL_MONEY
                    type: I
                  senderDetail:
                    senderReferenceNumber: '122342'
                    lastName: Sender
                    firstName: Ben
                    address:
                      country: USA
                      city: Washington
                      postalCode: '111222'
                      addressLine1: addressline5
                      state: CF
                    type: I
                  payoutMethod: W
                  transactionDetail:
                    initiatingPartyId: 1003
                    businessApplicationId: FD
                    transactionAmount: 1000
                    transactionCurrencyCode: USD
                    endToEndId: '123456'
                    clientReferenceId: '987399801024'
      responses:
        '200':
          description: Payout response body
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AccountPayoutResponse'
              examples:
                VDA Payment Received Scenario:
                  summary: VDA Payment Received Scenario
                  value:
                    transactionDetail:
                      transactionDateTime: '2022-11-16T10:36:07.000Z'
                      settlementCurrencyCode: GBP
                      payoutId: 5de56088-fdfc-31f2-83fa-fe6c3f66389b
                      clientReferenceId: '888852397088'
                      payoutSpeed: STANDARD
                      initiatingPartyId: 1002
                      fxConversionRate: 1
                      expectedPostingDate: '2022-11-16'
                      destinationCurrencyCode: GBP
                      transactionAmount: 1.5
                      transactionCurrencyCode: GBP
                      settlementAmount: 1557
                      status: PAYMENT_RECEIVED
                      destinationAmount: 1557
                VDW Transaction Timeout Scenario:
                  summary: VDW Transaction Timeout Scenario
                  value:
                    transactionDetail:
                      initiatingPartyId: 1003
                      clientReferenceId: '829149656561'
                      status: PENDING
                VDA Transaction Timeout Scenario:
                  summary: VDA Transaction Timeout Scenario
                  value:
                    transactionDetail:
                      initiatingPartyId: 1002
                      clientReferenceId: '140466879604'
                      status: PENDING
                VDW Payment Received Scenario:
                  summary: VDW Payment Received Scenario
                  value:
                    transactionDetail:
                      transactionDateTime: '2023-05-03T11:09:51.938Z'
                      settlementCurrencyCode: USD
                      payoutId: 02af4f36-7fa0-317d-b7ac-db99a68f435e
                      endToEndId: '123456'
                      clientReferenceId: '987399801024'
                      payoutSpeed: STANDARD
                      initiatingPartyId: 1003
                      fxConversionRate: 3613.25
                      expectedPostingDate: '2023-05-03'
                      destinationCurrencyCode: UGX
                      transactionAmount: 1000
                      transactionCurrencyCode: USD
                      settlementAmount: 1000
                      status: PAYMENT_RECEIVED
                      destinationAmount: 3613250
        '202':
          description: Transaction is accepted
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/202AccountPayoutCreatedResponse'
              examples:
                VDA Payment Received Scenario:
                  summary: VDA Payment Received Scenario
                  value:
                    transactionDetail:
                      transactionDateTime: '2022-11-16T10:36:07.000Z'
                      settlementCurrencyCode: GBP
                      payoutId: 5de56088-fdfc-31f2-83fa-fe6c3f66389b
                      clientReferenceId: '888852397088'
                      payoutSpeed: STANDARD
                      initiatingPartyId: 1002
                      fxConversionRate: 1
                      expectedPostingDate: '2022-11-16'
                      destinationCurrencyCode: GBP
                      transactionAmount: 1.5
                      transactionCurrencyCode: GBP
                      settlementAmount: 1557
                      status: PAYMENT_RECEIVED
                      destinationAmount: 1557
                VDW Transaction Timeout Scenario:
                  summary: VDW Transaction Timeout Scenario
                  value:
                    transactionDetail:
                      initiatingPartyId: 1003
                      clientReferenceId: '829149656561'
                      status: PENDING
                VDA Transaction Timeout Scenario:
                  summary: VDA Transaction Timeout Scenario
                  value:
                    transactionDetail:
                      initiatingPartyId: 1002
                      clientReferenceId: '140466879604'
                      status: PENDING
                VDW Payment Received Scenario:
                  summary: VDW Payment Received Scenario
                  value:
                    transactionDetail:
                      transactionDateTime: '2023-05-03T11:09:51.938Z'
                      settlementCurrencyCode: USD
                      payoutId: 02af4f36-7fa0-317d-b7ac-db99a68f435e
                      endToEndId: '123456'
                      clientReferenceId: '987399801024'
                      payoutSpeed: STANDARD
                      initiatingPartyId: 1003
                      fxConversionRate: 3613.25
                      expectedPostingDate: '2023-05-03'
                      destinationCurrencyCode: UGX
                      transactionAmount: 1000
                      transactionCurrencyCode: USD
                      settlementAmount: 1000
                      status: PAYMENT_RECEIVED
                      destinationAmount: 3613250
        '400':
          $ref: '#/components/responses/400ErrorResponses'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1visapayouts~1v3~1payouts/post'
          default: false
      x-hideTryIt: true
    delete:
      tags:
        - Visa Direct Account and Wallet Send API
      summary: Cancel Payout
      description: Cancel Payout Request
      operationId: CancelPayout
      parameters:
        - name: id
          in: query
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/PayoutIdentifier'
        - name: idType
          in: query
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/TransactionIdType'
        - name: initiatingPartyId
          in: query
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/InitiatingPartyId'
      responses:
        '200':
          $ref: '#/components/responses/CancelPayoutResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1visapayouts~1v3~1payouts/delete'
          default: false
      x-hideTryIt: true
  /visapayouts/v3/payouts/postingCalendar:
    get:
      tags:
        - Visa Direct Account and Wallet Send API
      summary: Get Posting Calendar
      description: >-
        This API retrieves the posting calendar for a currency/country
        combination from specific dates.
      operationId: GetPostingCalendar
      parameters:
        - name: initiatingPartyId
          in: query
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/InitiatingPartyId'
        - name: recipientBankCountryCode
          in: query
          required: true
          explode: true
          schema:
            description: >
              Beneficiary bank account country code.

              Format: 3-character ISO-3166 (Alpha-3) country code.


              (Refer to Payouts Endpoint Guide on country-specific required
              fields and lengths)


              ISO20022 field name: Creditor Agent Financial Institution Country
              Code.
            allOf:
              - $ref: '#/components/schemas/AlphaCountryCode'
        - name: recipientBankCurrencyCode
          in: query
          required: false
          explode: true
          schema:
            description: >
              Reflects the currency associated with the destination amount.


              Format: 3-character ISO-4217 (Alpha-3) currency code.


              ISO20022 field name:  Transaction Information And Status -
              Remitted Amount Currency Code.   
            allOf:
              - $ref: '#/components/schemas/AlphaCurrencyCode'
        - name: payoutSpeed
          in: query
          required: false
          explode: true
          schema:
            $ref: '#/components/schemas/PayoutSpeed'
        - name: numberOfProcessingDays
          in: query
          required: false
          explode: true
          schema:
            maximum: 30
            minimum: 1
            type: integer
            description: >
              This represents the number of days (Posting Dates) to be returned
              in the response.         
            example: 7
      responses:
        '200':
          $ref: '#/components/responses/GetPostingCalendarResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1visapayouts~1v3~1payouts~1postingCalendar/get'
          default: false
      x-hideTryIt: true
  /visapayouts/v3/payouts/accountBalance:
    get:
      tags:
        - Visa Direct Account and Wallet Send API
      summary: Get Account Balance
      description: >-
        The purpose of this API is to retrieve merchant's account currency
        balance.
      operationId: GetAccountBalance
      parameters:
        - name: initiatingPartyId
          in: query
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/InitiatingPartyId'
        - name: currencyCode
          in: query
          required: false
          explode: true
          schema:
            $ref: '#/components/schemas/AlphaCurrencyCode'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountBalanceResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1visapayouts~1v3~1payouts~1accountBalance/get'
          default: false
      x-hideTryIt: true
  /visapayouts/v3/payouts/validate:
    post:
      tags:
        - Visa Direct Account and Wallet Send API
      summary: Validate Payout
      description: >-
        This API allows an Originating Entity to validate the payload for a
        Accounts or wallet payout before sending in the actual payout request
        for processing, thus ensuring greater probability of success and
        allowing for a more seamless transaction flow.
      operationId: ValidatePayout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatePayoutRequest'
            examples:
              VDA Invalid Scenario:
                summary: VDA Invalid Scenario
                value:
                  recipientDetail:
                    lastName: smith
                    firstName: Jessica
                    bank:
                      bankCode: '800554'
                      bankCodeType: SORT_CODE
                      accountNumberType: DEFAULT
                      accountName: Money Market
                      countryCode: GBR
                      bankName: Barclays
                      accountNumber: '6970094'
                      currencyCode: GBP
                    address:
                      country: GBR
                      city: London
                      postalCode: '675456'
                      addressLine1: 123 Main St
                      state: CF
                    type: I
                  senderDetail:
                    address:
                      country: USA
                      city: Washington
                      addressLine1: addressline1
                    name: Ben
                    type: C
                    senderAccountNumber: senderAccountNumber
                  payoutMethod: B
                  transactionDetail:
                    initiatingPartyId: 1002
                    businessApplicationId: FD
                    statementNarrative: advancepayment
                    transactionAmount: 1.5
                    transactionCurrencyCode: GBP
                    settlementCurrencyCode: GBP
                    senderSourceOfFunds: '01'
              VDA Valid Scenario:
                summary: VDA Valid Scenario
                value:
                  recipientDetail:
                    lastName: smith
                    firstName: Jessica
                    bank:
                      bankCode: '800554'
                      bankCodeType: SORT_CODE
                      accountNumberType: DEFAULT
                      accountName: Money Market
                      countryCode: GBR
                      bankName: Barclays
                      accountNumber: '6970093'
                      currencyCode: GBP
                    address:
                      country: GBR
                      city: London
                      postalCode: '675456'
                      addressLine1: 123 Main St
                      state: CF
                    type: I
                  senderDetail:
                    address:
                      country: USA
                      city: Washington
                      addressLine1: addressline1
                    name: Ben
                    type: C
                    senderAccountNumber: senderAccountNumber
                  payoutMethod: B
                  transactionDetail:
                    initiatingPartyId: 1002
                    businessApplicationId: FD
                    statementNarrative: advancepayment
                    transactionAmount: 1.5
                    transactionCurrencyCode: GBP
                    settlementCurrencyCode: GBP
                    senderSourceOfFunds: '01'
              VDW Invalid Scenario:
                summary: VDW Invalid Scenario
                value:
                  recipientDetail:
                    lastName: Do
                    firstName: John
                    wallet:
                      countryCode: UGA
                      accountIdentifier: '+8801888513101'
                      accountIdentifierType: PHONENUMBER
                      currencyCode: UGX
                      operatorName: AIRTEL_MONEY
                    type: I
                  senderDetail:
                    senderReferenceNumber: '122342'
                    lastName: Sender
                    firstName: Ben
                    address:
                      country: USA
                      city: Washington
                      postalCode: '111222'
                      addressLine1: addressline5
                      state: CF
                    type: I
                  payoutMethod: W
                  transactionDetail:
                    initiatingPartyId: 1003
                    businessApplicationId: FD
                    transactionAmount: 1000
                    transactionCurrencyCode: USD
                    endToEndId: '123456'
              VDW Valid Scenario:
                summary: VDW Valid Scenario
                value:
                  recipientDetail:
                    lastName: Do
                    firstName: John
                    wallet:
                      countryCode: UGA
                      accountIdentifier: '+8801888513100'
                      accountIdentifierType: PHONENUMBER
                      currencyCode: UGX
                      operatorName: AIRTEL_MONEY
                    type: I
                  senderDetail:
                    senderReferenceNumber: '122342'
                    lastName: Sender
                    firstName: Ben
                    address:
                      country: USA
                      city: Washington
                      postalCode: '111222'
                      addressLine1: addressline5
                      state: CF
                    type: I
                  payoutMethod: W
                  transactionDetail:
                    initiatingPartyId: 1003
                    businessApplicationId: FD
                    transactionAmount: 1000
                    transactionCurrencyCode: USD
                    endToEndId: '123456'
      responses:
        '200':
          description: >-
            Business validation result - if the Payout request is valid and can
            be processed if sent as a payout transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatePayoutResponse'
              examples:
                VDA Invalid Scenario:
                  summary: VDA Invalid Scenario
                  value:
                    validationResultCode: INVALID
                    validationDetails:
                      - reason: invalidPayoutRequest
                        details: []
                        message: >-
                          There is an issue with the data of this transaction
                          and it cannot be processed
                VDA Valid Scenario:
                  summary: VDA Valid Scenario
                  value:
                    validationResultCode: VALID
                VDW Invalid Scenario:
                  summary: VDW Invalid Scenario
                  value:
                    validationResultCode: INVALID
                    validationDetails:
                      - reason: invalidPayoutRequest
                        details: []
                        message: >-
                          There is an issue with the data of this transaction
                          and it cannot be processed
                VDW Valid Scenario:
                  summary: VDW Valid Scenario
                  value:
                    validationResultCode: VALID_WITH_NETWORK
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1visapayouts~1v3~1payouts~1validate/post'
          default: false
      x-hideTryIt: true
  /visapayouts/v3/payouts/metadata:
    get:
      tags:
        - Visa Direct Account and Wallet Send API
      summary: Get Metadata
      description: >-
        This API provides all mandatory recipient data fields for a specified
        country/currency combination.
      operationId: GetMetadata
      parameters:
        - name: recipientCountry
          in: query
          description: |
            Recipient's 3-character ISO-3166 (Alpha-3) country code.
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/AlphaCountryCode'
        - name: recipientCurrencyCode
          in: query
          description: |
            Recipient's 3-character ISO-4217 (Alpha-3) currency code.
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/AlphaCurrencyCode'
        - name: recipientType
          in: query
          description: |
            Recipient's identity type 
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/Type'
        - name: senderType
          in: query
          description: |
            Sender's identity type 
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/Type'
        - name: payoutSpeed
          in: query
          required: false
          explode: true
          schema:
            $ref: '#/components/schemas/PayoutSpeed'
        - name: payoutMethod
          in: query
          required: true
          explode: true
          schema:
            type: string
            description: |
              Originating Entity must indicate the payout method e.g. to Account

              Valid ENUM values:
              - "B" Visa Direct Account
            enum:
              - B
        - name: initiatingPartyId
          in: query
          required: true
          explode: true
          schema:
            $ref: '#/components/schemas/InitiatingPartyId'
      responses:
        '200':
          $ref: '#/components/responses/GetMetaDataResponse'
        '400':
          $ref: '#/components/responses/400ErrorResponse'
        '401':
          $ref: '#/components/responses/401ErrorResponse'
        '403':
          $ref: '#/components/responses/403ErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '429':
          $ref: '#/components/responses/429ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1visapayouts~1v3~1payouts~1metadata/get'
          default: false
      x-hideTryIt: true
  /v3/payouts/statusNotification:
    post:
      tags:
        - Visa Direct Account and Wallet Receive API
      summary: Payout Status Notification
      description: >-
        The purpose of the API is to Enable Visa to provide updates of an pay to
        account or pay to wallet or pay to card transaction to originator
      operationId: PayoutStatusNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutNotification-1'
      responses:
        '200':
          description: ok
        '400':
          $ref: '#/components/responses/400NotificationsErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1v3~1payouts~1statusNotification/post'
          default: false
      x-hideSample: true
      x-hideTryIt: true
  /v3/payouts/ledgerNotification:
    post:
      tags:
        - Visa Direct Account and Wallet Receive API
      summary: Ledger Notification
      description: Ledger Notification
      operationId: LedgerNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedgerNotification'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400NotificationsErrorResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1v3~1payouts~1ledgerNotification/post'
          default: false
      x-hideSample: true
      x-hideTryIt: true
  /v3/payouts/balanceNotification:
    post:
      tags:
        - Visa Direct Account and Wallet Receive API
      summary: Account Balance Notification
      description: >-
        The purpose of this API is to provide virtual account (i.e. VAN) balance
        data driven by client's configuration and usage
      operationId: BalanceNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceNotification'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400ErrorResponse-1'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1v3~1payouts~1balanceNotification/post'
          default: false
      x-hideSample: true
      x-hideTryIt: true
  /v3/payouts/return:
    post:
      tags:
        - Visa Direct Account and Wallet Receive API
      summary: Payout Return Notification
      description: >-
        This API provides the Originating Entity with the ability to receive
        notifications on returns associated with their payouts
      operationId: PayoutReturnNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutReturnRequest-1'
      responses:
        '200':
          description: ok
        '400':
          $ref: '#/components/responses/400ErrorResponse-2'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/500ErrorResponse'
        '503':
          $ref: '#/components/responses/503ErrorResponse'
      x-operationVersions:
        - label: v3 - Latest
          operationPointer: '#/paths/~1v3~1payouts~1return/post'
          default: false
      x-hideSample: true
      x-hideTryIt: true
components:
  schemas:
    BankName:
      maxLength: 50
      minLength: 1
      type: string
      example: Bank of America
    QueryPayoutIdResponse200-1:
      required:
        - originatorDetail
        - transactionDetail
      type: object
      properties:
        recipientDetail:
          type: object
          properties:
            bank:
              required:
                - accountName
                - accountNumber
                - bankName
                - countryCode
              type: object
              properties:
                bankName:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: Recipient bank name
                accountName:
                  maxLength: 70
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank account name i.e. accountholder name as
                    recorded on recipient bank account
                countryCode:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: |-
                    Recipient bank account country code
                    Format: 3-digit ISO-3166 (numeric) country code
                accountNumber:
                  maxLength: 34
                  minLength: 1
                  type: string
                  description: Recipient bank account number
              description: This object is only relevant for P2A transactions.
            wallet:
              required:
                - accountIdentifier
                - accountIdentifierType
                - countryCode
                - currencyCode
              type: object
              properties:
                countryCode:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: |-
                    Recipient wallet country code.
                    Format: 3-digit ISO-3166 (numeric) country code
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  type: string
                  description: |-
                    Recipient wallet country code.
                    Format: 3-digit ISO-4217 (numeric) currency code
                operatorName:
                  type: string
                  description: >-
                    This identifies the non bank wallet operator that has issued
                    the account to the recipient and is going to receive and
                    post the funds to the recipients account. Enum provided by
                    Visa Direct to Wallet Operator.
                  enum:
                    - WECHATPAY
                accountIdentifier:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: "This identifies the identifier of the recipients account with the wallet operator to which the funds have to be deposited. (e.g., wallet address - phone/email/custom identifier that identifies the account with the digital wallet operator)\n-\tIf EMAIL then verify whether the Email is in valid Email format\n-\tIf PHONENUMBER then verify if the value is numeric , + at the beginning of the value will be considered as valid. e.g. +65123456789 (note, refer ISO spec E.164)\n-\tIf USERNAME then check whether it is a valid string. \n\nNote - An E.164 number has three components.\n1. The prefix +.\n2. A 1-3 digit country code.\n3. A subscriber number."
                accountIdentifierType:
                  type: string
                  description: >-
                    This identifies type of account Identifier. Supported values
                    are PHONENUMBER, EMAIL, USERNAME.
                  enum:
                    - PHONENUMBER
                    - EMAIL
                    - USERNAME
              description: This object is only relevant for P2W transactions.
        originatorDetail:
          required:
            - bankId
            - originatorId
          type: object
          properties:
            bankId:
              type: integer
              description: >-
                Originating bank ID is the Bank Identification Number (BIN)
                assigned to each Visa Member upon enrollment. If the Originator
                is not a Financial Institution (FI) and will be processing using
                a sponsor FI (i.e. Acquirer ) , this is the BIN of the
                sponsoring FI (Acquirer). It uniquely identifies the Bank/FI
                that is sponsoring the Originating Entity in Visa’s core system.
                Note: This is also referred to as the “Acquiring BIN” by Visa
            originatorId:
              maxLength: 15
              minLength: 1
              type: string
              description: >-
                An alphanumeric field that uniquely identifies the Originating
                Entity for Push to Account or Push to Wallet transactions and
                Card Acceptor Terminal ID (CAID) for Push to Card transactions.


                ISO20022 field name: N/A

                P2A: Mandatory 

                P2W: Mandatory 

                P2C: N/A
            merchantVerificationValue:
              type: integer
              description: >-
                Conditional The concatenated Merchant Verification Value of Visa
                assigned and Acquirer assigned value is returned.
                 Note: This field is present if the MVV value was included on the Send Payout request.

                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
        transactionDetail:
          required:
            - originalTransmissionDateTime
            - payoutId
            - retrievalReferenceNumber
            - status
            - statusUpdateTime
            - systemTraceAuditNumber
            - transactionAmount
            - transactionCurrencyCode
          type: object
          properties:
            authId:
              type: integer
              description: >-
                This is a unique authorization code for an approved transaction
                from Issuer.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
            status:
              type: string
              description: >
                Status of the transaction being queried


                P2C Valid Value are:

                COMPLETED, IN_PROGRESS, FAILED, PENDING, CANCELLED


                Status definition:

                - COMPLETED - Transaction was processed by Visa.

                - IN_PROGRESS - Transaction is in progress, being processed by
                Visa

                - FAILED - Transaction was received and rejected by Visa

                - PENDING - Transaction is pending for processing by Visa

                - CANCELLED - Transaction was cancelled as requested by the
                originating acquirer


                P2A Valid Value are:

                PAYMENT_RECEIVED, PENDING, PAYMENT_SENT, VALIDATION_FAILED,
                AWAITING_INFORMATION, PENDING_CANCELLATION, RETURNED, ERROR,
                DECLINED, CANCELLED


                P2A Status definition:

                PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received

                PENDING : Payout request is pending validation

                PAYMENT_SENT: The payout has been submitted to the Network
                partner by PSP

                VALIDATION_FAILED: Payout request failed validation and will not
                be processed further

                AWAITING_INFORMATION: PSP is awaiting more information from
                Originating Entity before transaction can be processed 

                PENDING_CANCELLATION: Cancel payout request is pending

                RETURNED: Payout has been returned and funds are being refunded

                ERROR: Payout is in error status. Ex: HTTP 500, 404 403 etc.,

                DECLINED: Payout is declined by Visa and will not be proccessed
                further

                CANCELLED: Payout has been successfully cancelledn


                P2W Valid Value are:

                PAYMENT_RECEIVED, PENDING, PAYMENT_SENT, VALIDATION_FAILED,
                AWAITING_INFORMATION, PENDING_CANCELLATION, RETURNED, ERROR,
                DECLINED, CANCELLED


                P2W Status definition:

                PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received

                PENDING : Payout request is pending validation

                PAYMENT_SENT: The payout has been submitted to the Network
                partner by PSP

                VALIDATION_FAILED: Payout request failed validation and will not
                be processed further

                AWAITING_INFORMATION: PSP is awaiting more information from
                Originating Entity before transaction can be processed 

                PENDING_CANCELLATION: Cancel payout request is pending

                RETURNED: Payout has been returned and funds are being refunded

                ERROR: Payout is in error status. Ex: HTTP 500, 404 403 etc.,

                DECLINED: Payout is declined by Visa and will not be proccessed
                further

                CANCELLED: Payout has been successfully cancelledn
              enum:
                - PAYMENT_RECEIVED
                - PENDING
                - PAYMENT_SENT
                - VALIDATION_FAILED
                - AWAITING_INFORMATION
                - PENDING_CANCELLATION
                - RETURNED
                - ERROR
                - DECLINED
                - CANCELLED
                - IN_PROGRESS
                - FAILED
            payoutId:
              maxLength: 50
              minLength: 1
              type: string
              description: >-
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for P2A, P2W and
                Reversals, Chargeback, Response, Advice for P2C.
            networkId:
              maxLength: 4
              minLength: 1
              type: string
              description: >-
                This contains a code that identifies the network on which the
                transaction was processed.
                 Note: This field is returned only if it is anything other than networkId value 2. Supported only in US for domestic transactions

                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Conditional
            tokenData:
              type: object
              properties:
                accountRange:
                  type: integer
                  description: >-
                    Contains the first 9 digits of the cardholder PAN..

                    Note: Acquirers must not forward this value to their
                    merchants after receiving it in the response message from
                    Visa.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                accountSuffix:
                  maxLength: 4
                  minLength: 4
                  type: string
                  description: >-
                    Last four digits of the card number/PAN 

                    Note: This is only relevant for push to card payouts, where
                    a card network token was sent by the Originating Entity in
                    the payout request (in the
                    recipientDetail.card.accountNumber field).


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                additionalTokenRespInfo:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This field when present in the API response identifies if
                    the transaction is eligible for token services. Valid token
                    service values are: 1 (Token program). <br><br> This field
                    will not be present in the response if the transaction is
                    ineligible for token services. <br><br> ISO20022 field name:
                    N/A P2A: N/A P2C: Optional
            endToEndId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity's customer to
                uniquely identify the transaction


                ISO20022 field name: Payment Identification - EndtoEnd
                Identification
            settlement:
              type: object
              properties:
                date:
                  maxLength: 10
                  minLength: 10
                  pattern: YYYY-MM-DD
                  type: string
                  description: >-
                    This is date when the transaction is settled between Visa
                    and the Acquirer 


                    P2A: Conditional (Mandatory when the transaction is settled)

                    P2W: N/A

                    P2C: Conditional (Mandatory when the transaction is settled)
                amount:
                  type: integer
                  description: >-
                    Contains the transaction amount converted to settlement
                    currency, expressed in the currency specified in
                    settlementCurrencyCode field. 


                    P2A: This field will be populated for Accelerated Settlement
                    transactions.

                    P2W: N/A

                    P2C: N/A


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to the Payouts Endpoint Guide
                    for P2A on country-specific currency minor units. Refer to
                    SMS POS Visa & Visa Electron

                    Technical Specifications - Appendix E Country and Currency
                    codes for P2C.


                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should populate “10099”. If the
                    amount is $100.00 then this field should populate “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should populate “10000”.
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  type: string
                  description: >-
                    The 3-digit ISO-4217 code in this field reflects the
                    currency associated with the settlement amount 

                    Format: 3-digit ISO-4217 (numeric) currency code


                    P2A: This field will be populated for Accelerated Settlement
                    transactions.

                    P2W: N/A

                    P2C: N/A
                rateSourceId:
                  type: string
                  description: >-
                    Contains the source ID of the foreign exchange rate applied
                    to the derive the settlement amount in case of cross
                    currency payment.


                    P2A: Conditional (Mandatory when the transaction is settled
                    via VisaNet)

                    P2W: N/A

                    P2C: Conditional (Mandatory when the transaction is settled)
                conversionRate:
                  maxLength: 14
                  minLength: 1
                  pattern: \d{1,7}(\.\d{1,12})?
                  type: string
                  description: >-
                    Contains the foreign exchange rate applied to the derive the
                    settlement amount in case of cross currency payment.


                    Conditional (Mandatory when the transaction is settled via
                    VisaNet)


                    ISO20022 field name: Transaction Information And Status -
                    Remittance Information Settlement Conversion or FX Rate


                    P2A: This field will be populated for Accelerated Settlement
                    transactions.

                    P2W: N/A

                    P2C: N/A
            responseCode:
              type: integer
              description: >-
                Response code that provides the result of the payout request.
                List of valid response codes (add VDP link
                (https://developer.visa.com/request_response_codes#action_code))
            returnAmount:
              type: integer
              description: >-
                The return amount to be paid out to the Originating Entity
                expressed in the currency specified in returnCurrencyCode field.

                The amount originally assessed for settlement on the Payout will
                be reversed as-is in case of rejects and cancellations.

                In case of returns from Visa's network partner on a
                cross-currency transaction, this value could vary from the
                settlement amount on the original payout.


                This field will be populated for Accelerated Settlement
                transactions.
              example: 12345
            fundingStatus:
              type: string
              description: >-
                Funding Status of the payout transaction


                Possible values: "FUNDED" "NOT_FUNDED"


                FUNDED - Indicates that the originating entity has provided
                funding for the transaction and Visa Direct has allocated funds
                to the transaction

                NOT_FUNDED - Indicates that the originating entity has not
                provided funding for the transaction
                 
                P2A: Conditional (will be populated after the funding has been
                assessed) 

                P2W: Conditional (will be populated after the funding has been
                assessed)
              enum:
                - FUNDED
                - NOT_FUNDED
            returnDateTime:
              pattern: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.\0\0\0Z
              type: string
              description: >-
                This field contains the date and time Visa has returned the
                payout to the Originating Entity

                Format: YYYY-MM-DDThh:mm:ss.000Z

                Example: 2021-01-01T22:52:46.000Z


                ISO20022 field name: Payment Return - Message Creation Date Time
              example: '2020-05-05T12:12:12.000Z'
            nationalNetData:
              type: object
              properties:
                reimbursementFee:
                  type: number
                  description: >-
                    Applies to Argentina domestic data only and indicates the
                    installment payment details for Argentina National Net
                    Settlement Service.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                  format: double
                memberSuppliedIRF:
                  maxLength: 13
                  minLength: 1
                  type: string
                  description: >-
                    This field contains the client-calculated interchange
                    reimbursement fee (IRF) for countries using this capability.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                reimbursementAttribute:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Contains a code that identifies the applicable interchange
                    reimbursement fee for a transaction. Its an optional value
                    and if not supplied by Originating entities, Visa applies
                    default value 0 and passes onwards to Issuers/Receiving
                    entities.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
            statusUpdateTime:
              pattern: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.000Z
              type: string
              description: >-
                This is the time when latest event reflected in
                transactionDetail.status is processed using Visa’s clock Format:
                UTC time YYYY-MM-DThh:mm:ss.000Z Example:
                2021-01-01T22:52:46.000Z
              format: UTC time YYYY-MM-DThh:mm:ss.000Z
              example: '2021-01-01T22:52:46.000Z'
            clientReferenceId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity to uniquely
                identify the transaction


                ISO20022 field name: Payment Identification - Transaction
                Identification
            destinationAmount:
              type: integer
              description: >-
                The destination amount that will be deposited to the recipient
                account, expressed in the destination currency code provided in
                the original request. If the Originating Entity sends a payout
                in a currency that is not the same as the destination currency
                then Visa will perform FX conversion and calculate the amount to
                be deposited to the recipient bank account, and provide this
                information back to the Originating Entity.


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to the Payouts Endpoint Guide for
                P2A on country-specific currency minor units. Refer to SMS POS
                Visa & Visa Electron Technical Specifications - Appendix E
                Country and Currency codes for P2C.


                Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.
            transactionAmount:
              type: integer
              description: >-
                The transaction amount to be paid out to the recipient bank
                account or card. Expressed in the currency specified in
                transaction currency code.


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to the Payouts Endpoint Guide for
                P2A on country-specific currency minor units. Refer to SMS POS
                Visa & Visa Electron Technical Specifications - Appendix E
                Country and Currency codes for P2C.


                Example: Currency exponent for USD is 2. If the transaction
                amount is $100.99, then this field should populate “10099”. If
                the transaction amount is $100.00 then this field should
                populate “10000”. Currency exponent for JPY is 0. If the
                transaction amount is JPY 10,000, then this field should
                populate “10000”.
            returnCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnAmount value. It will be same
                as the client’s settlement currency against the original payout
                transaction.


                This field will be populated for Accelerated Settlement
                transactions.
              example: '840'
            returnSourceAmount:
              type: integer
              description: "The return amount as sent by Visa’s network partner in the destination country, expressed in the currency specified in returnSourceCurrencyCode field. \nThis field will be\_conditionally present when returnReasonDetails.type=”RETURN\"."
              example: 12345
            expectedPostingDate:
              maxLength: 10
              minLength: 10
              type: string
              description: >-
                This is an estimated date by which the payout should be posted
                to the recipient’s account. This date should be communicated to
                the sender and recipient (if possible) to ensure that they know
                when to expect the funds

                Conditional (Mandatory for an approved transaction) 

                P2C: N/A
              format: YYYY-MM-DD
            feeProgramIndicator:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                Contains the fee program indicator, which is used to assess the
                Interchange Fee Amount in certain scenarios


                ISO20022 field name: n/a

                P2A: N/A

                P2W: N/A

                P2C: Optional
            returnReasonDetails:
              type: object
              properties:
                code:
                  maxLength: 5
                  minLength: 5
                  type: string
                  description: >-
                    Indicates the return reason code when the payout is
                    returned.
                type:
                  type: string
                  description: Indicates the PSP return type when the payout is returned.
                  enum:
                    - REJECT
                    - RETURN
                description:
                  maxLength: 105
                  minLength: 1
                  type: string
                  description: >-
                    Indicates the PSP return description when the payout is
                    returned.
            returnConversionRate:
              maxLength: 14
              type: string
              description: >-
                This field contains the exchange rate applied to convert
                returnSourceAmount to returnAmount.


                This field will be populated for Accelerated Settlement
                transactions.
              format: \d{1,7}(\.\d{1,12})?
            serviceProcessingType:
              required:
                - requestType
              type: object
              properties:
                requestType:
                  maxLength: 2
                  minLength: 2
                  type: string
                  description: 'Reserved for future use.</br></br>P2A: N/A P2C: Optional'
              description: >-
                This field will contain values that identifies the type of
                service assigned for the transaction.
            transactionIdentifier:
              maxLength: 15
              minLength: 15
              type: string
              description: >-
                Visa-generated Transaction Identifier that is unique for each
                original authorization and financial request. The identifier
                links original messages to subsequent messages, such as those
                for exception item processing and clearing records. It can also
                be used to match the payouts to settlement reports.
            systemTraceAuditNumber:
              maxLength: 6
              minLength: 6
              type: string
              description: >-
                This field contains a number assigned by the Originating Entity
                that uniquely identifies a transaction and all message types.
                The trace number is a key data element used to match a response
                to its request or to match a message to others for a given
                transaction set
            destinationCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated with the destination amount 

                Format: 3-digit ISO-4217 (numeric) currency code


                P2A: Optional 

                P2W: Optional 

                P2C: N/A
            transactionCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated to the transaction amount Format: 3-digit ISO-4217
                (numeric) currency code
            retrievalReferenceNumber:
              maxLength: 12
              minLength: 12
              pattern: ^\d{12}$
              type: string
              description: >-
                This is a unique identifier generated by the Originating Entity
                for a transaction and its one of the key fields for matching a
                transaction with the subsequent messages with in the transaction
                set example Notification, Returns, Cancel, Exception management
                via VD Portal for P2A, P2W and Reversals, Chargeback, Response,
                Advice for P2C.


                The format is recommended to be ydddhhnnnnnn yddd - The first
                four digits must be a valid Julian date format, where the first
                digit = 0-9 (last digit of current year) and the next three
                digits = 001-366 (number of the day in the year). hh - can be
                the two digit hour in a 24 hour clock (00-23) during which the
                transaction is performed. nnnnnn - can be the
                systemsTraceAuditNumber or any 6 digit number
            returnSourceCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: "The 3-character ISO-4217 code in this field reflects the currency associated with the returnSourceAmount value. It will be same as the destination currency on the original payout transaction. \nThis field will be\_conditionally present when returnReasonDetails.type=”RETURN\"."
              example: '840'
            destinationConversionRate:
              maxLength: 14
              type: string
              description: >-
                This field contains the exchange rate applied to convert
                transactionAmount to destinationAmount.
              format: \d{1,7}(\.\d{1,12})?
            originalTransmissionDateTime:
              type: string
              description: The time the request was received by Visa
              format: YYYY-MM-DDThh:mm:ss.sssZ
    AlphaCountryCode:
      maxLength: 3
      minLength: 3
      type: string
      description: 3-character ISO-3166 (Alpha-3) country code.
      example: USA
    SenderAccountPayoutAddress:
      required:
        - addressLine1
        - city
        - country
      type: object
      properties:
        city:
          description: >
            Sender address city


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Ultimate Debtor Address Town Name
          allOf:
            - $ref: '#/components/schemas/City'
        state:
          description: >
            Sender address state


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Ultimate Debtor Address Country Sub-division
          allOf:
            - $ref: '#/components/schemas/Province'
        country:
          description: >
            Sender address country


            Format: 3-character ISO-3166 (Alpha-3) country code


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Ultimate Debtor Address Country
          allOf:
            - $ref: '#/components/schemas/AlphaCountryCode'
        postalCode:
          description: >
            Sender address postal code


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Ultimate Debtor Address Postal Code
          allOf:
            - $ref: '#/components/schemas/PostalCode'
        addressLine1:
          description: >
            Sender address line 1


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Ultimate Debtor Address Line 1
          allOf:
            - $ref: '#/components/schemas/AddressLine1'
        addressLine2:
          description: >
            Sender address line 2


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Ultimate Debtor Address Line 2
          allOf:
            - $ref: '#/components/schemas/AddressLine2'
    PayoutNotificationReceivedRequest-1:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod'
        transactionDetail:
          required:
            - clientReferenceId
            - destinationAmount
            - destinationCurrencyCode
            - initiatingPartyId
            - notificationDateTime
            - payoutId
            - settlementAmount
            - settlementCurrencyCode
            - status
            - transactionAmount
            - transactionCurrencyCode
            - transactionDateTime
          type: object
          properties:
            status:
              type: string
              description: >
                Status of the transaction, only received in 202

                - PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received. Only happens in 202.

                ISO20022 field name: Transaction Information And Status -
                Transaction Status
              example: PAYMENT_RECEIVED
              allOf:
                - $ref: '#/components/schemas/PayoutNotificationRequestStatus'
              enum:
                - PAYMENT_RECEIVED
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for the
                original payout


                ISO20022 field name: Transaction Information And Status -
                Original Additional Remittance Information
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            payoutSpeed:
              $ref: '#/components/schemas/PayoutSpeed'
            fxConversionRate:
              description: >
                This field contains the exchange rate applied to the pair of
                settlementCurrencyCode and destinationCurrencyCode
              allOf:
                - $ref: '#/components/schemas/ConversionRate'
            settlementAmount:
              description: >
                This is the amount to be debited from Originating Entity/Visa
                Client's funding account.
              allOf:
                - $ref: '#/components/schemas/Amount'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            destinationAmount:
              description: >
                The destination amount that will be deposited to the beneficiary
                account, expressed in the destination currency code provided in
                the original request. If the Originating Entity sends a payout
                in a currency that is not the same as the destination currency
                then Visa will perform FX conversion and calculate the amount to
                be deposited to the beneficiary bank account, and provide this
                information back to the Originating Entity.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Transaction Information And Status -
                Remitted Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            transactionAmount:
              description: >
                The amount to debit from merchant's funding account or credit to
                beneficiary's bank account.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            expectedPostingDate:
              allOf:
                - $ref: '#/components/schemas/ExpectedPostingDate-1'
            transactionDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            notificationDateTime:
              $ref: '#/components/schemas/TimestampType'
            settlementCurrencyCode:
              description: >
                The settlement currency code


                The 3-character ISO-4217 code in this field reflects the
                currency for the Settlement amount to be debited from
                Originating Entity/Visa Client's funding account.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: GBP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            destinationCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the destination amount 


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Transaction Information And Status -
                Remitted Amount Currency Code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            transactionCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount 


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Transaction Information And Status -
                Instructed Amount Currency Code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    WalletPayoutRequest:
      required:
        - transactionDetail
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/WalletTransactionDetail'
      allOf:
        - $ref: '#/components/schemas/PayoutWalletRequest'
    PayoutNotificationReceivedRequest-2:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod-1'
        transactionDetail:
          required:
            - clientReferenceId
            - destinationAmount
            - destinationCurrencyCode
            - initiatingPartyId
            - notificationDateTime
            - payoutId
            - settlementAmount
            - settlementCurrencyCode
            - status
            - transactionAmount
            - transactionCurrencyCode
            - transactionDateTime
          type: object
          properties:
            status:
              type: string
              description: >
                Status of the transaction, only received in 202


                Status definition (add a link to Status Transition diagram on
                VDP):

                - PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received. Only happens in 202.

                ISO20022 field name: Transaction Information And Status -
                Transaction Status
              example: PAYMENT_RECEIVED
              allOf:
                - $ref: '#/components/schemas/PayoutNotificationRequestStatus'
              enum:
                - PAYMENT_RECEIVED
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for the
                original payout


                ISO20022 field name: Transaction Information And Status -
                Original Additional Remittance Information
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            payoutSpeed:
              $ref: '#/components/schemas/PayoutSpeed'
            fxConversionRate:
              description: >
                This field contains the exchange rate applied to the pair of
                settlementCurrencyCode and destinationCurrencyCode
              allOf:
                - $ref: '#/components/schemas/ConversionRate-1'
            settlementAmount:
              description: >
                This is the amount to be debited from Originating Entity/Visa
                Client's funding account.
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            destinationAmount:
              description: >
                The destination amount that will be deposited to the beneficiary
                account, expressed in the destination currency code provided in
                the original request. If the Originating Entity sends a payout
                in a currency that is not the same as the destination currency
                then Visa will perform FX conversion and calculate the amount to
                be deposited to the beneficiary bank account, and provide this
                information back to the Originating Entity.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Transaction Information And Status -
                Remitted Amount
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId-1'
            transactionAmount:
              description: >
                The amount to debit from merchant's funding account or credit to
                beneficiary's bank account.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            expectedPostingDate:
              allOf:
                - $ref: '#/components/schemas/ExpectedPostingDate-2'
            transactionDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            notificationDateTime:
              $ref: '#/components/schemas/TimestampType'
            settlementCurrencyCode:
              description: >
                The settlement currency code


                The 3-character ISO-4217 code in this field reflects the
                currency for the Settlement amount to be debited from
                Originating Entity/Visa Client's funding account.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: GBP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            destinationCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the destination amount 


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Transaction Information And Status -
                Remitted Amount Currency Code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            transactionCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount 


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Transaction Information And Status -
                Instructed Amount Currency Code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    PayoutWalletRequest-1:
      required:
        - payoutMethod
        - recipientDetail
        - senderDetail
      type: object
      properties:
        payoutMethod:
          description: >
            Originating Entity must indicate the payout method i.e. To Account
            or Wallet


            Valid values:

            “W” – Send to Wallet
          allOf:
            - $ref: '#/components/schemas/PayoutMethod-1'
        senderDetail:
          properties:
            contactEmail:
              description: |
                Sender email address

                ISO20022 field name: Ultimate Debtor Contact Email Address
              allOf:
                - $ref: '#/components/schemas/ContactEmail'
            contactNumber:
              description: >
                Sender contact number

                Format: Symbol + followed by digits, no other symbols, e.g. like
                +447809713678 (note, refer ISO spec E.164)

                ISO20022 field name: Ultimate Debtor Contact Phone Number
              allOf:
                - $ref: '#/components/schemas/ContactNumber-1'
            additionalData:
              $ref: '#/components/schemas/SenderAdditionalData'
            contactNumberType:
              type: string
              enum:
                - MOBILE
                - WORK
                - HOME
            identificationList:
              $ref: '#/components/schemas/SenderIdentificationList'
            senderAccountNumber:
              $ref: '#/components/schemas/SenderAccountNumber-1'
            senderReferenceNumber:
              $ref: '#/components/schemas/SenderReferenceNumber'
          allOf:
            - $ref: '#/components/schemas/SenderTransactorDetail-1'
        recipientDetail:
          required:
            - wallet
          properties:
            wallet:
              $ref: '#/components/schemas/Wallet-1'
            contactEmail:
              description: |
                Recipient email address

                ISO20022 field name: Ultimate Creditor Contact Email Address
              allOf:
                - $ref: '#/components/schemas/ContactEmail'
            contactNumber:
              description: >
                Recipient contact number

                Format: Symbol + followed by digits, no other symbols, e.g. like
                +447809713678 (note, refer ISO spec E.164)

                ISO20022 field name: Ultimate Creditor Contact Phone Number
              allOf:
                - $ref: '#/components/schemas/ContactNumber-1'
            additionalData:
              $ref: '#/components/schemas/RecipientAdditionalData'
            contactNumberType:
              type: string
              enum:
                - MOBILE
                - WORK
                - HOME
            identificationList:
              properties:
                idType:
                  description: >
                    Recipient identification type (issued by a government or
                    similar authority) needs to be provided by Originating
                    Entity along with the payment in certain markets. 


                    Valid values : 

                    * P- Passport 

                    * D-Driving License 

                    * N-National Id 

                    * T-Tax Id 

                    * L-Legal Entity Registration Number 

                    * F-Foreign Id


                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)


                    ISO20022 field name: Creditor Identification Code
              allOf:
                - $ref: '#/components/schemas/RecipientIdentificationList'
          allOf:
            - $ref: '#/components/schemas/RecipientTransactorDetail-1'
    401ErrorResponseObject:
      type: object
      properties:
        reason:
          type: string
          description: The short description of the error.
        status:
          maximum: 999
          minimum: 100
          type: integer
          description: 3 digit HTTP status code
          example: 401
        details:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: A short code indicating the specific error that occurred.
              message:
                type: string
                description: The long description of the specific error that occurred.
              location:
                type: string
                description: >-
                  The place in the incoming message that the particular error
                  occurred.
        message:
          type: string
          description: The long description of the error
    PayoutSpeed:
      type: string
      description: >
        Originating Entity to indicate the desired payout speed for the payment.
        Currently supported value is "STANDARD". This field will be enhanced in
        future to include additional speed options


        ISO20022 field name: Instruction Priority
      example: standard
      enum:
        - STANDARD
        - PREMIUM
    StructuredReferenceName:
      maxLength: 35
      minLength: 1
      type: string
      description: SRI Name of the field.
      example: amount, documentType
    RecipientAdditionalData:
      type: array
      description: >-
        Additional fields that are needed in order to complete the additional
        screening. The additional fields can be included as name value pairs
        (Field name, Field value)
      items:
        required:
          - name
          - value
        type: object
        properties:
          name:
            description: >
              Originating Entity to send additional recipient information needed
              in order to process the payment. The additional fields can be
              included as name value pairs (Field name, Field value). This field
              represents the name component of the name-value pair.


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)
            allOf:
              - $ref: '#/components/schemas/AdditionalDataName'
          value:
            description: >
              Originating Entity to send additional recipient information needed
              in order to process the payment. The additional fields can be
              included as name value pairs (Field name, Field value). This field
              represents the value  component of the name-value pair.


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)
            allOf:
              - $ref: '#/components/schemas/AdditionalDataValue'
    AccountTransactionDetail:
      required:
        - businessApplicationId
        - clientReferenceId
        - initiatingPartyId
        - transactionAmount
        - transactionCurrencyCode
      type: object
      properties:
        quoteId:
          $ref: '#/components/schemas/QuoteId'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        payoutSpeed:
          $ref: '#/components/schemas/PayoutSpeed'
        additionalData:
          $ref: '#/components/schemas/TransactionalAdditionalData'
        purposeOfPayment:
          description: >
            Purpose of payment is required in certain markets to clearly
            identify the purpose of the payment based on the standard values
            defined for respective market

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Purpose of Payment
          allOf:
            - $ref: '#/components/schemas/PurposeOfPayment'
        clientReferenceId:
          $ref: '#/components/schemas/ClientReferenceId'
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId'
        transactionAmount:
          description: >
            The amount to debit from merchant's funding account or credit to
            beneficiary's bank account.

            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 

            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.

            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
        statementNarrative:
          allOf:
            - $ref: '#/components/schemas/StatementNarrative'
        senderSourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds'
        structuredRemittance:
          description: >
            This object carries ISO20022 SMI data. It applies to Visa Direct
            Account payouts only.
          allOf:
            - $ref: '#/components/schemas/TransactionalStructuredRemittance'
        businessApplicationId:
          $ref: '#/components/schemas/BusinessApplicationId'
        settlementCurrencyCode:
          description: >
            The settlement currency code

            The 3-character ISO-4217 code in this field reflects the currency
            for the Settlement amount to be debited from Originating Entity/Visa
            Client's funding account.

            Format: 3-character ISO-4217 (Alpha-3) currency code


            <b>This field is mandatory</b>


            Example: GBP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        transactionCurrencyCode:
          description: >
            The 3-character ISO-4217 code in this field reflects the currency
            associated to the transaction amount. 

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: PHP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        senderBeneficiaryRelationship:
          $ref: '#/components/schemas/BeneficiaryRelationship'
    CancelPayout200Response:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          required:
            - status
          type: object
          properties:
            status:
              type: string
              description: >-
                Status of the cancel request


                Valid Value are: PENDING_CANCELLATION, CANCELLED


                Status definition (add a link to Status Transition diagram on
                VDP):


                PENDING_CANCELLATION: Cancel payout request is pending

                CANCELLED: A transaction has been successfully cancelled,
                because it was never sent to the network partner
              example: Cancelled
              enum:
                - Pending Cancellation
                - Cancelled
    FieldValue:
      title: FieldValue
      type: object
      properties:
        label:
          type: string
          description: List item label.
        option:
          type: string
          description: List option value.
      description: >-
        Is used to create a select list within a User Interface for the
        'additionalFieldWithValues' data field.
    RecipientTransactorDetail:
      oneOf:
        - $ref: '#/components/schemas/RecipientIndividual'
        - $ref: '#/components/schemas/RecipientCompany'
    PayoutNotification-2:
      oneOf:
        - $ref: '#/components/schemas/PayoutNotificationReceivedRequest-2'
        - $ref: '#/components/schemas/PayoutNotificationProcessRequest-2'
        - $ref: '#/components/schemas/PayoutNotificationFailedRequest-2'
    InvalidPayoutResponse-1:
      required:
        - validationDetails
        - validationResultCode
      type: object
      properties:
        validationDetails:
          type: array
          description: comprehensive array of errors
          items:
            $ref: '#/components/schemas/ErrorResponse-1'
        validationResultCode:
          type: string
          description: |
            - INVALID - see validationDetails for validation errors
          enum:
            - INVALID
    AmountWithZero-1:
      minimum: 0
      type: number
      description: This field only applies to 'THRESHOLD' and 'LIQUIDITY_FAILURE' eventType
      format: double
      example: 12.34
    PayoutFromOriginator201Response:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          required:
            - retrievalReferenceNumber
            - systemTraceAuditNumber
          type: object
          properties:
            payoutId:
              maxLength: 50
              minLength: 1
              type: string
              description: >-
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for P2A and
                Reversals, Chargeback, Response, Advice for P2C. 


                ISO20022 field name: Transaction Information And Status -
                Additional Remittance Information

                P2A: Mandatory 

                P2W: Mandatory 

                P2C: Mandatory
              x-variant: '| positive'
            endToEndId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity's customer to
                uniquely identify the transaction


                ISO20022 field name: Transaction Information And Status -
                Original Transaction Identification

                P2A: Optional

                P2W: Optional

                P2C: N/A
            clientReferenceId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity to uniquely
                identify the transaction


                ISO20022 field name: Transaction Information And Status -
                Original Transaction Identification

                P2A: Optional

                P2W: Optional

                P2C: N/A
            systemTraceAuditNumber:
              maxLength: 6
              minLength: 6
              type: string
              description: >-
                This field contains a number assigned by the Originating Entity
                that uniquely identifies a transaction and all message types.
                The trace number is one of the key data elements used to match a
                response to its request or to match a message to others for a
                given transaction set
            retrievalReferenceNumber:
              maxLength: 12
              minLength: 12
              pattern: ^\d{12}$
              type: string
              description: >-
                This is a unique identifier generated by the Originating Entity
                for a transaction and its one of the key fields for matching a
                transaction with the subsequent messages with in the transaction
                set example Notification, Returns, Cancel, Exception management
                via VD Portal for P2A , P2W and Reversals, Chargeback, Response,
                Advice for P2C.


                The format is recommended to be ydddhhnnnnnn

                yddd - The first four digits must be a valid Julian date format,
                where the first digit = 0-9 (last digit of current year) and the
                next three digits = 001-366 (number of the day in the year). 

                hh - can be the two digit hour in a 24 hour clock (00-23) during
                which the transaction is performed. 

                nnnnnn - can be the systemsTraceAuditNumber or any 6 digit
                number


                ISO20022 field name: Transaction Information And Status -
                Original Instruction Identification

                P2A: Mandatory 

                P2W: Mandatory 

                P2C: Mandatory
    PayoutNotification-1:
      oneOf:
        - $ref: '#/components/schemas/PayoutNotificationReceivedRequest-1'
        - $ref: '#/components/schemas/PayoutNotificationProcessRequest-1'
        - $ref: '#/components/schemas/PayoutNotificationFailedRequest-1'
    ReturnReasonCodeDetailsType:
      type: string
      description: >
        Indicates the PSP return type when the payout is returned. Refer to PSP
        Return Type (add link to VDP)


        ISO20022 field name: Payment Return - PSP Return Type
      enum:
        - REJECTED
        - RETURNED
    ReturnReasonCode:
      maxLength: 5
      minLength: 5
      type: string
      description: >
        If the Transaction Status is RETURNED or REJECTED then Return reason
        code will be populated


        ISO20022 field name: Payment Return - Reason Code  


        Codes and descriptions please refer to Visa Payment Guide
      example: RE101
    TransactionDetailMetadata:
      title: TransactionDetail
      required:
        - purposeOfPayment
      type: object
      properties:
        purposeOfPayment:
          $ref: '#/components/schemas/PurposeOfPayments'
      description: |
        TransactionDetail Object                
    CancelPayout400Response:
      required:
        - errorResponse
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
              example: InvalidParameter
            status:
              type: integer
              description: 3 digit http status code
              example: 400
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                    example: Must be a numeric string with length between 6 and 11
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
                    example: originatorDetail.bankId
            message:
              type: string
              description: The long description of the error.
              example: Input parameters validation failed
    Bank:
      required:
        - accountName
        - accountNumber
        - accountNumberType
        - countryCode
        - currencyCode
      type: object
      properties:
        BIC:
          description: >
            beneficiary bank account Business Identifier Code (BIC)


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Agent Financial Institution BIC
          allOf:
            - $ref: '#/components/schemas/BIC'
        bankCode:
          maxLength: 12
          minLength: 1
          type: string
          description: >
            beneficiary bank account bank code


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Agent Financial Institution Clearing
            System Member Identification
          example: '173'
        bankName:
          description: |
            Recipient's bank name

            ISO20022 field name: Creditor Agent Financial Institution Name
          allOf:
            - $ref: '#/components/schemas/BankName'
        branchCode:
          maxLength: 12
          minLength: 1
          type: string
          description: >
            beneficiary bank account branch code


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Agent Branch Identification
          example: '123456'
        accountName:
          description: >
            beneficiary bank account name i.e. account holder name as recorded
            on beneficiary bank account


            (Refer to Payouts Endpoint Guide on country-specific required fields
            and lengths)


            ISO20022 field name: Creditor Account Name
          allOf:
            - $ref: '#/components/schemas/AccountName'
        accountType:
          type: string
          description: >
            Recipient bank account type


            * `1` - Checking

            * `2` - Saving 

            * `3` - Maestra

            * `4` - Visa

            * `5` - Loan


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Account Type
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
        countryCode:
          allOf:
            - $ref: '#/components/schemas/AlphaCountryCode'
        bankCodeType:
          type: string
          description: >
            beneficiary bank account bank code type


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Agent Financial Institution Clearing
            System Member Identification Type
          enum:
            - ABA
            - SORT_CODE
            - DEFAULT
        currencyCode:
          description: >
            beneficiary bank account currency code


            Format: 3-character ISO-4217 (Alpha-3) currency code


            (Refer to Payouts Endpoint Guide on country-specific required fields
            and lengths)


            ISO20022 field name: Creditor Account Currency
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        accountNumber:
          description: >
            beneficiary bank account number


            (Refer to Payouts Endpoint Guide on country-specific required fields
            and lengths)


            ISO20022 field name: Creditor Account Number or IBAN
          allOf:
            - $ref: '#/components/schemas/AccountNumber'
        accountNumberType:
          type: string
          description: >
            beneficiary bank account number type. Valid values: "IBAN" and
            "DEFAULT"


            (Refer to Payouts Endpoint Guide on country-specific required fields
            and lengths)


            ISO20022 field name: Creditor Financial Institution Account Number
            Type
          example: DEFAULT
          enum:
            - IBAN
            - DEFAULT
      description: |
        Recipient's bank object

        Conditional object when payoutMethod has value 'B'
    AccountQueryErrorResponse-2:
      type: object
      properties:
        transactionalDetail:
          required:
            - status
          properties:
            status:
              type: string
              description: |
                - VALIDATION_FAILED: Payout request failed validation
                - ERROR: Payout is in error status
              enum:
                - VALIDATION_FAILED
                - ERROR
            errorDetails:
              type: array
              items:
                $ref: '#/components/schemas/ErrorResponse-2'
      description: Transaction is accepted and will be processed & notified status.
    QuoteId:
      type: integer
      description: >
        This is a unique FX quote ID generated by Visa for a payout currency
        pair.         
      format: int64
      example: 987654321
    CityOfBirth:
      maxLength: 35
      minLength: 1
      type: string
      description: This field should contain recipient’s city of birth.
      example: Mumbai
    PurposeOfPayments:
      title: PurposeOfPayments
      required:
        - mandatory
      type: object
      properties:
        mandatory:
          type: boolean
          description: Whether the purpose of payment is mandatory.
          example: true
        purposeOfPaymentCodes:
          type: array
          description: List of valid purpose of payment codes.
          items:
            $ref: '#/components/schemas/PurposeOfPaymentCodes'
      description: >-
        This group contains all configuration information for Purpose of Payment
        options. The 'mandatory' attribute indicates whether provision of
        Purpose of Payment data is required for the Payout to be accepted.
    AccountQueryErrorResponse-1:
      type: object
      properties:
        transactionalDetail:
          required:
            - status
          properties:
            status:
              type: string
              description: |
                - VALIDATION_FAILED: Payout request failed validation
                - ERROR: Payout is in error status
              enum:
                - VALIDATION_FAILED
                - ERROR
            errorDetails:
              type: array
              items:
                $ref: '#/components/schemas/ErrorResponse-1'
      description: Transaction is accepted and will be processed & notified status.
    PayoutReturnRequestV2:
      required:
        - originatorDetail
        - transactionDetail
      type: object
      properties:
        originatorDetail:
          required:
            - bankId
            - originatorId
          type: object
          properties:
            bankId:
              maximum: 99999999999
              minimum: 100000
              type: integer
              description: >-
                Originating bank ID is the Bank Identification Number (BIN)
                assigned to each Visa Member upon enrollment. If the Originator
                is not a Financial Institution (FI) and will be processing using
                a sponsor FI (i.e. Acquirer ) , this is the BIN of the
                sponsoring FI (Acquirer). It uniquely identifies the Bank/FI
                that is sponsoring the Originating Entity in Visa’s core system.

                Note: This is also referred to as the “Acquiring BIN” by Visa


                ISO20022 field name: Payment Return - Debtor Agent FI
                Identification
              example: 408999
            originatorId:
              maxLength: 15
              minLength: 1
              type: string
              description: >-
                An alphanumeric field that uniquely identifies the Originating
                Entity for Push to Account or Push to Wallet transactions


                ISO20022 field name: Payment Return - Debtor Originating Entity
                Identification
              example: '1234567890'
        transactionDetail:
          required:
            - originalTransactionAmount
            - originalTransactionCurrencyCode
            - payoutId
            - retrievalReferenceNumber
            - returnDateTime
            - returnReasonDetails
            - systemTraceAuditNumber
            - transactionIdentifier
          type: object
          properties:
            payoutId:
              maxLength: 50
              minLength: 1
              type: string
              description: >-
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for P2A.


                ISO20022 field name: Payment Return - Original Additional
                Remittance Information
              example: 5003f6a0-2c44-11b2-aa57-47378ae53313_1
            endToEndId:
              maxLength: 35
              type: string
              description: >-
                Identifier assigned by the Originating Entity's customer to
                uniquely identify the transaction


                ISO20022 field name: Transaction Information And Status -
                Original EndtoEnd Identification
            returnAmount:
              minimum: 1
              type: integer
              description: >-
                The return amount to be paid out to the Originating Entity
                expressed in the currency specified in returnCurrencyCode field.

                The amount originally assessed for settlement on the Payout will
                be reversed as-is in case of rejects and cancellations.

                In case of returns from Visa's network partner on a
                cross-currency transaction, this value could vary from the
                settlement amount on the original payout. 


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to the Payouts Endpoint Guide for
                P2A on country-specific currency minor units.


                Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.


                ISO20022 field name: Payment Return - Instructed Amount.


                This field will be populated for Accelerated Settlement
                transactions.
              example: 4300
            returnDateTime:
              pattern: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.000Z
              type: string
              description: >-
                This field contains the date and time Visa has returned the
                payout to the Originating Entity


                Format: YYYY-MM-DDThh:mm:ss.000Z


                Example: 2021-01-01T22:52:46.000Z


                ISO20022 field name: Payment Return - Message Creation Date Time
              example: '2020-05-05T12:12:12.000Z'
            clientReferenceId:
              maxLength: 35
              type: string
              description: >-
                Identifier assigned by the Originating Entity to uniquely
                identify the transaction


                ISO20022 field name: Transaction Information And Status -
                Original Transaction Identification
            returnCurrencyCode:
              maxLength: 3
              minLength: 3
              pattern: ^\d\d\d$
              type: string
              description: >-
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnAmount value. It will be same
                as the client’s settlement currency against the original payout
                transaction.


                This field will be populated for Accelerated Settlement
                transactions.
              example: '356'
            returnSourceAmount:
              type: integer
              description: "The return amount as sent by Visa’s network partner in the destination country, expressed in the currency specified in returnSourceCurrencyCode field. \nThis field will be\_conditionally present when returnReasonDetails.type=”RETURN\"."
              example: 12345
            returnReasonDetails:
              required:
                - code
                - type
              type: object
              properties:
                code:
                  maxLength: 5
                  minLength: 5
                  type: string
                  description: >-
                    Indicates the return reason code when the payout is
                    returned.<br>Refer to <a
                    href="/capabilities/visa-direct-payouts/docs-error-codes">RE
                    Code</a> 


                    ISO20022 field name: Payment Return - Reason Code
                  example: RE101
                type:
                  type: string
                  description: >-
                    Indicates the return type when the payout is returned.
                    <br>Refer to <a
                    href="/capabilities/visa-direct-payouts/docs-error-codes">Return
                    Type</a> 


                    ISO20022 field name: Payment Return - PSP Return Type
                  enum:
                    - REJECT
                    - RETURN
                description:
                  maxLength: 105
                  type: string
                  description: >-
                    Indicates the return description when the payout is
                    returned. <br>Refer to <a
                    href="/capabilities/visa-direct-payouts/docs-error-codes">Return
                    Description</a> 


                    ISO20022 field name: Payment Return - PSP Return Description
            returnConversionRate:
              maxLength: 14
              type: string
              description: >-
                This field contains the exchange rate applied to convert
                returnSourceAmount to returnAmount.


                This field will be populated for Accelerated Settlement
                transactions.
              format: \d{1,7}(\.\d{1,12})?
            transactionIdentifier:
              maxLength: 15
              minLength: 15
              type: string
              description: >-
                Visa-generated Transaction Identifier that is unique for each
                original authorization and financial request. The identifier
                links original messages to subsequent messages, such as those
                for exception item processing and clearing records. It can also
                be used to match the payouts to settlement reports.


                ISO20022 field name: Payment Return - Original Clearing System
                Reference
            systemTraceAuditNumber:
              maxLength: 6
              minLength: 6
              type: string
              description: >-
                This field contains a number assigned by the Originating Entity
                that uniquely identifies a transaction and all message types.
                The trace number is one of the key data elements used to match a
                response to its request or to match a message to others for a
                given transaction set


                ISO20022 field name: N/A
              example: '685420'
            retrievalReferenceNumber:
              maxLength: 12
              minLength: 12
              pattern: ^\d{12}$
              type: string
              description: >-
                This is a unique identifier generated by the Originating Entity
                for a transaction and its one of the key fields for matching a
                transaction with the subsequent messages with in the transaction
                set example Notification, Returns, Cancel, Exception management
                via VD Portal for P2A. It is also used for duplicate validation
                check done by Visa.


                The format is recommended to be ydddhhnnnnnn

                - yddd - The first four digits must be a valid Julian date
                format, where the first digit = 0-9 (last digit of current year)
                and the next three digits = 001-366 (number of the day in the
                year).

                - hh - can be the two digit hour in a 24 hour clock (00-23)
                during which the transaction is performed.

                - nnnnnn - can be the systemsTraceAuditNumber or any 6 digit
                number


                ISO20022 field name: Payment Return - Original Instruction
                Identification
              example: '410721685200'
            returnSourceCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: "The 3-character ISO-4217 code in this field reflects the currency associated with the returnSourceAmount value. It will be same as the destination currency on the original payout transaction. \nThis field will be\_conditionally present when returnReasonDetails.type=”RETURN\"."
              example: '840'
            originalTransactionAmount:
              minimum: 1
              type: integer
              description: >-
                The original transaction amount that was sent by the Originating
                Entity in the Send Payout request in the 
                transactionDetail.transactionAmount field. Expressed in the
                currency specified in transaction currency code. 


                ISO20022 field name: N/A


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to the Payouts Endpoint Guide for
                P2A on country-specific currency minor units.


                Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.
              example: 4300
            originalTransactionCurrencyCode:
              maxLength: 3
              minLength: 3
              pattern: ^\d\d\d$
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated to the original transaction amount. It will be same
                as the transactionDetail.transactionCurrencyCode from the
                original payout request.


                Format: 3-digit ISO-4217 (numeric) currency code


                ISO20022 field name: N/A
              example: '356'
    SenderTransactorDetail-1:
      oneOf:
        - $ref: '#/components/schemas/SenderIndividual-1'
        - $ref: '#/components/schemas/SenderCompany-1'
    BusinessApplicationId:
      maxLength: 2
      minLength: 2
      type: string
      description: >
        Business Application Identifier (BAI) identifies the type of program for
        which the payment is being sent, i.e. whether it is a funds
        disbursement, money transfer etc. It should be a valid value allowed by
        Visa and approved for the program during onboarding.


        Valid BAI for Visa Direct Account & Wallet: 

        - Money transfer: AA, PP; 

        - Non-money transfer: BB, FD, GD, GP, LO, MD, OG, PD, BP;
      example: PP
    Wallet-1:
      required:
        - accountIdentifier
        - accountIdentifierType
        - countryCode
        - currencyCode
        - operatorName
      type: object
      properties:
        countryCode:
          allOf:
            - $ref: '#/components/schemas/AlphaCountryCode'
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        operatorName:
          maxLength: 50
          minLength: 1
          type: string
          description: >
            This identifies the non bank wallet operator that has issued the
            account to the recipient and is going to receive and post the funds
            to the recipients account. 

            Enum provided by Visa Direct to Wallet Operator. 

            Valid value WECHATPAY
          enum:
            - WECHATPAY
        accountIdentifier:
          maxLength: 210
          minLength: 1
          type: string
          description: >
            This identifies the identifier of the recipients account with the
            wallet operator to which the funds have to be deposited. 

            (e.g., wallet address - phone/email/custom identifier that
            identifies the account with the digital wallet operator)

            - If EMAIL then verify whether the Email is in valid Email format

            - If PHONENUMBER Refer to Payouts Endpoint Guide. Phone number
            should comply with ISO spec E.164 with pattern ^\+[1-9]\d{1,14}$

            - If USERNAME then check whether it is a valid string.
        accountIdentifierType:
          type: string
          description: >-
            This identifies type of account Identifier. Supported values are
            PHONENUMBER, EMAIL and USERNAME
          example: PHONENUMBER
          enum:
            - PHONENUMBER
            - EMAIL
            - USERNAME
      description: |
        Recipient's wallet object

        Conditional object when payoutMethod has value 'W'
    requestBody:
      required:
        - originatorDetail
        - transactionDetail
      type: object
      properties:
        recipientDetail:
          type: object
          properties:
            vauData:
              type: object
              properties:
                vauFlag:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Recipient primary account number Visa Account Updater (VAU)
                    flag


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional 

                    Note: Possible values are : Y (replacement occurred) N (No
                    replacements)
                accountStatus:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Indicates recipient account status. Possible values are C
                    (closed account) or Q (contact cardholder)


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                vauErrorReasonCode:
                  maxLength: 25
                  minLength: 1
                  type: string
                  description: |-
                    Indicates the reason the VAU failed
                    Possible values 
                    VAU_SUCCESS
                    VAU_FAILED
                    VAU_PAN_TKN_SUCCESS
                    VAU_PAN_TKN_FAILED
                    VAU_PPCS_SUCCESS
                    VAU_PPCS_FAILED

                    ISO20022 field name: n/a
                    P2A: N/A
                    P2W: N/A
                    P2C: Optional
                  enum:
                    - VAU_SUCCESS
                    - VAU_FAILED
                    - VAU_PAN_TKN_SUCCESS
                    - VAU_PAN_TKN_FAILED
                    - VAU_PPCS_SUCCESS
                    - VAU_PPCS_FAILED
                replacementCardAccountNumber:
                  maxLength: 19
                  minLength: 6
                  type: string
                  description: >-
                    Contains the recipient replacement primary account number,
                    if it exists


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                replacementCardExpirationDate:
                  maxLength: 7
                  minLength: 7
                  type: string
                  description: >-
                    Contains the recipient replacement primary account number
                    expiration date, if it exists. This is returned even if the
                    expiration date was not passed in the request.

                     Format: YYYY-MM 

                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                  format: YYYY-MM
            prepaidBalanceData:
              required:
                - amount
                - currencyCode
              type: object
              properties:
                amount:
                  type: integer
                  description: >-
                    Contains the prepaid load amount to the prepaid card,
                    expressed in the currency specified in prepaidBalanceData
                    currency code field. 


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (Mandatory only for Top Up Transactions)


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to SMS POS Visa & Visa
                    Electron

                    Technical Specifications - Appendix E Country and Currency
                    codes for P2C.


                    Example: Currency exponent for USD is 2. If the transaction
                    amount is $100.99, then this field should populate “10099”.
                    If the transaction amount is $100.00 then this field should
                    populate “10000”. Currency exponent for JPY is 0. If the
                    transaction amount is JPY 10,000, then this field should
                    populate “10000”.
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  type: string
                  description: >-
                    The 3-digit ISO-4217 code in this field reflects the
                    currency associated with the prepaid balance data amount 

                    Format: 3-digit ISO-4217 (numeric) currency code


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (Mandatory only for Top Up Transactions)
        originatorDetail:
          required:
            - bankId
          type: object
          properties:
            bankId:
              maximum: 99999999999
              minimum: 100000
              type: integer
              description: >-
                Originating bank ID is the Bank Identification Number (BIN)
                assigned to each Visa Member upon enrollment. If the Originator
                is not a Financial Institution (FI) and will be processing using
                a sponsor FI (i.e. Acquirer ) , this is the BIN of the
                sponsoring FI (Acquirer). It uniquely identifies the Bank/FI
                that is sponsoring the Originating Entity in Visa’s core system.

                Note: This is also referred to as the “Acquiring BIN” by Visa.

                ISO20022 field name: Debtor Agent FI Identification
              example: 408999
            originatorId:
              maxLength: 15
              minLength: 1
              type: string
              description: >-
                An alphanumeric field that uniquely identifies the Originating
                Entity for Push to Account or Push to wallet transactions. 

                ISO20022 field name: Debtor - Originating Entity Identification 

                P2A: Mandatory

                P2W: Mandatory

                P2C: N/A
              example: '1234567890'
            merchantVerificationValue:
              type: integer
              description: >-
                Conditional The concatenated Merchant Verification Value of Visa
                assigned and Acquirer assigned value is returned.
                 Note: This field is present if the MVV value was included on the Send Payout request.

                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
        transactionDetail:
          required:
            - notificationDateTime
            - originalTransmissionDateTime
            - retrievalReferenceNumber
            - status
            - systemTraceAuditNumber
          type: object
          properties:
            id:
              maxLength: 50
              minLength: 1
              pattern: ^[0-9A-Za-z-]+$
              type: string
              description: |-
                This is a unique transaction status identifier
                P2A: Mandatory
                P2W: Mandatory
                P2C: N/A
            authId:
              type: integer
              description: >-
                This is a unique authorization code for an approved transaction
                from Issuer.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
            status:
              type: string
              description: >-
                Status of the transaction

                Valid Values for P2A are:

                PAYMENT_RECEIVED, PAYMENT_SENT, AWAITING_INFORMATION

                VALIDATION_FAILED, ERROR, DECLINED, PENDING_CANCELLATION,
                CANCELLED


                Status definition:

                - PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received.

                - PAYMENT_SENT: The payout has been submitted to the Network
                partner by PSP.

                - AWAITING_INFORMATION: PSP is awaiting more information from
                Originating Entity before transaction can be processed.

                - VALIDATION_FAILED: Payout request failed validation and will
                not be processed further

                - ERROR: Payout is in error status. Ex: HTTP 500, 404 403 etc., 

                - DECLINED: Payout is declined by Visa and will not be processed
                further

                - PENDING_CANCELLATION: Cancel payout request is pending

                - CANCELLED: Payout has been cancelled successfully



                Valid Values for P2W are:

                PAYMENT_RECEIVED, PAYMENT_SENT, AWAITING_INFORMATION

                VALIDATION_FAILED, ERROR, DECLINED, PENDING_CANCELLATION,
                CANCELLED


                Status definition:

                - PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received.

                - PAYMENT_SENT: The payout has been submitted to the Network
                partner by PSP.

                - AWAITING_INFORMATION: PSP is awaiting more information from
                Originating Entity before transaction can be processed.

                - VALIDATION_FAILED: Payout request failed validation and will
                not be processed further

                - ERROR: Payout is in error status. Ex: HTTP 500, 404 403 etc., 

                - DECLINED: Payout is declined by Visa and will not be processed
                further

                - PENDING_CANCELLATION: Cancel payout request is pending

                - CANCELLED: Payout has been cancelled successfully


                ISO20022 field name: Transaction Information And Status -
                Transaction Status


                 Valid Values for P2C are:
                COMPLETED, IN_PROGRESS, FAILED, PENDING, CANCELLED


                Status definition:

                - COMPLETED - Transaction was processed by Visa.

                - IN_PROGRESS - Transaction is in progress, being processed by
                Visa

                - FAILED - Transaction was received and rejected by Visa

                - PENDING - Transaction is pending for processing by Visa

                - CANCELLED - Transaction was cancelled as requested by the
                originating acquirer
              example: PAYMENT_SENT
            payoutId:
              maxLength: 50
              minLength: 1
              type: string
              description: >-
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for P2A


                ISO20022 field name: Transaction Information And Status -
                Original Additional Remittance Information

                P2A: Optional

                P2W: Optional

                P2C: Optional
              example: 5003f6a0-2c44-11b2-aa57-47378ae53313_1
            networkId:
              maxLength: 4
              minLength: 1
              type: string
              description: >-
                This contains a code that identifies the network on which the
                transaction was processed.
                 Note: This field is returned only if it is anything other than networkId value 2. Supported only in US for domestic transactions

                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
            tokenData:
              type: object
              properties:
                accountRange:
                  type: integer
                  description: >-
                    Contains the first 9 digits of the cardholder PAN..

                    Note: Acquirers must not forward this value to their
                    merchants after receiving it in the response message from
                    Visa.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                accountSuffix:
                  maxLength: 4
                  minLength: 4
                  type: string
                  description: >-
                    Last four digits of the card number/PAN 

                    Note: This is only relevant for push to card payouts, where
                    a card network token was sent by the Originating Entity in
                    the payout request (in the
                    recipientDetail.card.accountNumber field).


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                additionalTokenRespInfo:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This field will contain a value used to identify
                    transactions eligible for token services. 

                    Valid value: 

                    1 - Token program.


                    ISO20022 field name: N/A

                    P2A: N/AP2W: N/A

                    P2C: Optional
            endToEndId:
              maxLength: 35
              type: string
              description: >-
                Identifier assigned by the Originating Entity's customer to
                uniquely identify the transaction


                ISO20022 field name: Transaction Information And Status -
                Original EndtoEnd Identification

                P2A: Optional

                P2W: Optional

                P2C: N/A
            settlement:
              type: object
              properties:
                date:
                  maxLength: 10
                  minLength: 10
                  pattern: YYYY-MM-DD
                  type: string
                  description: >-
                    This is date when the transaction is settled between Visa
                    and the Acquirer


                    Conditional (Mandatory when the transaction is settled)


                    ISO20022 field name: Transaction Information And Status -
                    Interbank Settlement Date

                    P2A: Optional

                    P2W: N/A

                    P2C: Optional
                amount:
                  minimum: 1
                  type: integer
                  description: >-
                    Contains the transaction amount converted to settlement
                    currency, expressed in the currency specified in
                    settlementCurrencyCode field. 


                    Conditional (Mandatory when the transaction is settled)


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to the Payouts Endpoint Guide
                    for P2A on country-specific currency minor units. Refer to
                    SMS POS Visa & Visa Electron Technical Specifications -
                    Appendix E Country and Currency codes for P2C.


                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should populate “10099”. If the
                    amount is $100.00 then this field should populate “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should populate “10000”.


                    ISO20022 field name: Transaction Information And Status -
                    Interbank Settlement Amount

                    P2A: This field will be populated for Accelerated Settlement
                    transactions.

                    P2W: N/A

                    P2C: N/A
                  example: 4300
                serviceFlag:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Indicates the settlement service applicable for the
                    transaction.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >-
                    The 3-digit ISO-4217 code in this field reflects the
                    currency associated with the settlement amount


                    Format: 3-digit ISO-4217 (numeric) currency code


                    Conditional (Mandatory when the transaction is settled)


                    ISO20022 field name: Transaction Information And Status -
                    Interbank Settlement Amount Currency Code

                    P2A: This field will be populated for Accelerated Settlement
                    transactions.

                    P2W: N/A

                    P2C: N/A
                  example: '356'
                rateSourceId:
                  maxLength: 5
                  type: string
                  description: >-
                    Contains the source ID of the foreign exchange rate applied
                    to the derive the settlement amount in case of cross
                    currency payment.


                    Conditional (Mandatory when the transaction is settled via
                    VisaNet)


                    ISO20022 field name: Transaction Information And Status -
                    Remittance Information Settlement Conversion or FX Rate
                    Source ID


                    Conditional (Mandatory when the transaction is settled via
                    VisaNet)

                    P2A: Optional

                    P2W: N/A

                    P2C: N/A
                conversionRate:
                  maxLength: 14
                  pattern: <\d{1,7}(\.\d{1,12})?>
                  type: string
                  description: >-
                    Contains the foreign exchange rate applied to the derive the
                    settlement amount in case of cross currency payment.


                    Conditional (Mandatory when the transaction is settled via
                    VisaNet)


                    ISO20022 field name: Transaction Information And Status -
                    Remittance Information Settlement Conversion or FX Rate

                    P2A: This field will be populated for Accelerated Settlement
                    transactions.

                    P2W: N/A

                    P2C: N/A
                  example: '0.07'
                responsibleParty:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This flag is set to 1 to indicate that VisaNet has
                    settlement responsibility for this transaction. This flag
                    does not indicate the transaction will be settled.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                grossInterchangeValue:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This flag is set to 1 to indicate that this transaction has
                    financial impact and that the value of the transaction (if
                    approved) will be included in the settlement accumulation
                    during processing of this request-response or advice-advice
                    response message pair.

                    The flag is set to 0 if a transaction is ineligible for
                    settlement processing.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                priorGrossInterchangeValue:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This flag is set to 1 indicating this transaction has
                    financial impact, but VisaNet has updated its reconciliation
                    totals for the value of this transaction.

                    This flag is set to 0 if the transaction is ineligible for
                    settlement processing.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
            payoutSpeed:
              type: string
              description: >-
                The payout processing speed send in the request. Currently
                supported value is "STANDARD". This field will be enhanced in
                future to include additional speed options


                ISO20022 field name: Transaction Information And Status -
                Instruction Priority

                P2A: Mandatory

                P2W: Mandatory

                P2C: N/A
              example: STANDARD
              enum:
                - STANDARD
                - PREMIUM
            responseCode:
              maxLength: 2
              minLength: 2
              type: string
              description: >-
                Response code that provides the result of the payout request.
                List of valid response codes (add VDP link)


                ISO20022 field name: Transaction Information And Status - Reason
                Code

                P2A: Conditional

                P2W: Optional

                P2C: Conditional
            errorResponse:
              type: object
              properties:
                reason:
                  maxLength: 500
                  type: string
                  description: >-
                    Contains a short description of the error


                    Conditional (will be populated for an error of the original
                    payout)


                    ISO20022 field name: Transaction Information And Status -
                    Error Reason
                details:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        maxLength: 50
                        type: string
                        description: >-
                          Contains an error code indicating the detailed error
                          message


                          Conditional (will be populated for an error of the
                          original payout)


                          ISO20022 field name: Transaction Information And
                          Status - Error Reason
                      message:
                        maxLength: 10000
                        type: string
                        description: >-
                          The long description of the specific error that
                          occurred.
                      location:
                        maxLength: 500
                        type: string
                        description: >-
                          The place in the incoming message that the particular
                          error occurred.
                message:
                  maxLength: 10000
                  type: string
                  description: >-
                    Contains a long description of the error


                    Conditional (will be populated for an error of the original
                    payout)


                    ISO20022 field name: Transaction Information And Status -
                    Error Reason Additional Information
            fundingStatus:
              type: string
              description: >-
                Funding Status of the payout transaction


                Possible values: "FUNDED" "NOT_FUNDED"

                - FUNDED - Indicates that the originating entity has provided
                funding for the transaction and Visa Direct has allocated funds
                to the transaction

                - NOT_FUNDED - Indicates that the originating entity has not
                provided funding for the transaction


                Conditional (will be populated after the funding has been
                assessed) 


                ISO20022 field name: Transaction Information And Status -
                Funding Status Reason Info

                P2A: Optional

                P2W: Optional

                P2C: N/A
              enum:
                - FUNDED
                - NOT_FUNDED
            responseSource:
              maxLength: 1
              minLength: 1
              type: string
              description: >-
                Contains the response source/reason code that identifies the
                source of the responseCode i.e. whether it is from Visa or from
                the Issuer.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Mandatory
            nationalNetData:
              type: object
              properties:
                reimbursementFee:
                  type: number
                  description: >-
                    Applies to Argentina domestic data only and indicates the
                    installment payment details for Argentina National Net
                    Settlement Service.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                  format: double
                memberSuppliedIRF:
                  maxLength: 13
                  minLength: 1
                  type: string
                  description: >-
                    This field contains the client-calculated interchange
                    reimbursement fee (IRF) for countries using this capability.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                reimbursementAttribute:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Contains a code that identifies the applicable interchange
                    reimbursement fee for a transaction. Its an optional value
                    and if not supplied by Originating entities, Visa applies
                    default value 0 and passes onwards to Issuers/Receiving
                    entities.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
            clientReferenceId:
              maxLength: 35
              type: string
              description: >-
                Identifier assigned by the Originating Entity to uniquely
                identify the transaction


                ISO20022 field name: Transaction Information And Status -
                Original Transaction Identification

                P2A: Optional

                P2W: Optional

                P2C: N/A
            destinationAmount:
              minimum: 1
              type: integer
              description: >-
                The destination amount that will be deposited to the recipient
                account or wallet, expressed in the destination currency code
                provided in the original request. If the Originating Entity
                sends a payout in a currency that is not the same as the
                destination currency then Visa will perform FX conversion and
                calculate the amount to be deposited to the recipient bank
                account, and provide this information back to the Originating
                Entity.


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to the Payouts Endpoint Guide for
                P2A on country-specific currency minor units


                Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.


                ISO20022 field name: Transaction Information And Status -
                Remitted Amount

                P2A: Optional

                P2W: Optional

                P2C: N/A
              example: 4300
            transactionAmount:
              minimum: 1
              type: integer
              description: >-
                The transaction amount to be paid out to the recipient's bank 
                or wallet.  Expressed in the currency specified in transaction
                currency code.


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to the Payouts Endpoint Guide for
                P2A or P2W on country-specific currency minor units.


                Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.


                ISO20022 field name: Transaction Information And Status -
                Instructed Amount

                P2A: Optional

                P2W: Optional

                P2C: Optional
              example: 4300
            expectedPostingDate:
              maxLength: 10
              minLength: 10
              pattern: YYYY-MM-DD
              type: string
              description: >-
                This is an estimated date by which the payout should be posted
                to the recipient account or wallet. This date should be
                communicated to the sender and recipient (if possible) to ensure
                that they know when to expect the funds


                ISO20022 field name: Transaction Information And Status -
                Effective Interbank Settlement Date

                P2A: Optional

                P2W: Optional

                P2C: N/A
              example: '1980-02-01'
            feeProgramIndicator:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                Contains the fee program indicator, which is used to assess the
                Interchange Fee Amount in certain scenarios


                ISO20022 field name: n/a

                P2A: N/A

                P2W: N/A

                P2C: Optional
            notificationDateTime:
              pattern: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.000Z
              type: string
              description: >-
                This field contains the date and time Visa has sent payout
                notification to the Originating Entity


                Format: YYYY-MM-DDThh:mm:ss.000Z


                Example: 2021-01-01T22:52:46.000Z


                ISO20022 field name: Transaction Information And Status -
                Message Creation Date Time
              example: '2020-05-05T12:12:12.000Z'
            originalResponseCode:
              maxLength: 2
              minLength: 2
              type: string
              description: >-
                Contains a code that provides the result of original payout
                request when current request is identified as duplicate of
                original and responseCode will be 94.

                This field is relevant in SendPayoutFromOriginator response
                only.

                P2A: Optional

                P2W: Optional

                P2C: Optional
            transactionIdentifier:
              maxLength: 15
              minLength: 15
              type: string
              description: >-
                Visa-generated Transaction Identifier that is unique for each
                original authorization and financial request. The identifier
                links original messages to subsequent messages, such as those
                for exception item processing and clearing records. It can also
                be used to match the payouts to settlement reports.


                ISO20022 field name: Transaction Information And Status -
                Original Transaction Clearing System Reference

                P2A: Mandatory

                P2W: Mandatory

                P2C: Optional
              example: 3lkj3434l
            systemTraceAuditNumber:
              maxLength: 6
              minLength: 6
              type: string
              description: >-
                This field contains a number assigned by the Originating Entity
                that uniquely identifies a transaction and all message types.
                The trace number is one of the key data elements used to match a
                response to its request or to match a message to others for a
                given transaction set


                ISO20022 field name: N/A
              example: '685420'
            destinationCurrencyCode:
              maxLength: 3
              minLength: 3
              pattern: ^\d\d\d$
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated with the destination amount


                Format: 3-digit ISO-4217 (numeric) currency code


                ISO20022 field name: Transaction Information And Status -
                Remitted Amount Currency Code

                P2A: Optional

                P2W: Optional

                P2C: N/A
              example: '356'
            transactionCurrencyCode:
              maxLength: 3
              minLength: 3
              pattern: ^\d\d\d$
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated to the transaction amount


                Format: 3-digit ISO-4217 (numeric) currency code


                ISO20022 field name: Transaction Information And Status -
                Instructed Amount Currency Code

                P2A: Optional

                P2W: Optional

                P2C: Optional
              example: '356'
            retrievalReferenceNumber:
              maxLength: 12
              minLength: 12
              pattern: ^\d{12}$
              type: string
              description: >-
                This is a unique identifier generated by the Originating Entity
                for a transaction and it's one of the key fields for matching a
                transaction with the subsequent messages with in the transaction
                set example Notification, Returns, Cancel, Exception management
                via VD Portal for P2A and Reversals, Chargeback, Response,
                Advice for P2C. It is also used for duplicate validation check
                done by Visa.The format is recommended to be ydddhhnnnnnn

                yddd - The first four digits must be a valid Julian date format,
                where the first digit = 0-9 (last digit of current year) and the
                next three digits = 001-366 (number of the day in the year). 

                hh - can be the two digit hour in a 24 hour clock (00-23) during
                which the transaction is performed. 

                nnnnnn - can be the systemsTraceAuditNumber or any 6 digit
                number

                ISO20022 field name: Payment Identification - Instruction
                Identification
              example: '410721685200'
            destinationConversionRate:
              maxLength: 14
              type: string
              description: >-
                This field contains the exchange rate applied to convert
                transactionAmount to destinationAmount.

                P2A: Optional

                P2W: Optional

                P2C: N/A
              format: \d{1,7}(\.\d{1,12})?
            originalTransmissionDateTime:
              pattern: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.000Z
              type: string
              description: >-
                This field contains the date and time the original payout
                request was submitted to Visa.


                Format: YYYY-MM-DDThh:mm:ss


                Example: 2021-01-01T22:52:46.000Z


                ISO20022 field name: Transaction Information And Status -
                Original Payout Message Creation Date Time
              example: '2020-05-05T12:12:12.000Z'
    Amount-1:
      type: number
      format: double
      example: 12.34
    202AccountPayoutCreatedResponse:
      type: object
      properties:
        transactionalDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - status
          properties:
            status:
              $ref: '#/components/schemas/202TransactionStatus'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
      description: Transaction is accepted and will be processed & notified status.
    ClientReferenceId:
      maxLength: 35
      minLength: 1
      type: string
      description: >
        Identifier assigned by the Originating Entity to uniquely identify the
        transaction.


        ISO20022 field name: Transaction Information And Status - Original
        Transaction Identification


        Only alphanumeric and '-' characters are allowed.
    AccountQueryPendingResponse:
      $ref: '#/components/schemas/202AccountPayoutCreatedResponse'
    FirstName:
      maxLength: 35
      minLength: 1
      type: string
      description: Required when recipient is an individual.
      example: Joe
    StatementNarrative-1:
      maxLength: 140
      minLength: 1
      type: string
      description: >-
        This is the text that will be displayed on the recipient’s statement
        when the payment gets posted to the recipient’s account or wallet. The
        originator is advised to provide a narrative that helps the recipient
        clearly identify the sender of the payment and the reason for the
        payment.,
      example: testing narrative
    ErrorResponse:
      required:
        - details
        - reason
        - status
      type: object
      properties:
        reason:
          type: string
          description: The short description of the error.
        status:
          maximum: 999
          minimum: 100
          type: integer
          description: 3 digit HTTP status code
          example: 400
        details:
          type: array
          items:
            required:
              - code
              - message
            type: object
            properties:
              code:
                type: string
                description: A short code indicating the specific error that occurred.
              message:
                type: string
                description: The long description of the specific error that occurred.
              location:
                type: string
                description: >-
                  The place in the incoming message that the particular error
                  occurred.
        message:
          type: string
          description: The long description of the error
    ValidateWalletTransactionDetail:
      required:
        - businessApplicationId
        - endToEndId
        - initiatingPartyId
        - transactionAmount
        - transactionCurrencyCode
      type: object
      properties:
        quoteId:
          $ref: '#/components/schemas/QuoteId'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        payoutSpeed:
          $ref: '#/components/schemas/PayoutSpeed'
        additionalData:
          $ref: '#/components/schemas/TransactionalAdditionalData'
        purposeOfPayment:
          description: >
            Purpose of payment is required in certain markets to clearly
            identify the purpose of the payment based on the standard values
            defined for respective market

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Purpose of Payment
          allOf:
            - $ref: '#/components/schemas/PurposeOfPayment'
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId'
        transactionAmount:
          description: >
            The amount to debit from merchant's funding account or credit to
            beneficiary's bank account.

            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 

            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.

            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
        statementNarrative:
          allOf:
            - $ref: '#/components/schemas/StatementNarrative'
        senderSourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds'
        businessApplicationId:
          $ref: '#/components/schemas/BusinessApplicationId'
        settlementCurrencyCode:
          description: >
            The settlement currency code

            The 3-character ISO-4217 code in this field reflects the currency
            for the Settlement amount to be debited from Originating Entity/Visa
            Client's funding account.

            Format: 3-character ISO-4217 (Alpha-3) currency code


            <b>This field is mandatory</b>


            Example: GBP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        transactionCurrencyCode:
          description: >
            The 3-character ISO-4217 code in this field reflects the currency
            associated to the transaction amount. 

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: PHP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        senderBeneficiaryRelationship:
          $ref: '#/components/schemas/BeneficiaryRelationship'
    AccountPayoutResponse-2:
      type: object
      allOf:
        - $ref: '#/components/schemas/PayoutResponse-2'
    AccountPayoutResponse-1:
      type: object
      allOf:
        - $ref: '#/components/schemas/PayoutResponse-1'
    ConversionRate:
      minimum: 0
      exclusiveMinimum: true
      type: number
      format: double
      example: 0.07
    AccountPayoutRequest:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/AccountTransactionDetail'
      allOf:
        - $ref: '#/components/schemas/PayoutAccountRequest'
    EndToEndId:
      maxLength: 35
      minLength: 1
      type: string
      description: >
        Identifier assigned by the Originating Entity's customer to track the
        transaction end-to-end


        Conditional: Required if payout to a wallet recipient


        ISO20022 field name: end-to-end identification 
      example: 5003f6a02c4411b2aa5747378ae5331
    PayoutWalletRequest:
      required:
        - payoutMethod
        - recipientDetail
        - senderDetail
      type: object
      properties:
        payoutMethod:
          description: >
            Originating Entity must indicate the payout method i.e. To Account
            or Wallet


            Valid values:

            “W” – Visa Direct Wallet
          allOf:
            - $ref: '#/components/schemas/PayoutMethod'
        senderDetail:
          required:
            - address
          properties:
            address:
              $ref: '#/components/schemas/SenderAccountPayoutAddress'
            contactEmail:
              description: |
                Sender email address

                ISO20022 field name: Ultimate Debtor Contact Email Address
              allOf:
                - $ref: '#/components/schemas/ContactEmail'
            contactNumber:
              description: >
                Sender contact number

                + symbol followed by digits, no other symbols, e.g.
                +447700123456
              example: 447700123456
              allOf:
                - $ref: '#/components/schemas/ContactNumber'
            additionalData:
              $ref: '#/components/schemas/SenderAdditionalData'
            contactNumberType:
              type: string
              enum:
                - MOBILE
                - WORK
                - HOME
            identificationList:
              $ref: '#/components/schemas/SenderIdentificationList'
            senderAccountNumber:
              $ref: '#/components/schemas/SenderAccountNumber'
            senderReferenceNumber:
              $ref: '#/components/schemas/SenderReferenceNumber'
          allOf:
            - $ref: '#/components/schemas/SenderTransactorDetail'
        recipientDetail:
          required:
            - wallet
          properties:
            wallet:
              $ref: '#/components/schemas/Wallet'
            contactEmail:
              description: |
                Recipient email address

                ISO20022 field name: Ultimate Creditor Contact Email Address
              allOf:
                - $ref: '#/components/schemas/ContactEmail'
            contactNumber:
              description: >
                Recipient contact number

                + symbol followed by digits, no other symbols, e.g.
                +447700123456 
              example: 447700123456
              allOf:
                - $ref: '#/components/schemas/ContactNumber'
            additionalData:
              $ref: '#/components/schemas/RecipientAdditionalData'
            contactNumberType:
              type: string
              enum:
                - MOBILE
                - WORK
                - HOME
            identificationList:
              properties:
                idType:
                  description: >
                    Recipient identification type (issued by a government or
                    similar authority) needs to be provided by Originating
                    Entity along with the payment in certain markets. 


                    Valid values : 

                    * P- Passport 

                    * D-Driving License 

                    * N-National Id 

                    * T-Tax Id 

                    * L-Legal Entity Registration Number 

                    * F-Foreign Id


                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)


                    ISO20022 field name: Creditor Identification Code
              allOf:
                - $ref: '#/components/schemas/RecipientIdentificationList'
          allOf:
            - $ref: '#/components/schemas/RecipientTransactorDetail'
    AccountId:
      maxLength: 31
      minLength: 12
      type: string
      description: >-
        The accountId uniquely identifies the ledger account as a virtual
        account number(i.e. VAN), with a value or number assigned by Visa.
    IdentityGroup-1:
      title: IdentityGroup
      required:
        - groupLabel
        - groupName
        - identityFields
        - mandatory
      type: object
      properties:
        groupName:
          type: string
          description: >
            The name of the metadata element/enum.

            This generic Identity Group object can represent either 'Beneficiary
            Identity Field Group object' or 'Bank Account Registration Field
            Group object' . 

            Enum value signifies the particular metadata element. 


            For example : 
             a) if enum is "address", this can contain array of 'IdentityField' object where each object can represent elements like addressLine1, addressLine2, city, countrycode, postalcode etc    

             b) enum can be "identificationList", which contains array of "IdentityField' objects, one of the IdentityField object can have elementName="idType" and inputType="list", in this scenario array of IdentityListItem will have 
             [
               {
                 "label": "Passport",
                 "value": "Passport"
               },
               {
                 "label": "National ID Card",
                 "value": "National ID Card"
               },
               {
                 "label": "Driving License",
                 "value": "Driving License"
               }
             ], 
             second 'IdentityField' Object -> elementName as "identificationNumber" with inputType="text" 
             third 'IdentityField' Object -> elementName as "identificationCountry" with inputType="text" 
             fourth 'IdentityField' Object -> elementName as "validFromDate" with inputType="text"
             fifth  'IdentityField' Object -> elementName as "validToDate" with inputType="text" and so on.

             c) If enum is "additionalData",this will have array of two 'IdentityField' objects, one representing 'additionalDataKey' and other one 'additionalDataValue'.

             d) If enum is "name", "middleName" may be required for some countries (e.g. Africa). This can be accommodated by appending a space and then middleName to <firstName> 
          enum:
            - bank
            - address
            - name
            - additionalData
            - identificationList
            - legalEntityIdentity
            - contactInfo
            - birthInfo
        mandatory:
          type: boolean
          description: Indicates if the identity group is mandatory.
        groupLabel:
          type: string
          description: Displays a label for this group of identity fields.
        identityFields:
          type: array
          description: This type defines a list of recipient identity fields.
          items:
            $ref: '#/components/schemas/IdentityField-1'
      description: >-
        This type defines a recipient identity data group. Each group is
        normally represented as a section of fields on the UI. 'groupLabel' is
        the UI test to display as a name for this section. 'mandatory' indicates
        whether all section is mandatory. 'elementName' is the name of the
        element in the request for the corresponding section.
    IdNumber:
      maxLength: 35
      minLength: 1
      type: string
      description: >-
        In this field, the identification number (from the document type
        identified in the field recipientDetail.idType) should be provided.
      example: '1234567890'
    ValidatePayoutWalletRequest-1:
      required:
        - transactionDetail
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/ValidateWalletTransactionDetail-1'
      allOf:
        - $ref: '#/components/schemas/PayoutWalletRequest'
    InValidPayoutResponse:
      required:
        - validationDetails
        - validationResultCode
      type: object
      properties:
        validationDetails:
          type: array
          description: comprehensive array of errors
          items:
            $ref: '#/components/schemas/ErrorResponse-2'
        validationResultCode:
          type: string
          description: |
            - INVALID - see validationDetails for validation errors
          enum:
            - INVALID
    ValidatePayoutWalletRequest-2:
      required:
        - transactionDetail
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/WalletTransactionDetail-1'
      allOf:
        - $ref: '#/components/schemas/PayoutWalletRequest-1'
    ExpectedPostingDate-1:
      maxLength: 10
      minLength: 10
      description: >
        This is an estimated date by which the payout should be posted to the
        recipient’s account. This date should be communicated to the sender and
        recipient (if possible) to ensure that they know when to expect the
        funds


        ISO20022 field name: Transaction Information And Status - Effective
        Interbank Settlement Date
      format: date
      example: '1980-02-01'
    PayoutNotificationFailedRequest-1:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod'
        transactionDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - notificationDateTime
            - status
          type: object
          properties:
            status:
              type: string
              description: >
                Status of the transaction

                - VALIDATION_FAILED: Payout request failed validation and will
                not be proccessed further (only receive in case of 202 response)

                ISO20022 field name: Transaction Information And Status -
                Transaction Status

                - ERROR: Payout is in error status after 24 hours of retry in
                202
              example: VALIDATION_FAILED
              allOf:
                - $ref: '#/components/schemas/PayoutNotificationRequestStatus'
              enum:
                - VALIDATION_FAILED
                - ERROR
            errorResponses:
              type: array
              items:
                $ref: '#/components/schemas/ErrorResponse-1'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            notificationDateTime:
              $ref: '#/components/schemas/TimestampType'
    RecipientIndividual-1:
      required:
        - type
      properties:
        name:
          description: >-
            Full name of recipient, conditionally required when firstName and
            lastName are not provided
          example: Joe Smith
          allOf:
            - $ref: '#/components/schemas/Name'
        type:
          description: |
            Identifies the type of recipient - "I" for Individual 

            ISO20022 field name: Creditor Identification Type       
          allOf:
            - $ref: '#/components/schemas/Type'
        address:
          $ref: '#/components/schemas/RecipientAccountPayoutAddress'
        lastName:
          description: >
            Recipient last name, conditionally required when name is not
            provided


            ISO20022 field name: Creditor Last Name
          allOf:
            - $ref: '#/components/schemas/LastName'
        firstName:
          description: >
            Recipient first name, conditionally required when name is not
            provided


            ISO20022 field name: Creditor First Name
          allOf:
            - $ref: '#/components/schemas/FirstName'
        cityOfBirth:
          description: |
            Recipient city of birth

            ISO20022 field name: Creditor City of Birth
          allOf:
            - $ref: '#/components/schemas/CityOfBirth'
        dateOfBirth:
          description: >
            Recipient date of birth


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Birth Date
          allOf:
            - $ref: '#/components/schemas/DateOfBirth-1'
        countryOfBirth:
          description: >
            Recipient country of birth


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            Format: 3-character ISO-3166 (Alpha-3) country code


            ISO20022 field name: Creditor Country of Birth
          allOf:
            - $ref: '#/components/schemas/AlphaCountryCode'
    TransactionStatus:
      type: string
      description: >
        - PAYMENT_RECEIVED: Visa has acknowledged the payout instruction has
        been received

        - AWAITING_INFORMATION: Awaiting more information before transaction is
        processed .

        - PAYMENT_SENT: The payout has been submitted to the Network partner

        - PAYMENT_DELIVERED: The payout has been posted to the recipient's
        account. This status is only applicable for Wallet Payments

        - PENDING_CANCELLATION: Cancel payout status is pending

        - CANCELLED - Payout is cancelled

        - RETURNED: Returned request is refunded to Originating Entity

        - REJECTED: Rejected request is refunded to Originating Entity
      example: PAYMENT_SENT
      enum:
        - PAYMENT_RECEIVED
        - AWAITING_INFORMATION
        - PAYMENT_SENT
        - PAYMENT_DELIVERED
        - PENDING_CANCELLATION
        - CANCELLED
        - RETURNED
        - REJECTED
    ExpectedPostingDate-2:
      maxLength: 10
      minLength: 10
      description: >
        This is an estimated date by which the payout should be posted to the
        recipient’s account. This date should be communicated to the sender and
        recipient (if possible) to ensure that they know when to expect the
        funds


        Conditional (e.g. when payout is acquired successfully by Visa) 


        ISO20022 field name: Transaction Information And Status - Effective
        Interbank Settlement Date
      format: date
      example: '1980-02-01'
    SignedAmount:
      type: number
      format: double
      example: 12.34
    PayoutNotificationFailedRequest-2:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod-1'
        transactionDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - notificationDateTime
            - status
          type: object
          properties:
            status:
              type: string
              description: >
                Status of the transaction


                Status definition (add a link to Status Transition diagram on
                VDP):

                - VALIDATION_FAILED: Payout request failed validation and will
                not be proccessed further (only receive in case of 202 response)

                ISO20022 field name: Transaction Information And Status -
                Transaction Status

                - ERROR: Payout is in error status after 24 hours of retry in
                202
              example: VALIDATION_FAILED
              allOf:
                - $ref: '#/components/schemas/PayoutNotificationRequestStatus'
              enum:
                - VALIDATION_FAILED
                - ERROR
            errorResponses:
              type: array
              items:
                $ref: '#/components/schemas/ErrorResponse-2'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId-1'
            notificationDateTime:
              $ref: '#/components/schemas/TimestampType'
    SenderCompany-1:
      required:
        - name
        - type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        type:
          description: |
            Identifies the type of sender - "C" for Company 

            ISO20022 field name: Debtor Identification Type       
          allOf:
            - $ref: '#/components/schemas/Type'
        address:
          $ref: '#/components/schemas/SenderAccountPayoutAddress'
    RecipientDetailMetadata:
      title: RecipientDetail
      required:
        - identityGroups
      type: object
      properties:
        identityGroups:
          type: array
          items:
            $ref: '#/components/schemas/IdentityGroup'
    Name:
      maxLength: 70
      minLength: 1
      type: string
      description: It can have either company name or fullname based on type (I or C)
      example: Visa
    ValidatePayoutFromOriginator200Response:
      required:
        - validationResultCode
      type: object
      properties:
        validationDetails:
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
            message:
              type: string
              description: The long description of the error.
            responseCode:
              maxLength: 2
              minLength: 2
              type: string
              description: >-
                Response code that provides the result of the validation
                request.
          description: This object will be present only when status code is INVALID.
        validationResultCode:
          type: string
          description: |-
            Below are the possible values.
            VALID
            INVALID
            DUPLICATE
    ValidPayoutWithNetworkResponse-1:
      required:
        - validationResultCode
      type: object
      properties:
        validationResultCode:
          type: string
          description: >
            - VALID_WITH_NETWORK - Both Visa's and partner network's validations
            succeed. 
          enum:
            - VALID_WITH_NETWORK
    AccountTransactionDetail-2:
      required:
        - businessApplicationId
        - initiatingPartyId
        - transactionAmount
        - transactionCurrencyCode
      type: object
      properties:
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        payoutSpeed:
          $ref: '#/components/schemas/PayoutSpeed'
        additionalData:
          $ref: '#/components/schemas/TransactionalAdditionalData'
        purposeOfPayment:
          description: >
            Purpose of payment is required in certain markets to clearly
            identify the purpose of the payment based on the standard values
            defined for respective market

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Purpose of Payment
          allOf:
            - $ref: '#/components/schemas/PurposeOfPayment'
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId-1'
        transactionAmount:
          description: >
            The amount to debit from merchant's funding account or credit to
            beneficiary's bank account.

            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 

            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.

            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount-1'
        statementNarrative:
          description: >
            Originating Entity is advised to provide a narrative that helps the
            recipient clearly identify the sender and reason for the payment.

            Text will be displayed on the recipient’s statement when the payment
            gets posted to the recipient’s account (depends on beneficiary
            bank's process)

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Remittance Information Unstructured
          allOf:
            - $ref: '#/components/schemas/StatementNarrative-1'
        senderSourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds-1'
        businessApplicationId:
          $ref: '#/components/schemas/BusinessApplicationId-1'
        settlementCurrencyCode:
          description: >
            The settlement currency code

            The 3-character ISO-4217 code in this field reflects the currency
            for the Settlement amount to be debited from Originating Entity/Visa
            Client's funding account.

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: GBP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        transactionCurrencyCode:
          description: >
            The 3-character ISO-4217 code in this field reflects the currency
            associated to the transaction amount. 

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: PHP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        senderBeneficiaryRelationship:
          $ref: '#/components/schemas/BeneficiaryRelationship-1'
    ContactNumber:
      maxLength: 16
      minLength: 1
      pattern: ^\+[1-9]\d{1,14}$
      type: string
      description: |
        Contact phone number
        + symbol followed by digits, no other symbols, e.g. +447700123456 
        (note, refer ISO spec E.164)
      example: '447700123456'
    AccountTransactionDetail-1:
      required:
        - businessApplicationId
        - clientReferenceId
        - initiatingPartyId
        - transactionAmount
        - transactionCurrencyCode
      type: object
      properties:
        quoteId:
          $ref: '#/components/schemas/QuoteId'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        payoutSpeed:
          $ref: '#/components/schemas/PayoutSpeed'
        additionalData:
          $ref: '#/components/schemas/TransactionalAdditionalData'
        purposeOfPayment:
          description: >
            Purpose of payment is required in certain markets to clearly
            identify the purpose of the payment based on the standard values
            defined for respective market

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Purpose of Payment
          allOf:
            - $ref: '#/components/schemas/PurposeOfPayment'
        clientReferenceId:
          $ref: '#/components/schemas/ClientReferenceId'
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId'
        transactionAmount:
          description: >
            The amount to debit from merchant's funding account or credit to
            beneficiary's bank account.

            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 

            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.

            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
        statementNarrative:
          allOf:
            - $ref: '#/components/schemas/StatementNarrative'
        senderSourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds'
        businessApplicationId:
          $ref: '#/components/schemas/BusinessApplicationId'
        settlementCurrencyCode:
          description: >
            The settlement currency code

            The 3-character ISO-4217 code in this field reflects the currency
            for the Settlement amount to be debited from Originating Entity/Visa
            Client's funding account.

            Format: 3-character ISO-4217 (Alpha-3) currency code


            <b>This field is mandatory</b>


            Example: GBP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        transactionCurrencyCode:
          description: >
            The 3-character ISO-4217 code in this field reflects the currency
            associated to the transaction amount. 

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: PHP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        senderBeneficiaryRelationship:
          $ref: '#/components/schemas/BeneficiaryRelationship'
    403ErrorResponseObject:
      type: object
      properties:
        reason:
          type: string
          description: The short description of the error.
        status:
          maximum: 999
          minimum: 100
          type: integer
          description: 3 digit HTTP status code
          example: 403
        details:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: A short code indicating the specific error that occurred.
              message:
                type: string
                description: The long description of the specific error that occurred.
              location:
                type: string
                description: >-
                  The place in the incoming message that the particular error
                  occurred.
        message:
          type: string
          description: The long description of the error
    ValidatePayoutResponse:
      oneOf:
        - $ref: '#/components/schemas/ValidPayoutResponse'
        - $ref: '#/components/schemas/ValidPayoutWithNetworkResponse'
        - $ref: '#/components/schemas/InvalidPayoutResponse'
    ValidatePayoutFromOriginator429Response:
      required:
        - errorResponse
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            status:
              type: integer
              description: 3 digit http status code
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
            message:
              type: string
              description: The long description of the error.
    BusinessApplicationId-1:
      maxLength: 2
      minLength: 2
      type: string
      description: >
        Business Application Identifier (BAI) identifies the type of program for
        which the payment is being sent, i.e. whether it is a funds
        disbursement, money transfer etc. It should be a valid value allowed by
        Visa and approved for the program during onboarding.


        Valid BAI for Push to Accounts: 

        - Money transfer: AA, PP; 

        - Non-money transfer: BB, FD, GD, GP, LO, MD, OG, PD;
      example: PP
    ValidPayoutWithNetworkResponse:
      required:
        - validationResultCode
      type: object
      properties:
        validationResultCode:
          type: string
          description: >
            - VALID_WITH_NETWORK - Both Visa's and partner network's validations
            succeed. Only applicable for Wallet Payouts. 
          enum:
            - VALID_WITH_NETWORK
    LedgerNotification-1:
      required:
        - accountId
        - amount
        - creditDebitIndicator
        - currencyCode
        - entryId
        - entryType
        - initiatingPartyId
      type: object
      properties:
        amount:
          description: >
            Funding amount that is credited by the Originating Entity. Expressed
            in the currency provided in field currencyCode


            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 


            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.


            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount-1'
        entryId:
          maxLength: 35
          minLength: 1
          type: string
          description: >-
            The entry Id is used to uniquely identify a ledger notification for
            a single account and currency
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
        entryType:
          type: string
          description: |
            Entry type helps to classify entries in ledger. 

            Possible values:
            * 'FUNDING'
            * 'REPATRIATION'
            * 'JOURNAL'
            * 'MANAGED_LIQUIDITY'
          enum:
            - FUNDING
            - REPATRIATION
            - JOURNAL
            - MANAGED_LIQUIDITY
        narrative:
          maxLength: 2000
          minLength: 1
          type: string
          description: >-
            An optional description for the reason why a ledger notification was
            performed.
        valueDate:
          description: The date at which the funds are available to fund transactions.
          allOf:
            - $ref: '#/components/schemas/Date'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        bookingDate:
          description: THe date at which funds are received into the ledger.
          allOf:
            - $ref: '#/components/schemas/Date'
        currencyCode:
          description: >
            The 3-chracter ISO-4217 code in this field reflects the currency
            associated to the destination amount 


            Format: 3-character ISO-4217 (Alpha-3) currency code
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        additionalInfo1:
          maxLength: 140
          minLength: 1
          type: string
          description: >
            Additional information that may be in the original funding to the
            bank, and passed along in this field.
        additionalInfo2:
          maxLength: 140
          minLength: 1
          type: string
          description: >
            Additional information that may be in the original funding to the
            bank, and passed along in this field.
        additionalInfo3:
          maxLength: 140
          minLength: 1
          type: string
          description: >
            Additional information that may be in the original funding to the
            bank, and passed along in this field.
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId-1'
        creditDebitIndicator:
          type: string
          description: |
            Indicates that money credited to or debited from the account

            Possible values:
            * `CREDIT` - Indicates that the client has funded their account.
            * `DEBIT` - Indicates that money was removed from a client account.
          enum:
            - CREDIT
            - DEBIT
      description: >-
        Used to indicate to originators that various ledger entries has been
        received by Visa.
    WalletTransactionDetail:
      required:
        - businessApplicationId
        - clientReferenceId
        - endToEndId
        - initiatingPartyId
        - transactionAmount
        - transactionCurrencyCode
      type: object
      properties:
        quoteId:
          $ref: '#/components/schemas/QuoteId'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        payoutSpeed:
          $ref: '#/components/schemas/PayoutSpeed'
        additionalData:
          $ref: '#/components/schemas/TransactionalAdditionalData'
        purposeOfPayment:
          description: >
            Purpose of payment is required in certain markets to clearly
            identify the purpose of the payment based on the standard values
            defined for respective market

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Purpose of Payment
          allOf:
            - $ref: '#/components/schemas/PurposeOfPayment'
        clientReferenceId:
          $ref: '#/components/schemas/ClientReferenceId'
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId'
        transactionAmount:
          description: >
            The amount to debit from merchant's funding account or credit to
            beneficiary's bank account.

            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 

            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.

            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
        statementNarrative:
          allOf:
            - $ref: '#/components/schemas/StatementNarrative'
        senderSourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds'
        businessApplicationId:
          $ref: '#/components/schemas/BusinessApplicationId'
        settlementCurrencyCode:
          description: >
            The settlement currency code

            The 3-character ISO-4217 code in this field reflects the currency
            for the Settlement amount to be debited from Originating Entity/Visa
            Client's funding account.

            Format: 3-character ISO-4217 (Alpha-3) currency code


            <b>This field is mandatory</b>


            Example: GBP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        transactionCurrencyCode:
          description: >
            The 3-character ISO-4217 code in this field reflects the currency
            associated to the transaction amount. 

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: PHP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        senderBeneficiaryRelationship:
          $ref: '#/components/schemas/BeneficiaryRelationship'
    RecipientAccountPayoutAddress:
      type: object
      properties:
        city:
          description: >
            Recipient address city


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Address Town Name
          allOf:
            - $ref: '#/components/schemas/City'
        state:
          description: >
            Recipient address state or province


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Address Country Sub-division
          allOf:
            - $ref: '#/components/schemas/Province'
        country:
          description: >
            Recipient address country


            Format: 3-character ISO-3166 (Alpha-3) country code


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Address Country
          allOf:
            - $ref: '#/components/schemas/AlphaCountryCode'
        postalCode:
          description: >
            Recipient address postal code


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Address Postal Code
          allOf:
            - $ref: '#/components/schemas/PostalCode'
        addressLine1:
          description: >
            Recipient address line 1


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Address Line 1
          allOf:
            - $ref: '#/components/schemas/AddressLine1'
        addressLine2:
          description: >
            Recipient address line 2


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Address Line 2
          allOf:
            - $ref: '#/components/schemas/AddressLine2'
    CancelPayout500Response:
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
              example: InternalServerError
            status:
              type: integer
              description: 3 digit http status code
              example: 500
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
            message:
              type: string
              description: The long description of the error.
              example: Internal Server Error.  Please contact your Visa Representative.
    403ErrorResponseWithKey:
      type: object
      properties:
        errorResponse:
          allOf:
            - $ref: '#/components/schemas/403ErrorResponseObject'
    ValidateAccountTransactionDetail-1:
      required:
        - businessApplicationId
        - initiatingPartyId
        - transactionAmount
        - transactionCurrencyCode
      type: object
      properties:
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        payoutSpeed:
          $ref: '#/components/schemas/PayoutSpeed'
        additionalData:
          $ref: '#/components/schemas/TransactionalAdditionalData'
        purposeOfPayment:
          description: >
            Purpose of payment is required in certain markets to clearly
            identify the purpose of the payment based on the standard values
            defined for respective market

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Purpose of Payment
          allOf:
            - $ref: '#/components/schemas/PurposeOfPayment'
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId'
        transactionAmount:
          description: >
            The amount to debit from merchant's funding account or credit to
            beneficiary's bank account.

            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 

            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.

            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
        statementNarrative:
          allOf:
            - $ref: '#/components/schemas/StatementNarrative'
        senderSourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds'
        businessApplicationId:
          $ref: '#/components/schemas/BusinessApplicationId'
        settlementCurrencyCode:
          description: >
            The settlement currency code

            The 3-character ISO-4217 code in this field reflects the currency
            for the Settlement amount to be debited from Originating Entity/Visa
            Client's funding account.

            Format: 3-character ISO-4217 (Alpha-3) currency code


            <b>This field is mandatory</b>


            Example: GBP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        transactionCurrencyCode:
          description: >
            The 3-character ISO-4217 code in this field reflects the currency
            associated to the transaction amount. 

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: PHP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        senderBeneficiaryRelationship:
          $ref: '#/components/schemas/BeneficiaryRelationship'
    AccountBalanceWithTimestamp-1:
      required:
        - accountId
        - balance
      type: object
      properties:
        balance:
          allOf:
            - $ref: '#/components/schemas/AccountBalance-1'
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
        balanceTimestamp:
          allOf:
            - $ref: '#/components/schemas/TimestampType'
        lastTransactionTimestamp:
          description: >
            The timestamp of the last money movement on the client's account. 


            This is a valid ISO 8601 timestamp, such as
            YYYY-MM-DDThh:mm:ss.sss±hh:mm.                  
          allOf:
            - $ref: '#/components/schemas/TimestampType'
    LastName:
      maxLength: 35
      minLength: 1
      type: string
      description: Required when recipient is an individual.
      example: Anderson
    AdditionalDataValue:
      maxLength: 100
      minLength: 1
      type: string
      description: Value of the field.
    401ErrorResponseWithKey:
      type: object
      properties:
        errorResponse:
          allOf:
            - $ref: '#/components/schemas/401ErrorResponseObject'
    ValidatePayoutAccountRequest:
      required:
        - transactionDetail
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/ValidateAccountTransactionDetail'
      allOf:
        - $ref: '#/components/schemas/PayoutAccountRequest'
    SourceOfFunds:
      type: string
      description: >
        Sender source of funds indicator i.e. the funding method used by the
        sender to fund the payout.Valid values are:

        Conditional - source of funds is required by some endpoints, please
        check for Visa Payment Guide for details  


        01 = Visa credit

        02 = Visa debit

        03 = Visa prepaid

        04 = Cash

        05 = Deposit accounts other than those linked to a Visa card (includes
        checking/savings accounts and proprietary debit/ATMcards)

        06 = Credit accounts other than those linked to a Visa card (includes
        credit cards and proprietary credit lines)


        Note: For any Company to Company (C2C) or Company to Individual (C2I)
        use-case, this should be “05”, since the funds come from the sender’s
        bank account. This field is required for Money Transfers and Funds
        Disbursements.


        ISO20022 field name: Debtor Account Type Source of Funds
    PendingCancelledTransactionStatus-1:
      type: string
      description: |
        - PENDING: Payout is accepted but has not been acknowledged
        - CANCELLED - Payout is cancelled when in pending status
      enum:
        - PENDING
        - CANCELLED
    SenderTransactorDetail:
      oneOf:
        - $ref: '#/components/schemas/SenderIndividual'
        - $ref: '#/components/schemas/SenderCompany'
    SenderReferenceNumber:
      maxLength: 34
      minLength: 1
      type: string
      description: >
        Conditional: If the sender intends to fund the transaction with a
        non-financial instrument (for example, cash), then a reference number
        unique to the sender is required. This field is required if
        senderAccountNumber is not sent.
      example: John
    SendPayoutRequest:
      oneOf:
        - $ref: '#/components/schemas/AccountPayoutRequest'
        - $ref: '#/components/schemas/WalletPayoutRequest'
    ValidatePayoutFromOriginatorRequest:
      required:
        - originatorDetail
        - recipientDetail
        - senderDetail
        - transactionDetail
      type: object
      properties:
        senderDetail:
          required:
            - address
            - sourceOfFunds
          type: object
          properties:
            name:
              maxLength: 70
              minLength: 1
              type: string
              description: >-
                Sender full name or company name


                ISO20022 field name: Ultimate Debtor Name

                Conditional (Mandatory if sender type is C or sender first name
                and last name is not provided)
            type:
              type: string
              description: |-
                Identifies the type of sender - Individual or Company 


                ISO20022 field name: Ultimate Debtor Identification Type
                (Valid values : “I”=Individual, “C”=Company)
              enum:
                - I
                - C
            address:
              required:
                - addressLine1
                - city
                - country
              type: object
              properties:
                city:
                  maxLength: 35
                  minLength: 1
                  type: string
                  description: >-
                    Sender address city


                    ISO20022 field name: Ultimate Debtor Address Town Name

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                state:
                  maxLength: 25
                  minLength: 2
                  type: string
                  description: >-
                    Sender address state


                    ISO20022 field name: Ultimate Debtor Address Country
                    Sub-division

                    nConditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                country:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >+
                    Sender address country

                    Format: 3-digit ISO-3166 (numeric) country code


                    ISO20022 field name: Ultimate Debtor Address Country


                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                postalCode:
                  maxLength: 10
                  minLength: 1
                  type: string
                  description: >-
                    Sender address postal code


                    ISO20022 field name: Ultimate Debtor Address Postal Code

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                addressLine1:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: >-
                    Sender address line 1


                    ISO20022 field name: Ultimate Debtor Address Line 1

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                addressLine2:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: >-
                    Sender address line 2


                    ISO20022 field name: Ultimate Debtor Address Line 2

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
            lastName:
              maxLength: 35
              minLength: 1
              type: string
              description: |-
                Sender last name

                ISO20022 field name: Ultimate Debtor Last Name
                Conditional (Mandatory if sender full name is not provided)
            firstName:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Sender first name


                ISO20022 field name: Ultimate Debtor First Name

                Conditional (Mandatory if sender full name field is not
                provided)
            cityOfBirth:
              maxLength: 35
              minLength: 1
              type: string
              description: |-
                Sender city of birth

                ISO20022 field name: Ultimate Debtor City of Birth
            dateOfBirth:
              maxLength: 10
              minLength: 10
              pattern: ^\d\d\d\d\-\d\d\-\d\d$
              type: string
              description: >-
                Sender date of birth


                ISO20022 field name: Ultimate Debtor Birth Date

                Conditional (Refer to Payouts Endpoint Guide on country-specific
                required fields and lengths)
            contactEmail:
              maxLength: 50
              minLength: 1
              type: string
              description: |-
                Sender email address

                ISO20022 field name: Ultimate Debtor Contact Email Address
            contactNumber:
              maxLength: 30
              minLength: 1
              type: string
              description: |-
                Sender contact number
                Format: pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}

                ISO20022 field name: Ultimate Debtor Contact Phone Number
            sourceOfFunds:
              maxLength: 2
              minLength: 2
              type: string
              description: >-
                Sender source of funds indicator i.e. the funding method used by
                the sender to fund the payout. 

                Valid values are:

                01 =  Visa credit 

                02 =  Visa debit

                03 =  Visa prepaid

                04 =  Cash

                05 =  Deposit accounts other than those linked to a Visa card
                (includes checking/savings accounts and proprietary
                debit/ATMcards)

                06 =  Credit accounts other than those  linked to a Visa card
                (includes credit cards and proprietary credit lines)


                ISO20022 field name: Debtor Account Type Source of Funds 


                Note: For any Company to Company (C2C) or Company to Individual
                (C2I) use-case, this should be “05”, since the funds come from
                the sender’s bank account.
            additionalData:
              type: array
              description: >-
                Additional fields that are needed in order to complete the
                additional screening. The additional fields can be included as
                name value pairs (Field name, Field value)
              items:
                required:
                  - name
                  - value
                type: object
                properties:
                  name:
                    maxLength: 35
                    minLength: 1
                    type: string
                    description: >-
                      Originating Entity to send additional sender information
                      needed in order to process the payment. The additional
                      fields can be included as name value pairs (Field name,
                      Field value). This field represents the name component of
                      the name-value pair.


                      ISO20022 field name: Debtor Remittance Information
                      Document Name

                      Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)
                  value:
                    maxLength: 100
                    minLength: 1
                    type: string
                    description: >-
                      Originating Entity to send additional sender information
                      needed in order to process the payment. The additional
                      fields can be included as name value pairs (Field name,
                      Field value). This field represents the value  component
                      of the name-value pair.


                      ISO20022 field name: Debtor Remittance Information
                      Document Description

                      Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)
            countryOfBirth:
              maxLength: 3
              minLength: 3
              pattern: ^\d\d\d$
              type: string
              description: >-
                Sender country of birth


                ISO20022 field name: Ultimate Debtor Country of Birth

                Conditional (Refer to Payouts Endpoint Guide on country-specific
                required fields and lengths)
            sourceOfIncome:
              maxLength: 30
              minLength: 1
              type: string
              description: |-
                Sender source of income

                ISO20022 field name: Ultimate Debtor Source of Income
            identificationList:
              type: array
              description: Identification list of sender
              items:
                type: object
                properties:
                  idType:
                    maxLength: 1
                    minLength: 1
                    type: string
                    description: >-
                      Sender identification type (issued by a government or
                      similar authority) needs to be provided by Originating
                      Entity along with the payment in certain markets. 



                      ISO20022 field name: Ultimate Debtor Identification Code


                      Valid values : P- Passport D-Driving License, N-National
                      Id, T-Tax Id, L-Legal Entity Registration Number,
                      F-Foreign Id
                    enum:
                      - P
                      - D
                      - 'N'
                      - T
                      - L
                      - F
                  idNumber:
                    maxLength: 35
                    minLength: 1
                    type: string
                    description: >-
                      Sender identification number (issued by a government or
                      similar authority) needs to be provided by Originating
                      Entity along with the payment in certain markets. 



                      ISO20022 field name: Ultimate Debtor Identification

                      Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)
                  idIssueCountry:
                    maxLength: 3
                    minLength: 3
                    pattern: ^\d\d\d$
                    type: string
                    description: >-
                      Sender identification issuing country needs to be provided
                      by Originating Entity along with the payment in certain
                      markets. 

                      Format: 3-digit ISO-3166 (numeric) country code


                      ISO20022 field name: Ultimate Debtor Identification Issuer
                      Country

                      Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)
            senderAccountNumber:
              maxLength: 34
              minLength: 1
              type: string
              description: >-
                A sender account number is used to uniquely identify the
                sender’s account. 

                This field is Mandatory if a senderReferenceNumber is not sent.

                Note:

                1. Originators should provide either a sender reference number
                or a sender account number but not both.

                2. Originators should not send any PANs in this field.


                ISO20022 field name: Debtor Account Number
            senderReferenceNumber:
              maxLength: 16
              minLength: 1
              type: string
              description: >-
                P2A: A sender reference number is used to uniquely identify the
                person or entity funding the transaction. 

                This field is Mandatory if a senderAccountNumber is not sent.

                Note: 

                1. Originators should not send any PANs in this field.

                2. Originators should provide either a sender reference number
                or a sender account number but not both.


                ISO20022 field name: Debtor Reference Number
            beneficiaryRelationship:
              maxLength: 30
              minLength: 1
              type: string
              description: |-
                Sender relationship with the recipient

                ISO20022 field name: Ultimate Debtor Beneficiary Relationship
        recipientDetail:
          required:
            - payoutMethod
          type: object
          properties:
            bank:
              required:
                - accountName
                - accountNumber
                - accountNumberType
                - bankName
                - countryCode
                - currencyCode
              type: object
              properties:
                BIC:
                  maxLength: 11
                  minLength: 8
                  type: string
                  description: >-
                    Recipient bank account Business Identifier Code (BIC) 


                    ISO20022 field name: Creditor Agent Financial Institution
                    BICFI

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                bankCode:
                  maxLength: 12
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank account bank code


                    ISO20022 field name: Creditor Agent Financial Institution
                    Clearing System Member Identification

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                bankName:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank name


                    ISO20022 field name: Creditor Agent Financial Institution
                    Name
                branchCode:
                  maxLength: 12
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank account branch code


                    ISO20022 field name: Creditor Agent Branch Identification

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                accountName:
                  maxLength: 70
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank account name i.e. accountholder name as
                    recorded on recipient bank account


                    ISO20022 field name: Creditor Account Name

                    (Refer to Payouts Endpoint Guide on country-specific
                    required fields and lengths)
                accountType:
                  type: string
                  description: >-
                    Recipient bank account type


                    1 - Checking

                    2 - Saving

                    3 - Maestra

                    4 - Vista

                    5 - Loan

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)


                    ISO20022 field name: Creditor Account Type

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                  enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                countryCode:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >-
                    Recipient bank account country code

                    Format: 3-digit ISO-3166 (numeric) country code


                    ISO20022 field name: Creditor Agent Financial Institution
                    Country Code

                    (Refer to Payouts Endpoint Guide on country-specific codes)
                bankCodeType:
                  type: string
                  description: >-
                    Recipient bank account bank code type


                    ISO20022 field name: Creditor Agent Financial Institution
                    Clearing System Member Identification Type

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                  enum:
                    - ABA
                    - SORT_CODE
                    - DEFAULT
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >-
                    Recipient bank account currency code

                    Format: 3-digit ISO-4217 (numeric) currency code


                    ISO20022 field name: Creditor Account Currency

                    Mandatory (Refer to Payouts Endpoint Guide on
                    country-specific currency codes)
                accountNumber:
                  maxLength: 34
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank account number


                    ISO20022 field name: Creditor Account Number or IBAN

                    (Refer to Payouts Endpoint Guide on country-specific
                    required fields and lengths)
                accountNumberType:
                  type: string
                  description: >-
                    Recipient bank account number type 


                    ISO20022 field name: Creditor Financial Institution Account
                    Number Type

                    (Refer to Payouts Endpoint Guide on country-specific
                    required fields and lengths)

                    Valid values: "IBAN" and "DEFAULT"
                  enum:
                    - IBAN
                    - DEFAULT
              description: >-
                If payout is push to bank account, this object is required(P2A
                only)
            name:
              maxLength: 70
              minLength: 1
              type: string
              description: >-
                Recipient full name or company name


                ISO20022 field name: Creditor Name

                Conditional (Mandatory if recipient type is C or recipient first
                name and last name is not provided)
            type:
              maxLength: 1
              minLength: 1
              type: string
              description: |-
                Identifies the type of recipient - Individual or Company 


                ISO20022 field name: Creditor Identification Type
                Mandatory (Valid values : “I”=Individual, “C”=Company)
              x-variant: '| enumeration'
            address:
              type: object
              properties:
                city:
                  maxLength: 35
                  minLength: 1
                  type: string
                  description: >-
                    RRecipient address city


                    ISO20022 field name: Creditor Address Town Name

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                state:
                  maxLength: 25
                  minLength: 2
                  type: string
                  description: >-
                    Recipient address state


                    ISO20022 field name: Creditor Address Country Sub-division

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                country:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >-
                    Recipient address country

                    Format: 3-digit ISO-3166 (numeric) country code


                    ISO20022 field name: Creditor Address Country

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                postalCode:
                  maxLength: 16
                  minLength: 1
                  type: string
                  description: >-
                    Recipient address postal code


                    ISO20022 field name: Creditor Address Postal Code

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                addressLine1:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: >-
                    Recipient address line 1


                    ISO20022 field name: Creditor Address Line 1

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
                addressLine2:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: >-
                    Recipient address line 2


                    ISO20022 field name: Creditor Address Line 2

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)
            lastName:
              maxLength: 35
              minLength: 1
              type: string
              description: |-
                Recipient last name

                ISO20022 field name: Creditor Last Name
                Conditional (Mandatory if recipient full name is not provided)
            firstName:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Recipient first name


                ISO20022 field name: Creditor First Name

                Conditional (Mandatory if recipient full name field is not
                provided)
            cityOfBirth:
              maxLength: 35
              minLength: 1
              type: string
              description: |
                Recipient city of birth

                ISO20022 field name: Creditor City of Birth
            dateOfBirth:
              type: string
              description: >-
                Recipient date of birth


                ISO20022 field name: Creditor Birth Date

                Conditional (Refer to Payouts Endpoint Guide on country-specific
                required fields and lengths)
              format: date
            contactEmail:
              maxLength: 50
              minLength: 1
              type: string
              description: |-
                Recipient email address

                ISO20022 field name: Creditor Contact Email Address
            payoutMethod:
              maxLength: 1
              minLength: 1
              type: string
              description: >-
                Originating Entity must indicate the payout method i.e.Push to
                Account


                Valid values:

                “B” – Push to Bank account


                ISO20022 field name: n/a
              x-variant: '| enumeration'
            contactNumber:
              maxLength: 30
              minLength: 1
              type: string
              description: >-
                Recipient contact number, required in certain markets

                Format: pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}


                ISO20022 field name: Creditor Contact Phone Number

                Conditional (Refer to Payouts Endpoint Guide on country-specific
                required fields and lengths)
            additionalData:
              type: array
              description: >-
                Additional fields that are needed in order to complete the
                additional screening. The additional fields can be included as
                name value pairs (Field name, Field value)
              items:
                type: object
                properties:
                  name:
                    maxLength: 35
                    minLength: 1
                    type: string
                    description: >
                      Originating Entity to send additional recipient
                      information needed in order to process the payment. The
                      additional fields can be included as name value pairs
                      (Field name, Field value). This field represents the name
                      component of the name-value pair.


                      ISO20022 field name: Creditor Remittance Information
                      Document Name
                  value:
                    maxLength: 100
                    minLength: 1
                    type: string
                    description: >
                      Originating Entity to send additional recipient
                      information needed in order to process the payment. The
                      additional fields can be included as name value pairs
                      (Field name, Field value). This field represents the
                      value  component of the name-value pair.


                      ISO20022 field name: Creditor Remittance Information
                      Document Description
            countryOfBirth:
              maxLength: 3
              minLength: 3
              pattern: ^\d\d\d$
              type: string
              description: >-
                Recipient country of birth


                ISO20022 field name: Creditor Country of Birth

                Conditional (Refer to Payouts Endpoint Guide on country-specific
                required fields and lengths)
            identificationList:
              type: array
              description: Identification list of recipient
              items:
                type: object
                properties:
                  idType:
                    maxLength: 1
                    minLength: 1
                    type: string
                    description: >-
                      Recipient identification type (issued by a government or
                      similar authority) needs to be provided by Originating
                      Entity along with the payment in certain markets. 



                      ISO20022 field name: Creditor Identification Code

                      Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      Valid values : P- Passport D-Driving License, N-National
                      Id, T-Tax Id, L-Legal Entity Registration Number,
                      F-Foreign Id
                    enum:
                      - P
                      - D
                      - 'N'
                      - T
                      - L
                      - F
                    x-variant: '| enumeration'
                  idNumber:
                    maxLength: 35
                    minLength: 1
                    type: string
                    description: >-
                      Recipient identification number (issued by a government or
                      similar authority) needs to be provided by Originating
                      Entity along with the payment in certain markets. 



                      ISO20022 field name: Creditor Identification

                      Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)
                  idIssueCountry:
                    maxLength: 3
                    minLength: 3
                    type: string
                    description: >-
                      Recipient identification issuing country needs to be
                      provided by Originating Entity along with the payment in
                      certain markets. 

                      Format: 3-digit ISO-3166 (numeric) country code


                      ISO20022 field name: Creditor Identification Issuer
                      Country

                      Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)
        originatorDetail:
          required:
            - address
            - bankId
            - merchantCategoryCode
            - originatorId
            - originatorName
          type: object
          properties:
            bankId:
              type: integer
              description: >+
                Originating bank ID is the Bank Identification Number (BIN)
                assigned to each Visa Member upon enrollment. If the Originator
                is not a Financial Institution (FI) and will be processing using
                a sponsor FI (i.e. Acquirer ) , this is the BIN of the
                sponsoring FI (Acquirer). It uniquely identifies the Bank/FI
                that is sponsoring the Originating Entity in Visa’s core system.
                Note: This is also referred to as the “Acquiring BIN” by Visa


                ISO20022 field name: Debtor Agent FI Identification

            address:
              required:
                - country
              type: object
              properties:
                state:
                  maxLength: 2
                  minLength: 2
                  type: string
                  description: >-
                    Originating Entity State Code

                    ISO20022 field name: Debtor State

                    Conditional (Required if Originating Entity country is US or
                    Canada)
                country:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: |-
                    Originating Entity country code. 
                    Format: 3-digit ISO-3166 (numeric) country code

                    ISO20022 field name: Debtor Country
                postalCode:
                  maxLength: 14
                  minLength: 1
                  type: string
                  description: >-
                    Originating Entity Postal Code 

                    ISO20022 field name: Debtor Postal Code

                    mandatory only for Originators in US and Canada.

                    Conditional (Required if Originating Entity country is US or
                    Canada)
                addressLine:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: |-
                    Originating Entity address line
                    ISO20022 field name: N/A
            bankBIC:
              maxLength: 11
              minLength: 8
              type: string
              description: |
                Business Identifier Code (BIC) of the Sponsor FI (Acquirer)
                ISO20022 field name: Debtor Agent FI BIC
            originatorId:
              maxLength: 15
              minLength: 1
              type: string
              description: >
                An alphanumeric field that uniquely identifies the Originating
                Entity for Push to Account transactions. The Originating Entity
                should populate Card Acceptor Terminal ID (CAID)  for Push to
                Card transactions. 

                ISO20022 field name: Debtor - Originating Entity Identification
            originatorBIC:
              maxLength: 11
              minLength: 1
              type: string
              description: >-
                Business Identifier Code (BIC) of the Originating entity

                ISO20022 field name: Debtor BIC

                Conditional (Refer to Payouts Endpoint Guide on country-specific
                required fields and lengths).
            originatorName:
              maxLength: 70
              minLength: 1
              type: string
              description: >-
                The legal name of the merchant or originating entity sending the
                payment instruction to Visa.

                ISO20022 field name: Debtor Name
            paymentFacilitator:
              type: object
              properties:
                id:
                  maxLength: 11
                  minLength: 8
                  type: string
                  description: >-
                    Business Identifier Code (BIC) of the Payment Facilitator
                    i.e. intermediary entity that touches funds prior to
                    settlement with the Visa Member bank (i.e. Acquirer)


                    ISO20022 field name: Initiating Party Identification
                name:
                  maxLength: 70
                  minLength: 1
                  type: string
                  description: >-
                    The legal name of any intermediary entity that touches funds
                    prior to settlement with the Visa Member bank (i.e.
                    Acquirer)


                    ISO20022 field name: Initiating Party Name

                    Conditional (Mandatory if payment facilitator is touching
                    the funds)
                country:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >-
                    The country of any intermediary entity that touches funds
                    prior to settlement with the Visa Member bank (i.e.
                    Acquirer)


                    ISO20022 field name: Initiating Party Country

                    Conditional (Mandatory if payment facilitator is touching
                    the funds)
            merchantCategoryCode:
              maxLength: 4
              minLength: 4
              type: string
              description: >
                Code describing the merchant's type of business product or
                service known as the merchant category code (MCC). Codes are
                listed in the Visa Core Rules and Visa Product and Service
                Rules.

                ISO20022 field name: Debtor Other Identification
        transactionDetail:
          required:
            - businessApplicationId
            - localTransactionDateTime
            - transactionAmount
            - transactionCurrencyCode
          type: object
          properties:
            endToEndId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity's customer to
                uniquely identify the transaction


                ISO20022 field name: Payment Identification - EndtoEnd
                Identification
            payoutSpeed:
              type: string
              description: >
                Originating Entity to indicate the desired payout speed for the
                payment. Currently supported value is "STANDARD". This field
                will be enhanced in future to include additional speed options


                ISO20022 field name: Instruction Priority
              enum:
                - STANDARD
                - PREMIUM
            additionalData:
              type: array
              description: >
                Additional fields that are needed in order to complete the
                additional screening. The additional fields can be included as
                name value pairs (Field name, Field value)

                Conditional (Refer to Payouts Endpoint Guide on country-specific
                required fields and lengths)
              items:
                required:
                  - name
                  - value
                type: object
                properties:
                  name:
                    maxLength: 35
                    minLength: 1
                    type: string
                    description: >
                      Originating Entity to send additional transaction
                      information needed in order to process the payment. The
                      additional fields can be included as name value pairs
                      (Field name, Field value). This field represents the name
                      component of the name-value pair.


                      ISO20022 field name: Remittance Information Transaction
                      Additional Details - Name
                  value:
                    maxLength: 100
                    minLength: 1
                    type: string
                    description: >
                      Originating Entity to send additional transaction
                      information needed in order to process the payment. The
                      additional fields can be included as name value pairs
                      (Field name, Field value). This field represents the
                      value  component of the name-value pair.


                      ISO20022 field name: Remittance Information Transaction
                      Additional Details - Value
            purposeOfPayment:
              maxLength: 12
              minLength: 1
              type: string
              description: >-
                Purpose of payment is required in certain markets to clearly
                identify the purpose of the payment based on the standard values
                defined for respective market


                ISO20022 field name: Purpose of Payment

                Conditional (Refer to Payouts Endpoint Guide on country-specific
                required fields and lengths)
            clientReferenceId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity to uniquely
                identify the transaction


                ISO20022 field name: Payment Identification - Transaction
                Identification
            transactionAmount:
              type: integer
              description: >-
                The transaction amount to be paid out to the recipient bank
                account or card.  Expressed in the currency specified in
                transaction currency code. 


                ISO20022 field name:  Transaction Information And Status -
                Instructed Amount

                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to the Payouts Endpoint Guide for
                country-specific currency minor units.


                Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.
            statementNarrative:
              maxLength: 140
              minLength: 1
              type: string
              description: >-
                Originating Entity is advised to provide a narrative that helps
                the recipient clearly identify the sender and reason for the
                payment.

                Text will be displayed on the recipient’s statement when the
                payment gets posted to the recipient’s account (depends on
                recipient bank's process)


                ISO20022 field name: Remittance Information Unstructured

                Conditional (Refer to Payouts Endpoint Guide on country-specific
                required fields and lengths)
            businessApplicationId:
              maxLength: 2
              minLength: 2
              type: string
              description: "Business Application Identifier (BAI) identifies the type of program for which the payment is being sent, i.e. whether it is a funds disbursement, money transfer etc. It should be a valid value allowed by Visa and approved for the program during onboarding.\n\nValid BAI for Push to Accounts:\n-\tMoney transfer: AA, PP; \n-\tNon-money transfer: BB, FD, GD, GP, LO, MD, OG, PD;\n\nISO20022 field name: Payment Category Purpose"
            systemTraceAuditNumber:
              maxLength: 6
              minLength: 6
              type: string
              description: >
                This field contains a number assigned by the Originating Entity
                that uniquely identifies a transaction and all message types.
                The trace number is one of the key data elements used to match a
                response to its request or to match a message to others for a
                given transaction set


                ISO20022 field name: N/A
            transactionCurrencyCode:
              maxLength: 3
              minLength: 3
              pattern: ^\d\d\d$
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated to the transaction amount 

                Format: 3-digit ISO-4217 (numeric) currency code


                ISO20022 field name:  Transaction Information And Status -
                Instructed Amount Currency Code
            localTransactionDateTime:
              pattern: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
              type: string
              description: >
                The date and time when the transaction takes place, expressed in
                the local time of the Originating Entity request

                Format: YYYY-MM-DDThh:mm:ss


                ISO20022 field name: Message Creation Date Time
            retrievalReferenceNumber:
              maxLength: 12
              minLength: 1
              pattern: \^d{12}$
              type: string
              description: >-
                This is a unique identifier generated by the Originating Entity
                for a transaction and its one of the key fields for matching a
                transaction with the subsequent messages with in the transaction
                set example Notification, Returns, Cancel, Exception management
                via VD Portal.


                The format is recommended to be ydddhhnnnnnn

                yddd - The first four digits must be a valid Julian date format,
                where the first digit = 0-9 (last digit of current year) and the
                next three digits = 001-366 (number of the day in the year). 

                hh - can be the two digit hour in a 24 hour clock (00-23) during
                which the transaction is performed. 

                nnnnnn - can be the systemsTraceAuditNumber or any 6 digit
                number


                ISO20022 field name: Transaction Information And Status -
                Original Instruction Identification
    AccountBalance:
      required:
        - amount
        - currencyCode
      type: object
      properties:
        amount:
          description: >
            The balance amount for a particular currency.


            Note: The number of decimal places assumed for this field depends on
            the currency.
          allOf:
            - $ref: '#/components/schemas/SignedAmount'
        currencyCode:
          description: |
            The currency code is a three letter ISO 4217 code. 

            E.g. GBP for British sterling pounds.
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
      description: >
        Represents a monetary value containing a decimal amount value along with
        a currency code. 
    PayoutNotificationRequestStatus:
      type: string
      description: |
        Status of the transaction being queried

        ISO20022 field name: Transaction Status
    AccountQueryResponse-1:
      oneOf:
        - $ref: '#/components/schemas/AccountQuerySuccessResponse'
        - $ref: '#/components/schemas/AccountQueryErrorResponse'
        - $ref: '#/components/schemas/AccountQueryPendingResponse'
    TimestampType:
      type: string
      description: >
        ISO 8601 formatted UTC Timestamp, YYYY-MM-DDThh:mm:ss.sssTZD. TZD is
        either Z or +/-00:00


        example: 2020-05-05T12:12:12.000Z, or 1997-07-16T19:20:30.45+00:00


        ISO20022 field name: Transaction Information And Status - Message
        Creation Date Time
      format: date-time
    AccountQueryResponse-2:
      oneOf:
        - $ref: '#/components/schemas/AccountQuerySuccessResponse-1'
        - $ref: '#/components/schemas/AccountQueryErrorResponse-1'
        - $ref: '#/components/schemas/AccountQueryPendingResponse'
    TransactionStatus-1:
      type: string
      description: >
        - PAYMENT_RECEIVED: Visa has acknowledged the payout instruction has
        been received

        - AWAITING_INFORMATION: Awaiting more information before transaction is
        processed .

        - PAYMENT_SENT: The payout has been submitted to the Network partner

        - PAYMENT_DELIVERED: The payout has been posted to the recipient's
        account.

        - PENDING_CANCELLATION: Cancel payout status is pending

        - CANCELLED - Payout is cancelled

        - RETURNED: Returned request is refunded to Originating Entity

        - REJECTED: Rejected request is refunded to Originating Entity
      example: PAYMENT_SENT
      enum:
        - PAYMENT_RECEIVED
        - AWAITING_INFORMATION
        - PAYMENT_SENT
        - PAYMENT_DELIVERED
        - PENDING_CANCELLATION
        - CANCELLED
        - RETURNED
        - REJECTED
    AccountQueryResponse-3:
      oneOf:
        - $ref: '#/components/schemas/AccountQuerySuccessResponse-2'
        - $ref: '#/components/schemas/AccountQueryErrorResponse-2'
        - $ref: '#/components/schemas/AccountQueryPendingResponse-1'
    PayoutNotification:
      oneOf:
        - $ref: '#/components/schemas/PayoutNotificationReceivedRequest'
        - $ref: '#/components/schemas/PayoutNotificationProcessRequest'
        - $ref: '#/components/schemas/PayoutNotificationFailedRequest'
    NotificationsErrorResponseWithKey:
      type: object
      properties:
        errorResponse:
          allOf:
            - $ref: '#/components/schemas/NotificationsErrorResponse'
    BIC:
      maxLength: 11
      minLength: 8
      type: string
      description: |
        Business Identifier Code (BIC) of the Sponsor FI (Acquirer)

        ISO20022 field name: Debtor Agent FI BIC
    IdentityListItem:
      title: IdentityListItem
      required:
        - label
        - value
      type: object
      properties:
        label:
          type: string
          description: The visible label to be presented in the UI list.
        value:
          type: string
          description: The stored value for the visible list item label.
      description: >-
        This is used to populate a recipient identity field which needs to be
        displayed as a list in the UI.
    AccountPayoutRequest-1:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/AccountTransactionDetail-1'
      allOf:
        - $ref: '#/components/schemas/PayoutAccountRequest'
    RecipientCompany:
      required:
        - name
        - type
      type: object
      properties:
        name:
          description: |
            Recipient company name

            ISO20022 field name: Creditor Name
          allOf:
            - $ref: '#/components/schemas/Name'
        type:
          description: |
            Identifies the type of recipient - "C" for Company 

            ISO20022 field name: Creditor Identification Type       
          allOf:
            - $ref: '#/components/schemas/Type'
        address:
          $ref: '#/components/schemas/RecipientAccountPayoutAddress'
    CancelPayout503Response:
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
              example: ServiceUnavailable
            status:
              type: integer
              description: 3 digit http status code
              example: 503
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
            message:
              type: string
              description: The long description of the error.
              example: ServiceUnavailable
    AccountPayoutRequest-2:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/AccountTransactionDetail-2'
            - required:
                - clientReferenceId
              type: object
              properties:
                quoteId:
                  allOf:
                    - $ref: '#/components/schemas/QuoteId-1'
                clientReferenceId:
                  allOf:
                    - $ref: '#/components/schemas/ClientReferenceId'
      allOf:
        - $ref: '#/components/schemas/PayoutAccountRequest-1'
    ValidatePayoutResponse-1:
      oneOf:
        - $ref: '#/components/schemas/ValidPayoutResponse'
        - $ref: '#/components/schemas/ValidPayoutWithNetworkResponse-1'
        - $ref: '#/components/schemas/InvalidPayoutResponse'
    CancelPayoutRequest:
      type: object
      properties:
        transactionDetail:
          type: object
          properties:
            narrative:
              maxLength: 140
              minLength: 1
              type: string
              description: |-
                This is a short statement explaining the reason for cancellation
                 P2A: Optional
              example: testing narrative
    BalanceNotification:
      required:
        - accountId
        - balance
        - eventType
        - initiatingPartyId
      type: object
      properties:
        balance:
          type: array
          description: array of balances for all currencies of the 'accountId'
          items:
            allOf:
              - $ref: '#/components/schemas/AccountBalance'
              - type: object
                properties:
                  operator:
                    type: string
                    description: >-
                      This field only applies to 'THRESHOLD' and
                      'LIQUIDITY_FAILURE' eventType
                    enum:
                      - LESS_THAN
                  threshold:
                    allOf:
                      - $ref: '#/components/schemas/AmountWithZero'
                  balanceTimestamp:
                    allOf:
                      - $ref: '#/components/schemas/TimestampType'
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
        eventType:
          type: string
          description: |
            Indicates why the balance notification is triggered

            Possible values:
            * `THRESHOLD` - When balance threshold is exceeded
            * `LIQUIDITY_FAILURE` - when balance is negative
            * `PERIODIC` - Regular balance snapshot at certain day/time
          enum:
            - THRESHOLD
            - LIQUIDITY_FAILURE
            - PERIODIC
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId'
    ValidatePayoutResponse-3:
      oneOf:
        - $ref: '#/components/schemas/ValidPayoutResponse'
        - $ref: '#/components/schemas/ValidPayoutWithNetworkResponse-1'
        - $ref: '#/components/schemas/InValidPayoutResponse'
    ValidatePayoutResponse-2:
      oneOf:
        - $ref: '#/components/schemas/ValidPayoutResponse'
        - $ref: '#/components/schemas/ValidPayoutWithNetworkResponse-1'
        - $ref: '#/components/schemas/InvalidPayoutResponse-1'
    SendPayoutFromOriginatorRequest:
      required:
        - originatorDetail
        - recipientDetail
        - senderDetail
        - transactionDetail
      type: object
      properties:
        senderDetail:
          required:
            - address
            - sourceOfFunds
          type: object
          properties:
            name:
              maxLength: 70
              minLength: 1
              type: string
              description: >-
                Sender full name or company name<br><br>ISO20022 field name:
                Ultimate Debtor Name<br>P2A: Conditional (Mandatory if sender
                type is C or sender first name and last name is not
                provided)<br>P2W: Conditional (Mandatory if sender type is C or
                sender first name and last name is not provided)<br>P2C:
                Conditional (Please do not use this field for non Visa
                transactions. Use firstName,  lastName & middleName instead. Use
                this for Visa transactions if you cannot provide recipient first
                name and last name as separate fields. If the transaction is a
                funds disbursement, provide the name of merchant or government
                entity sending the funds.<br><br>If the transaction is a
                pre-paid load or credit card bill pay and U.S. domestic, provide
                the cardholder's name.). The minimum length is 2 and maximum
                length is 30.
            type:
              type: string
              description: |-
                Identifies the type of sender - Individual or Company 


                ISO20022 field name: Ultimate Debtor Identification Type
                P2A: Mandatory (Valid values : “I”=Individual, “C”=Company)
                P2W: Mandatory (Valid values : “I”=Individual, “C”=Company)
                P2C: N/A
              enum:
                - I
            address:
              type: object
              properties:
                city:
                  maxLength: 35
                  minLength: 1
                  type: string
                  description: |-
                    Sender address city

                    ISO20022 field name: Ultimate Debtor Address Town Name

                     P2A: Mandatory. 
                    P2W: Mandatory. 
                     P2C: Optional. The maximum length is 25.
                state:
                  maxLength: 25
                  minLength: 2
                  type: string
                  description: >-
                    Sender address state


                    ISO20022 field name: Ultimate Debtor Address Country
                    Sub-division

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2C: Conditional (Refer to OCT GIG on country-specific
                    required fields)

                    P2C: The maximum length is 2.
                country:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >+
                    Sender address country

                    Format: 3-digit ISO-3166 (numeric) country code


                    ISO20022 field name: Ultimate Debtor Address Country


                    P2A:Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W:Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2C:Conditional (Refer to OCT GIG on country-specific
                    required fields)

                postalCode:
                  maxLength: 10
                  minLength: 5
                  type: string
                  description: |-
                    Sender address postal code

                    ISO20022 field name: Ultimate Debtor Address Postal Code
                    P2A: The minLength length is 1. 
                    P2W: The minLength length is 1. 
                    P2C: The maximum length is 10.
                addressLine1:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: |-
                    Sender address line 1

                    ISO20022 field name: Ultimate Debtor Address Line 1

                    P2A: Mandatory. 
                    P2W: Mandatory. 
                    P2C: Optional. The maximum length is 35
                addressLine2:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: |-
                    Sender address line 2

                    ISO20022 field name: Ultimate Debtor Address Line 2
                    P2C: N/A
            lastName:
              maxLength: 35
              minLength: 2
              type: string
              description: >-
                Sender last name<br><br>ISO20022 field name: Ultimate Debtor
                Last Name<br>P2A: Conditional (Mandatory if sender full name is
                not provided)<br>P2W: Conditional (Mandatory if sender full name
                is not provided)<br>P2C: Conditional  (Mandatory for transaction
                routed over non Visa networks through Push Payment Gateway
                Service).
            firstName:
              maxLength: 35
              minLength: 2
              type: string
              description: >-
                Sender first name<br><br>ISO20022 field name: Ultimate Debtor
                First Name<br>P2A: Conditional (Mandatory if sender full name
                field is not provided)<br>P2W: Conditional (Mandatory if sender
                full name field is not provided)<br>P2C: Conditional  (Mandatory
                for transaction routed over non Visa networks through Push
                Payment Gateway Service).
            middleName:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Sender middle name<br><br>ISO20022 field name: N/A<br>P2A:
                N/A<br>P2W: N/A<br>P2C: Optional
            cityOfBirth:
              maxLength: 35
              minLength: 1
              type: string
              description: |-
                Sender city of birth

                ISO20022 field name: Ultimate Debtor City of Birth
                P2A: Optional
                P2W: Optional
                P2C: N/A
            dateOfBirth:
              maxLength: 10
              minLength: 10
              pattern: ^\d\d\d\d\-\d\d\-\d\d$
              type: string
              description: >-
                Sender date of birth


                ISO20022 field name: Ultimate Debtor Birth Date

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2C: Optional
            contactEmail:
              maxLength: 50
              minLength: 1
              type: string
              description: |-
                Sender email address

                ISO20022 field name: Ultimate Debtor Contact Email Address
                P2A: Optional
                P2W: Optional
                P2C: N/A
            contactNumber:
              maxLength: 30
              minLength: 1
              type: string
              description: |-
                Sender contact number
                Format: pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}

                ISO20022 field name: Ultimate Debtor Contact Phone Number
                P2A: Optional
                P2W: Optional
                P2C: N/A
            sourceOfFunds:
              maxLength: 2
              minLength: 2
              type: string
              description: >-
                Sender source of funds indicator i.e. the funding method used by
                the sender to fund the payout. 

                Valid values are:

                01 =  Visa credit 

                02 =  Visa debit

                03 =  Visa prepaid

                04 =  Cash

                05 =  Deposit accounts other than those linked to a Visa card
                (includes checking/savings accounts and proprietary
                debit/ATMcards)

                06 =  Credit accounts other than those  linked to a Visa card
                (includes credit cards and proprietary credit lines)


                ISO20022 field name: Debtor Account Type Source of Funds

                P2A: Mandatory 

                P2W: Mandatory 

                P2C: Mandatory 


                Note: For any Company to Company (C2C) or Company to Individual
                (C2I) use-case, this should be “05”, since the funds come from
                the sender’s bank account.
            additionalData:
              type: array
              description: >
                Additional fields that are needed in order to complete the
                additional screening. The additional fields can be included as
                name value pairs (Field name, Field value)

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2W: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2C: N/A
              items:
                type: object
                properties:
                  name:
                    maxLength: 35
                    minLength: 1
                    type: string
                    description: >-
                      Originating Entity to send additional sender information
                      needed in order to process the payment. The additional
                      fields can be included as name value pairs (Field name,
                      Field value). This field represents the name component of
                      the name-value pair.


                      ISO20022 field name: Debtor Remittance Information
                      Document Name

                      P2A: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2W: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2C: N/A
                  value:
                    maxLength: 100
                    minLength: 1
                    type: string
                    description: >-
                      Originating Entity to send additional sender information
                      needed in order to process the payment. The additional
                      fields can be included as name value pairs (Field name,
                      Field value). This field represents the value  component
                      of the name-value pair.


                      ISO20022 field name: Debtor Remittance Information
                      Document Description

                      P2A: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2W: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2C: N/A
            countryOfBirth:
              maxLength: 3
              minLength: 3
              pattern: ^\d\d\d$
              type: string
              description: >-
                Sender country of birth


                ISO20022 field name: Ultimate Debtor Country of Birth

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2W: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2C: N/A
            sourceOfIncome:
              maxLength: 30
              minLength: 1
              type: string
              description: |-
                Sender source of income

                ISO20022 field name: Ultimate Debtor Source of Income
                P2A: Optional
                P2W: Optional
                P2C: N/A
            identificationList:
              type: array
              description: >-
                Identification list of sender 

                ISO20022 field name: N/A

                P2A: Multiple instance of IDs can be supported in the same
                request

                P2W: Multiple instance of IDs can be supported in the same
                request

                P2C: We have a current limitation that sender ID and recipient
                ID information are mutually exclusive. If both sender ID and
                recipient ID are sent in the same request, only sender ID
                related information will be sent to the issuer. 

                Additionally, only 1 instance of ID per sender or recipient is
                currently supported. If more than one instance is provided, only
                the first instance will be forwarded to the issuer.
              items:
                type: object
                properties:
                  idType:
                    maxLength: 4
                    minLength: 1
                    type: string
                    description: >-
                      Sender identification type (issued by a government or
                      similar authority) needs to be provided by Originating
                      Entity along with the payment in certain markets. 



                      ISO20022 field name: Ultimate Debtor Identification Code


                      P2A: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2W: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      Valid values : 
                       P- Passport 
                       D-Driving License
                       N-National Id
                       T-Tax Id
                       L-Legal Entity Registration Number
                       F-Foreign Id 

                      P2C: This field will contain the type of sender
                      identification. The valid values are: n CUID - Customer
                      identification - unspecified 
                       NTID - National identification
                       PASN - Passport number
                       DRLN - Driver license
                       TXIN - Tax identification 
                       CPNY - Company registration number
                       PRXY - Proxy identification 
                       SSNB - Social security number 
                       ARNB - Alien registration number 
                       LAWE - Law enforcement identification 
                       MILI - Military identification 
                       TRVL - Travel identification - non-passport 
                       EMAL - Email
                       PHON - Phone number 
                      For a given instance of identificationList[], a minimum of
                      idType and idNumber fields should be provided, else the ID
                      information will not be forwarded to the issuer.
                  idNumber:
                    maxLength: 35
                    minLength: 1
                    type: string
                    description: >-
                      Sender identification number (issued by a government or
                      similar authority) needs to be provided by Originating
                      Entity along with the payment in certain markets. 



                      ISO20022 field name: Ultimate Debtor Identification

                      P2A: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2W: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2C: This field will contain an acquirer-populated value
                      associated with the Identification Type in field idType. 

                      For a given instance of identificationList[] , a minimum
                      of idType and idNumber fields should be provided, else the
                      ID information will not be forwarded to the issuer.
                  idOwnerType:
                    maxLength: 1
                    minLength: 1
                    type: string
                    description: >-
                      This field denotes whether the Tax ID is a business or
                      individual's Tax ID when idType contains the value of TXIN
                      (Tax identification). 



                      ISO20022 field name: n/a

                      P2A: N/A

                      P2W: N/A

                      P2C: Optional 

                      The valid values are : 

                      C (Company/Business) 

                      I (Individual)
                  idIssueCountry:
                    maxLength: 3
                    minLength: 3
                    type: string
                    description: >-
                      Sender identification issuing country needs to be provided
                      by Originating Entity along with the payment in certain
                      markets. 

                      Format: 3-digit ISO-3166 (numeric) country code


                      ISO20022 field name: Ultimate Debtor Identification Issuer
                      Country

                      P2A: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2W: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2C: This tag will contain the 3-digit ISO country code of
                      the ID issuing country.
            senderAccountNumber:
              maxLength: 34
              minLength: 1
              type: string
              description: >-
                P2A: A sender account number is used to uniquely identify the
                sender’s account. 

                P2W: A sender account number is used to uniquely identify the
                sender’s account. 

                This field is Mandatory if a senderReferenceNumber is not sent.

                Note:

                1. For P2A or P2W Originators should provide either a sender
                reference number or a sender account number but not both.

                2. Originators should not send any PANs in this field for P2A or
                P2W.


                P2C: If the transaction is a money transfer, pre-paid load, or
                credit card bill pay, and if the sender intends to fund the
                transaction with a financial instrument (eg. debit card), this
                field is required and must contain the sender's account number. 

                If the transaction is a funds disbursement, the field is not
                required.

                Note: 

                1. For P2C this is a 16-digit PAN or token or account number
                associated with the sender’s account.


                ISO20022 field name: Debtor Account Number

                P2A: 34

                P2W: 34

                P2C: 1-19
            senderReferenceNumber:
              maxLength: 16
              minLength: 1
              type: string
              description: >-
                P2A: A sender reference number is used to uniquely identify the
                person or entity funding the transaction. 

                This field is Mandatory if a senderAccountNumber is not sent.

                Note: 

                1. Originators should not send any PANs in this field for P2A,
                P2W and P2C.

                2. For P2A Originators should provide either a sender reference
                number or a sender account number but not both.


                P2C: If the transaction is a money transfer, pre-paid load, or
                credit card bill pay, and if the sender intends to fund the
                transaction with a non-financial instrument (for example, cash),
                a reference number unique to the sender is required. 

                This field is Mandatory if the transaction is a funds
                disbursement. 

                This field is Mandatory if senderAccountNumber is not sent.

                Note: 

                1. Originators should not send any PANs in this field for P2A,
                P2W and P2C.


                ISO20022 field name: Debtor Reference Number

                P2A: 1-34

                P2W: 1-34

                P2C: 1-16
            beneficiaryRelationship:
              maxLength: 30
              minLength: 1
              type: string
              description: |-
                Sender relationship with the recipient

                ISO20022 field name: Ultimate Debtor Beneficiary Relationship
                P2A: Optional
                P2W: Optional
                P2C: N/A
            customizedIdentification:
              type: object
              properties:
                businessIdentificationNumber:
                  maxLength: 20
                  minLength: 1
                  type: string
                  description: >-
                    This is an alphanumeric value that carries the sender's
                    identification number issued to the sender by the government
                    or an authorized national entity. This field is to be used
                    if the sender is a business (e.g. Disbursements)

                    Note: If senderIdentificationNumberIndividual is not
                    populated, then this field needs to be populated mandatorily
                    for Brazil domestic transactions.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                individualIdentificationNumber:
                  maxLength: 13
                  minLength: 1
                  type: string
                  description: >-
                    This is an alphanumeric value that carries the sender's
                    identification number issued to the sender by the government
                    or an authorized national entity or contains the customer’s
                    VAT registration number for the individual tax
                    identification. This field is to be used if the sender is an
                    Individual (e.g. P2P payments)

                    Note: If senderIdentificationNumberBusiness is not
                    populated, then this field needs to be populated mandatorily
                    for Brazil domestic transactions. If businessApplicationId
                    has PS, then this field to be populated for Argentina
                    domestic transaction.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
        recipientDetail:
          required:
            - payoutMethod
          type: object
          properties:
            bank:
              required:
                - accountName
                - accountNumber
                - accountNumberType
                - bankName
                - countryCode
                - currencyCode
              type: object
              properties:
                BIC:
                  maxLength: 11
                  minLength: 8
                  type: string
                  description: >-
                    Recipient bank account Business Identifier Code (BIC) 


                    ISO20022 field name: Creditor Agent Financial Institution
                    BICFI

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: N/A

                    P2C: N/A
                bankCode:
                  maxLength: 12
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank account bank code


                    ISO20022 field name: Creditor Agent Financial Institution
                    Clearing System Member Identification

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: N/A

                    P2C: N/A
                bankName:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank name


                    ISO20022 field name: Creditor Agent Financial Institution
                    Name

                    P2A: Mandatory

                    P2W: N/A

                    P2C: N/A
                branchCode:
                  maxLength: 12
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank account branch code


                    ISO20022 field name: Creditor Agent Branch Identification

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: N/A

                    P2C: N/A
                accountName:
                  maxLength: 70
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank account name i.e. accountholder name as
                    recorded on recipient bank account


                    ISO20022 field name: Creditor Account Name

                    P2A: Mandatory (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: N/A

                    P2C: N/A
                accountType:
                  type: string
                  description: >-
                    Recipient bank account type


                    1 - Checking

                    2 - Saving

                    3 - Maestra

                    4 - Vista

                    5 - Loan

                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)


                    ISO20022 field name: Creditor Account Type

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: N/A

                    P2C: N/A
                  enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                countryCode:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >-
                    Recipient bank account country code

                    Format: 3-digit ISO-3166 (numeric) country code


                    ISO20022 field name: Creditor Agent Financial Institution
                    Country Code

                    P2A: Mandatory (Refer to Payouts Endpoint Guide on
                    country-specific codes)

                    P2W: N/A

                    P2C: N/A
                bankCodeType:
                  type: string
                  description: >-
                    Recipient bank account bank code type


                    ISO20022 field name: Creditor Agent Financial Institution
                    Clearing System Member Identification Type

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: N/A

                    P2C: N/A
                  enum:
                    - ABA
                    - SORT_CODE
                    - DEFAULT
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  type: string
                  description: >-
                    Recipient bank account currency code

                    Format: 3-digit ISO-4217 (numeric) currency code


                    ISO20022 field name: Creditor Account Currency

                    P2A: Mandatory (Refer to Payouts Endpoint Guide on
                    country-specific currency codes)

                    P2W: N/A

                    P2C: N/A
                accountNumber:
                  maxLength: 34
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank account number


                    ISO20022 field name: Creditor Account Number or IBAN

                    P2A: Mandatory (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: N/A

                    P2C: N/A
                accountNumberType:
                  type: string
                  description: >-
                    Recipient bank account number type 


                    ISO20022 field name: Creditor Financial Institution Account
                    Number Type

                    P2A: Mandatory (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    Valid values: "IBAN" and "DEFAULT"

                    P2W: N/A

                    P2C: N/A
                  enum:
                    - IBAN
                    - DEFAULT
              description: >-
                If payout is push to bank account, this object is required(P2A
                only)
            card:
              required:
                - accountNumber
              type: object
              properties:
                vauFlag:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Recipient primary account number Visa Account Updater (VAU)
                    flag


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional (If present, a valid value is required. Spaces
                    or special characters are not allowed. Possible values are :
                    N or Y (if Y then will cause VAU to be performed)
                accountType:
                  maxLength: 2
                  minLength: 2
                  type: string
                  description: >-
                    Used to identify the account type of the
                    recipientPrimaryAccountNumber in the request. Below are the
                    possible values. 

                    00-Not applicable 

                    01-Saving account 

                    02-Checking account 

                    03-Credit card account 

                    04-Universal account

                    Default is set to “00“ if not provided.



                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A
                     P2C:Optional
                  enum:
                    - '00'
                    - '10'
                    - '20'
                    - '30'
                    - '40'
                accountNumber:
                  maxLength: 19
                  minLength: 13
                  pattern: ^\d*$
                  type: string
                  description: >-
                    Recipient primary account number, or network token account
                    number


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Mandatory
                expirationDate:
                  maxLength: 7
                  minLength: 7
                  type: string
                  description: |-
                    Recipient primary account number expiration date

                    ISO20022 field name: N/A
                    P2A: N/A
                    P2W: N/A
                    P2C: Optional
                  format: YYYY-MM
              description: If payout is push to card, this object is required(P2C only)
            name:
              maxLength: 70
              minLength: 1
              type: string
              description: >-
                Recipient full name or company name<br><br>ISO20022 field name:
                Creditor Name<br>P2A: Conditional (Mandatory if recipient type
                is C or recipient first name and last name is not
                provided)<br>P2W: Conditional (Mandatory if recipient type is C
                or recipient first name and last name is not provided) <br>P2C:
                Conditional (Please do not use this field for non Visa
                transactions. Please use firstName, lastName & middleName
                instead. Use this for Visa transactions if you cannot provide
                recipient first name and last name as separate fields). The
                maximum length for P2C is 30
            type:
              maxLength: 1
              minLength: 1
              type: string
              description: |-
                Identifies the type of recipient - Individual or Company 


                ISO20022 field name: Creditor Identification Type
                P2A: Mandatory (Valid values : “I”=Individual, “C”=Company)
                P2W: Mandatory (Valid values : “I”=Individual, “C”=Company)
                P2C: N/A
              x-variant: '| enumeration'
            wallet:
              required:
                - accountIdentifier
                - accountIdentifierType
                - countryCode
                - currencyCode
                - operatorName
              type: object
              properties:
                countryCode:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >-
                    Recipient wallet country code.

                    Format: 3-digit ISO-3166 (numeric) country code

                    P2A: N/A

                    P2W: Mandatory (Refer to Payouts Endpoint Guide on
                    country-specific codes)

                    P2C: N/A
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  type: string
                  description: >-
                    Recipient wallet country code.

                    Format: 3-digit ISO-4217 (numeric) currency code

                    P2A: N/A

                    P2W: Mandatory (Refer to Payouts Endpoint Guide on
                    country-specific currency codes)

                    P2C: N/A
                operatorName:
                  type: string
                  description: >-
                    This identifies the non bank wallet operator that has issued
                    the account to the recipient and is going to receive and
                    post the funds to the recipients account. Enum provided by
                    Visa Direct to Wallet Operator.

                    P2A: N/A

                    P2W: Mandatory

                    P2C: N/A
                  enum:
                    - WECHATPAY
                accountIdentifier:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: "This identifies the identifier of the recipients account with the wallet operator to which the funds have to be deposited. (e.g., wallet address - phone/email/custom identifier that identifies the account with the digital wallet operator)\n-\tIf EMAIL then verify whether the Email is in valid Email format\n-\tIf PHONENUMBER then verify if the value is numeric , + at the beginning of the value will be considered as valid. e.g. +65123456789 (note, refer ISO spec E.164)\n-\tIf USERNAME then check whether it is a valid string. \n\nNote - An E.164 number has three components.\n1. The prefix +.\n2. A 1-3 digit country code.\n3. A subscriber number.\nP2A: N/A\nP2W: Mandatory\nP2C: N/A"
                accountIdentifierType:
                  type: string
                  description: >-
                    This identifies type of account Identifier. Supported values
                    are PHONENUMBER, EMAIL, USERNAME.

                    P2A: N/A

                    P2W: Mandatory

                    P2C: N/A
                  enum:
                    - PHONENUMBER
                    - EMAIL
                    - USERNAME
              description: If payout is push to wallet, this object is required(P2W only)
            address:
              type: object
              properties:
                city:
                  maxLength: 35
                  minLength: 1
                  type: string
                  description: >-
                    RRecipient address city


                    ISO20022 field name: Creditor Address Town Name

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2C: Conditional (Refer to OCT GIG on country-specific
                    required fields)

                    P2C: The maximum length is 25
                state:
                  maxLength: 25
                  minLength: 2
                  type: string
                  description: >-
                    Recipient address state


                    ISO20022 field name: Creditor Address Country Sub-division

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2C: Conditional (Refer to OCT GIG on country-specific
                    required fields)

                    P2C: The maximum length is 3
                country:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >-
                    Recipient address country

                    Format: 3-digit ISO-3166 (numeric) country code


                    ISO20022 field name: Creditor Address Country

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2C: Conditional (Refer to OCT GIG on country-specific
                    required fields)
                postalCode:
                  maxLength: 16
                  minLength: 1
                  type: string
                  description: >-
                    Recipient address postal code


                    ISO20022 field name: Creditor Address Postal Code

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2C: Conditional (Refer to OCT GIG on country-specific
                    required fields)

                    P2A: The maximum length for P2A is 10.

                    P2W: The maximum length for P2W is 10.
                streetName:
                  maxLength: 99
                  minLength: 1
                  type: string
                  description: >-
                    Recipient address street name<br><br>ISO20022 field name:
                    N/A<br>P2A: N/A<br>P2W: N/A<br>P2C: Optional
                addressLine1:
                  maxLength: 99
                  minLength: 1
                  type: string
                  description: >-
                    Recipient address line 1


                    ISO20022 field name: Creditor Address Line 1

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2C: Conditional (Refer to OCT GIG on country-specific
                    required fields)

                    P2A: The maximum length for P2A is 50

                    P2W: The maximum length for P2W is 50
                addressLine2:
                  maxLength: 99
                  minLength: 1
                  type: string
                  description: >-
                    Recipient address line 2


                    ISO20022 field name: Creditor Address Line 2

                    P2A: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2W: Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)

                    P2C: Conditional (Refer to OCT GIG on country-specific
                    required fields)

                    P2A: The maximum length for P2A is 50

                    P2W: The maximum length for P2W is 50
                buildingNumber:
                  maxLength: 16
                  minLength: 1
                  type: string
                  description: |-
                    Recipient address building number

                    ISO20022 field name: N/A
                    P2A: N/A
                    P2W: N/A
                    P2C: Optional
                minorSubDivisionCode:
                  maxLength: 16
                  minLength: 1
                  type: string
                  description: |-
                    Recipient address sub-division minor code

                    ISO20022 field name: N/A
                    P2A: N/A
                    P2W: N/A
                    P2C: Optional
            lastName:
              maxLength: 35
              minLength: 2
              type: string
              description: >-
                Recipient last name<br><br>ISO20022 field name: Creditor Last
                Name<br>P2A: Conditional (Mandatory if recipient full name is
                not provided)<br>P2W: Conditional (Mandatory if recipient full
                name is not provided)<br>P2C: Conditional (Mandatory for
                transaction routed over non Visa networks through Push Payment
                Gateway Service).
            firstName:
              maxLength: 35
              minLength: 2
              type: string
              description: >-
                Recipient first name<br><br>ISO20022 field name: Ultimate Debtor
                First Name<br>P2A: Conditional (Mandatory if sender full name
                field is not provided)<br>P2W: Conditional (Mandatory if sender
                full name field is not provided)<br>P2C: Conditional  (Mandatory
                for transaction routed over non Visa networks through Push
                Payment Gateway Service).
            middleName:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Recipient middle name<br><br>ISO20022 field name: N/A<br>P2A:
                N/A<br>P2W: N/A<br>P2C: Optional
            cityOfBirth:
              maxLength: 35
              minLength: 1
              type: string
              description: |-
                Recipient city of birth

                ISO20022 field name: Creditor City of Birth
                P2A: Optional
                P2W: Optional
                P2C: N/A
            dateOfBirth:
              type: string
              description: >-
                Recipient date of birth


                ISO20022 field name: Creditor Birth Date

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2W: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2C: N/A
              format: date
            contactEmail:
              maxLength: 50
              minLength: 1
              type: string
              description: |-
                Recipient email address

                ISO20022 field name: Creditor Contact Email Address
                P2A: Optional
                P2W: Optional
                P2C: N/A
            payoutMethod:
              maxLength: 1
              minLength: 1
              type: string
              description: >-
                Originating Entity must indicate the payout method i.e.Push to
                Account(P2A) or Push to Card(P2C) or Push to Wallet(P2W)


                Valid values:

                “B” – Push to Bank account

                “C” – Push to Card 

                “W” – Push to Wallet


                ISO20022 field name: n/a

                P2A: Mandatory

                P2W: Mandatory

                P2C: Mandatory
              x-variant: '| enumeration'
            contactNumber:
              maxLength: 30
              minLength: 1
              type: string
              description: >-
                Recipient contact number, required in certain markets

                Format: pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}


                ISO20022 field name: Creditor Contact Phone Number

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2W: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2C: N/A
            additionalData:
              type: array
              description: >
                Additional fields that are needed in order to complete the
                additional screening. The additional fields can be included as
                name value pairs (Field name, Field value)

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2W: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2C: N/A
              items:
                type: object
                properties:
                  name:
                    maxLength: 35
                    minLength: 1
                    type: string
                    description: >
                      Originating Entity to send additional recipient
                      information needed in order to process the payment. The
                      additional fields can be included as name value pairs
                      (Field name, Field value). This field represents the name
                      component of the name-value pair.


                      ISO20022 field name: Creditor Remittance Information
                      Document Name
                  value:
                    maxLength: 100
                    minLength: 1
                    type: string
                    description: >
                      Originating Entity to send additional recipient
                      information needed in order to process the payment. The
                      additional fields can be included as name value pairs
                      (Field name, Field value). This field represents the
                      value  component of the name-value pair.


                      ISO20022 field name: Creditor Remittance Information
                      Document Description
            countryOfBirth:
              maxLength: 3
              minLength: 3
              pattern: ^\d\d\d$
              type: string
              description: >-
                Recipient country of birth


                ISO20022 field name: Creditor Country of Birth

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2W: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2C: N/A
            identificationList:
              type: array
              description: >-
                Identification list of recipient 

                ISO20022 field name: N/A

                P2A: Multiple instance of IDs can be supported in the same
                request

                P2W: Multiple instance of IDs can be supported in the same
                request

                P2C: We have a current limitation that sender ID and recipient
                ID information are mutually exclusive. If both sender ID and
                recipient ID are sent in the same request, only sender ID
                related information will be sent to the issuer. 

                Additionally, only 1 instance of ID per sender or recipient is
                currently supported. If more than one instance is provided, only
                the first instance will be forwarded to the issuer.
              items:
                type: object
                properties:
                  idType:
                    maxLength: 4
                    minLength: 1
                    type: string
                    description: >-
                      Recipient identification type (issued by a government or
                      similar authority) needs to be provided by Originating
                      Entity along with the payment in certain markets. 



                      ISO20022 field name: Creditor Identification Code

                      P2A: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      Valid values : 
                       P- Passport 
                       D-Driving License
                       N-National Id
                       T-Tax Id
                       L-Legal Entity Registration Number
                       F-Foreign Id 

                      P2W: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      Valid values : 
                       P- Passport 
                       D-Driving License
                       N-National Id
                       T-Tax Id
                       L-Legal Entity Registration Number
                       F-Foreign Id 

                      P2C: This field will contain the type of recipient
                      identification. The valid values are: 
                       CUID - Customer identification - unspecified 
                       NTID - National identification
                       PASN - Passport number
                       DRLN - Driver license
                       TXIN - Tax identification 
                       CPNY - Company registration number
                       PRXY - Proxy identification 
                       SSNB - Social security number 
                       ARNB - Alien registration number 
                       LAWE - Law enforcement identification 
                       MILI - Military identification 
                       TRVL - Travel identification - non-passport 
                       EMAL - Email
                       PHON - Phone number 
                      For a given instance of identificationList[], a minimum of
                      idType and idNumber fields should be provided, else the ID
                      information will not be forwarded to the issuer.
                    x-variant: '| enumeration'
                  idNumber:
                    maxLength: 35
                    minLength: 1
                    type: string
                    description: >-
                      Recipient identification number (issued by a government or
                      similar authority) needs to be provided by Originating
                      Entity along with the payment in certain markets. 



                      ISO20022 field name: Creditor Identification

                      P2A: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2W: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2C: This field will contain an acquirer-populated value
                      associated with the Identification Type in field idType. 

                      For a given instance of identificationList[] , a minimum
                      of idType and idNumber fields should be provided, else the
                      ID information will not be forwarded to the issuer.
                  idOwnerType:
                    maxLength: 1
                    minLength: 1
                    type: string
                    description: >-
                      This field denotes whether the Tax ID is a business or
                      individual's Tax ID when idType contains the value of TXIN
                      (Tax identification). 



                      ISO20022 field name: n/a

                      P2A: N/A

                      P2W: N/A

                      P2C: Optional 

                      The valid values are : 

                      C (Company/Business) 

                      I (Individual)
                  idIssueCountry:
                    maxLength: 3
                    minLength: 3
                    type: string
                    description: >-
                      Recipient identification issuing country needs to be
                      provided by Originating Entity along with the payment in
                      certain markets. 

                      Format: 3-digit ISO-3166 (numeric) country code


                      ISO20022 field name: Creditor Identification Issuer
                      Country

                      P2A: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2W: Conditional (Refer to Payouts Endpoint Guide on
                      country-specific required fields and lengths)

                      P2C: This tag will contain the 3-digit ISO country code of
                      the ID issuing country.
        originatorDetail:
          required:
            - address
            - bankId
            - merchantCategoryCode
            - originatorId
            - originatorName
          type: object
          properties:
            bankId:
              type: integer
              description: >-
                Originating bank ID is the Bank Identification Number (BIN)
                assigned to each Visa Member upon enrollment. If the Originator
                is not a Financial Institution (FI) and will be processing using
                a sponsor FI (i.e. Acquirer ) , this is the BIN of the
                sponsoring FI (Acquirer). It uniquely identifies the Bank/FI
                that is sponsoring the Originating Entity in Visa’s core system.
                Note: This is also referred to as the “Acquiring BIN” by Visa


                ISO20022 field name: Debtor Agent FI Identification


                P2A: Mandatory 

                P2W: Mandatory 

                P2C: Mandatory
            address:
              required:
                - country
              type: object
              properties:
                city:
                  maxLength: 13
                  minLength: 1
                  type: string
                  description: |-
                    Originating Entity City
                    ISO20022 field name: N/A
                    P2A: N/A
                    P2W: N/A
                    P2C: Optional
                state:
                  maxLength: 2
                  minLength: 2
                  type: string
                  description: >
                    Originating Entity State Code

                    ISO20022 field name: Debtor State

                    P2A: Conditional (Required if Originating Entity country is
                    US or Canada)

                    P2W: Conditional (Required if Originating Entity country is
                    US or Canada)

                    P2C: Conditional (Required if Originating Entity country is
                    US or Canada)
                county:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: |-
                    Originating Entity Country Sub Division Minor code
                    ISO20022 field name: N/A
                    P2A: N/A
                    P2W: N/A
                    P2C: Optional
                country:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: |-
                    Originating Entity country code. 
                    Format: 3-digit ISO-3166 (numeric) country code

                    ISO20022 field name: Debtor Country
                    P2A: Mandatory 
                    P2W: Mandatory 
                    P2C: Mandatory
                postalCode:
                  maxLength: 14
                  minLength: 1
                  type: string
                  description: >-
                    Originating Entity Postal Code 

                    ISO20022 field name: Debtor Postal Code

                    mandatory only for Originators in US and Canada.

                    P2A: Conditional (Required if Originating Entity country is
                    US or Canada)

                    P2W: Conditional (Required if Originating Entity country is
                    US or Canada)

                    P2C: Conditional (Required if Originating Entity country is
                    US or Canada)

                    US length is 5 or 9 characters.  

                    Canada - maximum up to 12 characters

                    All other markets- maximum up to 14 characters
                addressLine:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: |-
                    Originating Entity address line
                    ISO20022 field name: N/A
                    P2A: Optional
                    P2W: Optional
                    P2C: N/A
            bankBIC:
              maxLength: 11
              minLength: 8
              type: string
              description: |-
                Business Identifier Code (BIC) of the Sponsor FI (Acquirer)
                P2A: Mandatory 
                P2W: Mandatory 
                P2C: N/A
            ppgsInfo:
              type: object
              properties:
                sharingGroupCode:
                  maxLength: 30
                  minLength: 1
                  type: string
                  description: >-
                    This field is optionally used by Push Payments Gateway
                    participants (merchants and acquirers) to specify the
                    network access priority.


                    Refer to Sharing Group Code (add link to VDP :
                    https://developer.visa.com/request_response_codes#network_id_and_sharing_group_code
                    )


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                merchantPseudoAbaNumber:
                  maxLength: 9
                  minLength: 9
                  type: string
                  description: >-
                    This is a number that uniquely identifies the originating
                    entity when they sign up to send Push Payment Gateway
                    transactions. On enrollment, an originating entity will get
                    a single pseudo-value that is assigned by Visa. The other
                    networks will assign their own unique values for the
                    originating entity.


                    Note:

                    Supported only in US for domestic transactions involving
                    Push Payments Gateway Service.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (Mandatory for Push payment gateway
                    transactions)
            terminalId:
              maxLength: 8
              minLength: 1
              type: string
              description: >-
                The identifier for the terminal at a card acceptor location. If
                sending transactions from a card not present environment, use
                the same value for all transactions. An identification code of
                fewer than 8 positions must be left-justified and the remainder
                of the field space-filled.

                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Mandatory
            originatorId:
              maxLength: 15
              minLength: 1
              type: string
              description: >-
                An alphanumeric field that uniquely identifies the Originating
                Entity for Push to Account transactions. The Originating Entity
                should populate Card Acceptor Terminal ID (CAID)  for Push to
                Card transactions. 

                ISO20022 field name: Debtor - Originating Entity Identification

                P2A: Mandatory 

                P2W: Mandatory 

                P2C: Mandatory
            originatorBIC:
              maxLength: 11
              minLength: 1
              type: string
              description: >-
                Business Identifier Code (BIC) of the Originating entity

                ISO20022 field name: Debtor BIC

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths).

                P2W: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths).

                P2C: N/A
            originatorName:
              maxLength: 70
              minLength: 1
              type: string
              description: >-
                The legal name of the merchant or originating entity sending the
                payment instruction to Visa.

                ISO20022 field name: Debtor Name

                P2C: The maximum length is 25
            bankCountryCode:
              maxLength: 3
              minLength: 3
              type: string
              description: |-
                Acquirer Country Code

                Format: 3-digit ISO-3166 (numeric) country code

                ISO20022 field name: N/A
                P2A: N/A
                P2W: N/A
                P2C: Mandatory
            paymentFacilitator:
              type: object
              properties:
                id:
                  maxLength: 11
                  minLength: 1
                  type: string
                  description: >-
                    Business Identifier Code (BIC) of the Payment Facilitator
                    i.e. intermediary entity that touches funds prior to
                    settlement with the Visa Member bank (i.e. Acquirer)


                    ISO20022 field name: Initiating Party Identification

                    P2A: Optional. The minimum length is 8

                    P2W: Optional. The minimum length is 8

                    P2C: Marketplace ID or Payment Facilitator's ID. This field
                    is conditionally required when a payment facilitator is
                    involved.
                name:
                  maxLength: 70
                  minLength: 1
                  type: string
                  description: >-
                    The legal name of any intermediary entity that touches funds
                    prior to settlement with the Visa Member bank (i.e.
                    Acquirer)


                    ISO20022 field name: Initiating Party Name

                    P2A: Conditional (Mandatory if payment facilitator is
                    touching the funds)

                    P2W: Conditional (Mandatory if payment facilitator is
                    touching the funds)

                    P2C: The maximum length is 25
                country:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: >-
                    The country of any intermediary entity that touches funds
                    prior to settlement with the Visa Member bank (i.e.
                    Acquirer)


                    ISO20022 field name: Initiating Party Country

                    P2A: Conditional (Mandatory if payment facilitator is
                    touching the funds)

                    P2W: Conditional (Mandatory if payment facilitator is
                    touching the funds)

                    P2C: N/A
                subMerchantId:
                  maxLength: 15
                  minLength: 1
                  type: string
                  description: >-
                    Sub-Merchant ID containing the sponsored merchant ID. This
                    field is conditionally required when a payment facilitator
                    is involved.

                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
            pointOfServiceData:
              type: object
              properties:
                panEntryMode:
                  type: integer
                  description: >-
                    A 2-digit code that identifies the method used to enter the
                    cardholder account number and card expiration date. This
                    code specifies whether the entire magnetic stripe is
                    included in an authorization or financial request.

                    List of possible PAN Entry Mode values (add link to VDP :
                    https://developer.visa.com/request_response_codes#pan_entry_mode_codes)


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (For a CardPresent scenario, this field is
                    mandatory)
                motoECIIndicator:
                  type: integer
                  description: >-
                    Identifies the level of security used in an electronic
                    commerce transaction over an open network (for example, the
                    Internet) or the type of mail or telephone order. 

                    List of possible Moto ECI Indicator (add link to VDP :
                    https://developer.visa.com/request_response_codes -
                    pos_cond_code_codes values)


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (For a CardPresent scenario, this field is
                    mandatory)
                posConditionCode:
                  type: integer
                  description: >-
                    A 2 digit code identifying transaction conditions at the
                    point of sale or point of service. For messages that follow
                    an original request, this code identifies the type of
                    processing being done.

                    List of possible POS Condition Code values  (add link to VDP
                    :
                    https://developer.visa.com/request_response_codes#pos_cond_code_codes)


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (For a CardPresent scenario, this field is
                    mandatory)
                specialConditionIndicatorMerchant:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    A value of '7' in this field indicates purchase of
                    cryptocurrency. 

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
            merchantCategoryCode:
              maxLength: 4
              minLength: 4
              type: string
              description: >-
                Code describing the merchant's type of business product or
                service known as the merchant category code (MCC). Codes are
                listed in the Visa Core Rules and Visa Product and Service
                Rules.

                ISO20022 field name: Debtor Other Identification

                P2A: Mandatory 

                P2W: Mandatory 

                P2C: Mandatory
            merchantVerificationValue:
              required:
                - acquirerAssigned
                - visaAssigned
              type: object
              properties:
                visaAssigned:
                  maxLength: 6
                  minLength: 6
                  type: string
                  description: |-
                    Visa assigned MVV value

                    ISO20022 field name: N/A
                    P2A: N/A
                    P2W: N/A
                    P2C: Optional
                acquirerAssigned:
                  maxLength: 4
                  minLength: 4
                  type: string
                  description: |-
                    Visa assists the acquirer in assigning the last four

                    ISO20022 field name: N/A
                    P2A: N/A
                    P2W: N/A
                    P2C: Optional
              description: >-
                MerchantVerificationValue (MVV) that identifies merchants
                participating in a variety of programs.
            originatorLegalBusinessName:
              maxLength: 25
              minLength: 1
              type: string
              description: >-
                Acceptor’s legal business name associated with the card acceptor
                identification code for money transfer OCTs. This field is
                conditionally required for all Money Transfer OCTs.

                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
        transactionDetail:
          required:
            - businessApplicationId
            - localTransactionDateTime
            - retrievalReferenceNumber
            - systemTraceAuditNumber
            - transactionAmount
            - transactionCurrencyCode
          type: object
          properties:
            surcharge:
              maxLength: 12
              minLength: 1
              type: string
              description: >-
                When present, this field contains the sender's surcharge as
                assessed by the Originating Entity. Values in this field must be
                included in the transactionAmount and should be in the same
                currency and format as defined in the transactionAmount field.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to SMS POS Visa & Visa Electron

                Technical Specifications - Appendix E Country and Currency codes
                for P2C.


                Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.
            endToEndId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity's customer to
                uniquely identify the transaction


                ISO20022 field name: Payment Identification - EndtoEnd
                Identification

                P2A: Optional

                P2W: Optional

                P2C: N/A
            settlement:
              type: object
              properties:
                serviceIndicator:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This flag enables the originator to request for a particular
                    settlement service to be used for settling the transaction.
                    <br><br> Valid values are: <br>0 - International
                    Settlement<br>9 - VIP to decide<br>8 - National
                    Settlement<br><br><b>Note:</b> The default value is 9. This
                    field is only relevant for specific countries where the
                    acquirer has to select 8 in order to settle in the national
                    net settlement service. 
            payoutSpeed:
              type: string
              description: >
                Originating Entity to indicate the desired payout speed for the
                payment. Currently supported value is "STANDARD". This field
                will be enhanced in future to include additional speed options


                ISO20022 field name: Instruction Priority

                P2C: N/A
              enum:
                - STANDARD
                - PREMIUM
            secondaryId:
              maxLength: 28
              type: string
              description: >-
                secondaryId is used for C2B use case in the CEMEA region where
                payee initiates the OCT to the payer. The merchant or acquirer
                may use this field to obtain an Agreement Id in order to process
                the request.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
            sourceAmount:
              type: integer
              description: >-
                Source Amount is required in certain markets to identify the
                transaction amount entered in the sender's currency code prior
                to FX conversion by the originating entity.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to SMS POS Visa & Visa Electron

                Technical Specifications - Appendix E Country and Currency codes
                for P2C.


                Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.
            additionalData:
              type: array
              description: >
                Additional fields that are needed in order to complete the
                additional screening. The additional fields can be included as
                name value pairs (Field name, Field value)

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2W: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2C: N/A
              items:
                type: object
                properties:
                  name:
                    maxLength: 35
                    minLength: 1
                    type: string
                    description: >
                      Originating Entity to send additional transaction
                      information needed in order to process the payment. The
                      additional fields can be included as name value pairs
                      (Field name, Field value). This field represents the name
                      component of the name-value pair.


                      ISO20022 field name: Remittance Information Transaction
                      Additional Details - Name
                  value:
                    maxLength: 100
                    minLength: 1
                    type: string
                    description: >
                      Originating Entity to send additional transaction
                      information needed in order to process the payment. The
                      additional fields can be included as name value pairs
                      (Field name, Field value). This field represents the
                      value  component of the name-value pair.


                      ISO20022 field name: Remittance Information Transaction
                      Additional Details - Value
            nationalNetData:
              type: object
              properties:
                irfType:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This field contains one of the following values: <br>0 -
                    Unknown/default<br>1 - Fixed<br>2 - Ad valorem (%)<br>3 -
                    Composite (fixed amount and ad valorem)


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: This field is optional for Mexico NNSS transactions and
                    not applicable to Colombia and Argentina NNSS transactions
                accountType:
                  maxLength: 2
                  minLength: 2
                  type: string
                  description: >-
                    This field contains one of the following values: <br>CO -
                    Commercial products<br>CR - Credit<br>DB - Debit<br>PL -
                    Private label<br>PP - Prepaid


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: This field is optional for Mexico NNSS transactions and
                    not applicable to Colombia and Argentina NNSS transactions
                netMiscAmount:
                  type: integer
                  description: >-
                    Contains a domestic/national dispute reason code.



                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (if countryCode is Colombia)


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to SMS POS Visa & Visa
                    Electron

                    Technical Specifications - Appendix E Country and Currency
                    codes for P2C.


                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should populate “10099”. If the
                    amount is $100.00 then this field should populate “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should populate “10000”.
                irfCategoryCode:
                  maxLength: 2
                  minLength: 1
                  type: string
                  description: >-
                    This field optionally contains any value from 00 to 99.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: This field is optional for Mexico NNSS transactions and
                    not applicable to Colombia and Argentina NNSS transactions
                chargeBackReason:
                  maxLength: 2
                  minLength: 2
                  type: string
                  description: |-
                    Contains a domestic/national dispute reason code.


                    ISO20022 field name: N/A
                    P2A: N/A
                    P2W: N/A
                    P2C: Conditional (if countryCode is Colombia)
                merchantFiscalId:
                  maxLength: 13
                  type: string
                  description: >-
                    This field contains RFC for the merchant. This is an
                    alphanumeric field. The RFC format can be AAAANNNNNNAAA,
                    where A is alphanumeric value and N is a numeric value.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: This field is optional for Mexico NNSS transactions and
                    not applicable to Colombia and Argentina NNSS transactions
                reimbursementFee:
                  type: integer
                  description: >-
                    This field contains the Client-Calculated Interchange
                    Reimbursement Fee in the same currency as the transaction.
                    It must not contain zeros

                     P2A: N/A
                    P2W: N/A

                    P2C: This field is mandatory for Mexico NNSS transactions,
                    that is, if the parent object
                    transactionDetail.nationalNetData is present in the request,
                    and originatorDetail.bankCountryCode contains the 3-digit
                    ISO code for Mexico.

                     Note: reimbursement fee should be numeric. No decimal point appears in this field, the decimal place is implicit based on the currency. Refer to SMS POS Visa & Visa Electron Technical Specifications - Appendix E Country and Currency codes for P2C.

                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should contain “10099”. If the
                    amount is $100.00 then this field should contain “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should contain “10000”.
                addValueTaxAmount:
                  type: integer
                  description: >-
                    This is the national government tax for added value of good
                    or service.

                    Format: Minimum Value: 0 Maximum value: 999999999.999 

                    Allowed fractional digits: 3. Note: If a currency has three
                    decimal places, the last digit of this field must be zero.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (if countryCode is Colombia)


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to SMS POS Visa & Visa
                    Electron

                    Technical Specifications - Appendix E Country and Currency
                    codes for P2C.


                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should populate “10099”. If the
                    amount is $100.00 then this field should populate “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should populate “10000”.
                addValueTaxReturn:
                  type: integer
                  description: >-
                    This is base value of the IVA (Sales tax). Optional. This
                    field indicates base value of the IVA ( Sales tax which is
                    part of the benefit of the tax legislations for the 2% sale
                    tax return to the cardholder.

                    Format: Minimum Value: 0 Maximum value: 999999999.999 

                    Allowed fractional digits: 3. Note: If a currency has three
                    decimal places, the last digit of this field must be zero.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (if countryCode is Colombia)


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to SMS POS Visa & Visa
                    Electron

                    Technical Specifications - Appendix E Country and Currency
                    codes for P2C.


                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should populate “10099”. If the
                    amount is $100.00 then this field should populate “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should populate “10000”.
                netMiscAmountType:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Identifies the type of national net miscellaneous amount,
                    valid values include 

                    A - Airport Charge 

                    C - Cashback

                    T - Tip.
                     Must contain one of the above valid values if nationalNetMiscAmount > 0. Must be skipped if nationalNetMiscAmount = 0 


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (if countryCode is Colombia)
                  enum:
                    - A
                    - C
                    - T
                reimbursementFeeTax:
                  type: integer
                  description: >-
                    This field contains the VAT calculated for the IRF
                    applicable to the transaction. It must not contain zeros.


                    P2A: N/A

                    P2W: N/A

                    P2C: This field is mandatory for Mexico NNSS transactions,
                    that is, if the parent object
                    transactionDetail.nationalNetData is present in the request,
                    and originatorDetail.bankCountryCode contains the 3-digit
                    ISO code for Mexico.

                     Note: reimbursement fee should be numeric. No decimal point appears in this field, the decimal place is implicit based on the currency. Refer to SMS POS Visa & Visa Electron Technical Specifications - Appendix E Country and Currency codes for P2C.

                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should contain “10099”. If the
                    amount is $100.00 then this field should contain “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should contain “10000”.
                taxAmountConsumption:
                  type: integer
                  description: >-
                    Indicates the National consumption tax amount.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (if countryCode is Colombia)


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to SMS POS Visa & Visa
                    Electron

                    Technical Specifications - Appendix E Country and Currency
                    codes for P2C.


                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should populate “10099”. If the
                    amount is $100.00 then this field should populate “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should populate “10000”.
                emvTransactionIndicator:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: |-
                    Contains one of the below valid values: 
                    0 - Does not apply to EMV 
                    1 - EMV transaction  
                    2 - Fallback transaction.


                    ISO20022 field name: N/A
                    P2A: N/A
                    P2W: N/A
                    P2C: Conditional (if countryCode is Colombia)
                  enum:
                    - '0'
                    - '1'
                    - '2'
                costTransactionIndicator:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: |-
                    Contains one of the below valid values: 
                    0 - Not a cost inquiry amount 
                    1 - Cost inquiry transaction.


                    ISO20022 field name: N/A
                    P2A: N/A
                    P2W: N/A
                    P2C: Conditional (if countryCode is Colombia)
                  enum:
                    - '0'
                    - '1'
                netReimbursementFeeBaseAmount:
                  type: integer
                  description: >-
                    The client supplied interchange reimbursement amount
                    expressed in the transaction currency. This must be less
                    than the transaction amount.

                    Format: Minimum Value: 0 Maximum value: 999999999.999 

                    Allowed fractional digits: 3. Note: If a currency has three
                    decimal places, the last digit of this field must be zero.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (Mandatory if countryCode is Colombia)


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to SMS POS Visa & Visa
                    Electron

                    Technical Specifications - Appendix E Country and Currency
                    codes for P2C.


                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should populate “10099”. If the
                    amount is $100.00 then this field should populate “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should populate “10000”.
            purposeOfPayment:
              maxLength: 12
              minLength: 1
              type: string
              description: >-
                Purpose of payment is required in certain markets to clearly
                identify the purpose of the payment based on the standard values
                defined for respective market


                ISO20022 field name: Purpose of Payment

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2W: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2C: Optional
            clientReferenceId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity to uniquely
                identify the transaction


                ISO20022 field name: Payment Identification - Transaction
                Identification

                P2A: Optional

                P2W: Optional

                P2C: N/A
            messageReasonCode:
              maxLength: 4
              minLength: 4
              type: string
              description: >-
                Contains codes that combined with some other fields such as the
                BAI (Business Application Id) identify some unique use cases.
                For Sales Tax rebates this field should be populated with the
                value 5120 (Value-added tax/Sales Tax) along with the
                businessApplicationId field set to the value 'FD' which
                indicates this push funds transfer is being conducted in order
                to facilitate a sales tax refund.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
            transactionAmount:
              type: integer
              description: >-
                The transaction amount to be paid out to the recipient bank
                account or card.  Expressed in the currency specified in
                transaction currency code. 


                ISO20022 field name:  Transaction Information And Status -
                Instructed Amount

                P2A: Mandatory 

                P2A: Mandatory 

                P2C: Mandatory


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to the Payouts Endpoint Guide for
                P2A on country-specific currency minor units. Refer to SMS POS
                Visa & Visa Electron

                Technical Specifications - Appendix E Country and Currency codes
                for P2C.


                Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.
            purchaseIdentifier:
              required:
                - referenceNumber
                - type
              type: object
              properties:
                type:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This field should be populated with one of the following
                    values: <br>1 - if referenceNumber holds the Request to Pay
                    ID<br>6 - If businessApplicationId holds <b>RP<b> or
                    <b>BP<b>. It will be used for C2B use case in the CEMEA
                    region where payee initiates the OCT to the payer.<br>
                referenceNumber:
                  maxLength: 25
                  minLength: 25
                  type: string
                  description: >-
                    Populate this field with the reference identifier for which
                    the payment is being sent. For example, a request to pay ID
                    or other unique ID related to this payment.<br>This field
                    will carry R2P ID/RTX generated request ID for BP and RP
                    BAI. It will be used for C2B use case in the CEMEA region
                    where payee initiates the OCT to the payer.
              description: >-
                This is the invoice number or some other reference for billing
                purposes.</br>e.g. For Airtime top up, this should contain the
                mobile number (MSISDN) that is being topped up.
            sourceCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                3-character alpha or numeric currency code for currency of the
                sourceAmount field. Refer to ISO Codes for list of currency
                codes.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
            statementNarrative:
              maxLength: 140
              minLength: 1
              type: string
              description: >-
                Originating Entity is advised to provide a narrative that helps
                the recipient clearly identify the sender and reason for the
                payment.

                Text will be displayed on the recipient’s statement when the
                payment gets posted to the recipient’s account (depends on
                recipient bank's process)


                ISO20022 field name: Remittance Information Unstructured

                P2A: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2W: Conditional (Refer to Payouts Endpoint Guide on
                country-specific required fields and lengths)

                P2C: N/A
            feeProgramIndicator:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                Contains the fee program indicator, which is used to assess the
                Interchange Fee Amount in certain scenarios


                ISO20022 field name: n/a

                P2A: N/A

                P2W: N/A

                P2C: Optional
            businessApplicationId:
              maxLength: 2
              minLength: 2
              type: string
              description: "Business Application Identifier (BAI) identifies the type of program for which the payment is being sent, i.e. whether it is a funds disbursement, money transfer etc. It should be a valid value allowed by Visa and approved for the program during onboarding.<br>For R2P feature, businessApplicationId will carry a new BAI value \"RP\" or existing value \"BP\" for C2B domestic OCTs.\n\nValid BAI for Push to Accounts:\n-\tMoney transfer: AA, PP; \n-\tNon-money transfer: BB, FD, GD, GP, LO, MD, OG, PD;\n \nValid BAI for Push to Cards:\n-\tMoney transfer: AA, PP, BI, FT, WT; \n-\tNon-money transfer: BB, BP, CP, FD, GD, GP, LO, MD, OG, PD, TU, RP;\n\nISO20022 field name: Payment Category Purpose\nP2A: Mandatory \nP2W: Mandatory \nP2C: Mandatory\n"
            serviceProcessingType:
              required:
                - requestType
              type: object
              properties:
                requestType:
                  maxLength: 2
                  minLength: 2
                  type: string
                  description: >-
                    Reserved for future use.</br></br>P2A: N/A P2W: N/A P2C:
                    Optional
              description: >-
                This field will contain values that identify the type of service
                the transaction should be processed.
            transactionIdentifier:
              maxLength: 15
              minLength: 15
              type: string
              description: >-
                Visa-generated Transaction Identifier that is unique for each
                original authorization and financial request. The identifier
                links original messages to subsequent messages, such as those
                for exception item processing and clearing records. If an AFT
                has been previously sent, corresponding to the Push to Card
                transaction, this field must include the VisaNet transaction
                identifier returned in the AFT response.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
            systemTraceAuditNumber:
              maxLength: 6
              minLength: 6
              type: string
              description: >
                This field contains a number assigned by the Originating Entity
                that uniquely identifies a transaction and all message types.
                The trace number is one of the key data elements used to match a
                response to its request or to match a message to others for a
                given transaction set


                ISO20022 field name: N/A
            transactionCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated to the transaction amount 

                Format: 3-digit ISO-4217 (numeric) currency code


                ISO20022 field name:  Transaction Information And Status -
                Instructed Amount Currency Code

                P2A: Mandatory 

                P2W: Mandatory 

                P2C: Mandatory
            localTransactionDateTime:
              pattern: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
              type: string
              description: >
                The date and time when the transaction takes place, expressed in
                the local time of the Originating Entity request

                Format: YYYY-MM-DDThh:mm:ss


                ISO20022 field name: Message Creation Date Time
            retrievalReferenceNumber:
              maxLength: 12
              minLength: 12
              pattern: \^d{12}$
              type: string
              description: >-
                This is a unique identifier generated by the Originating Entity
                for a transaction and its one of the key fields for matching a
                transaction with the subsequent messages with in the transaction
                set example Notification, Returns, Cancel, Exception management
                via VD Portal for P2A and Reversals, Chargeback, Response,
                Advice for P2C.


                The format is recommended to be ydddhhnnnnnn

                yddd - The first four digits must be a valid Julian date format,
                where the first digit = 0-9 (last digit of current year) and the
                next three digits = 001-366 (number of the day in the year). 

                hh - can be the two digit hour in a 24 hour clock (00-23) during
                which the transaction is performed. 

                nnnnnn - can be the systemsTraceAuditNumber or any 6 digit
                number


                ISO20022 field name: Transaction Information And Status -
                Original Instruction Identification

                P2A: Mandatory 

                P2W: Mandatory 

                P2C: Mandatory
    PayoutCancelStatus:
      type: string
      description: |
        Status of the cancel request

        Valid Value are: PENDING_CANCELLATION, CANCELLED
      example: CANCELLED
      enum:
        - PENDING_CANCELLATION
        - CANCELLED
    AccountNumber:
      maxLength: 34
      minLength: 1
      type: string
      description: >-
        When present, this field contains recipient’s account number at the
        bank.
      example: '3012345678901432'
    AccountQuerySuccessResponse-1:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          required:
            - clientReferenceId
            - destinationAmount
            - destinationCurrencyCode
            - initiatingPartyId
            - payoutId
            - settlementAmount
            - settlementCurrencyCode
            - status
            - transactionAmount
            - transactionCurrencyCode
            - transactionDateTime
          type: object
          properties:
            status:
              allOf:
                - $ref: '#/components/schemas/TransactionStatus'
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for Payouts and
                Reversals, Chargeback, Response, Advice for to Card. 
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            payoutSpeed:
              description: >
                The payout processing speed send in the request. Currently
                supported value is "STANDARD". This field will be enhanced in
                future to include additional speed options


                Conditional (Mandatory for an approved transaction and send in
                the request) 


                ISO20022 field name: Transaction Information And Status -
                Instruction Priority
              allOf:
                - $ref: '#/components/schemas/PayoutSpeed'
            returnAmount:
              description: >
                The return amount to be paid out to the Originating Entity
                expressed in the currency specified in returnCurrencyCode field.
              allOf:
                - $ref: '#/components/schemas/Amount'
            fundingStatus:
              allOf:
                - $ref: '#/components/schemas/FundingStatus'
            serviceDetail:
              $ref: '#/components/schemas/ServiceDetail'
            returnDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            returnPayoutId:
              description: |
                This is the payoutId generated by the Visa for the return 
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            fxConversionRate:
              description: >
                This field contains the exchange rate applied to the pair of
                settlementCurrencyCode and destinationCurrencyCode
              allOf:
                - $ref: '#/components/schemas/ConversionRate'
            settlementAmount:
              description: >
                This is the amount to be debited from Originating Entity/Visa
                Client's funding account.
              allOf:
                - $ref: '#/components/schemas/Amount'
            clientReferenceId:
              $ref: '#/components/schemas/ClientReferenceId'
            destinationAmount:
              description: >
                The destination amount that will be deposited to the beneficiary
                account, expressed in the Recipient bank currency code provided
                in the original request. If the Originating Entity sends a
                payout in a currency that is not the same as the destination
                currency then Visa will perform FX conversion and calculate the
                amount to be deposited to the beneficiary bank account, and
                provide this information back to the Originating Entity.


                Note: Destination amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units.


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            transactionAmount:
              description: >
                The amount to debit from merchant's funding account or credit to
                beneficiary's bank account.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            returnCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnAmount value. It will be same
                as the client’s settlement currency against the original payout
                transaction.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Payment Return - Instructed Amount Currency
                Code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            returnSourceAmount:
              description: >
                The return amount as sent by Visa’s network partner, expressed
                in the currency specified in returnSourceCurrencyCode field.
              allOf:
                - $ref: '#/components/schemas/Amount'
            expectedPostingDate:
              allOf:
                - $ref: '#/components/schemas/ExpectedPostingDate-1'
            returnReasonDetails:
              $ref: '#/components/schemas/ReturnReasonDetails'
            transactionDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            returnConversionRate:
              description: >-
                This field contains the exchange rate applied to convert
                returnSourceCurrencyCode to returnCurrencyCode.
              allOf:
                - $ref: '#/components/schemas/ConversionRate'
            settlementCurrencyCode:
              description: >
                The settlement currency code


                The 3-character ISO-4217 code in this field reflects the
                currency for the Settlement amount to be debited from
                Originating Entity/Visa Client's funding account.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: GBP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            destinationCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the destination amount 


                Format: 3-character ISO-4217 (Alpha-3) currency code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            transactionCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount 

                Format: 3-character ISO-4217 (Alpha-3) currency code       
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            returnSourceCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnSourceAmount value. It will
                be same as the destination currency on the original payout
                transaction


                Format: 3-character ISO-4217 (Alpha-3) currency code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    AccountPayoutResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/PayoutResponse'
    TransactionalStructuredRemittance:
      maxItems: 999
      type: array
      items:
        required:
          - amount
          - amountCurrencyCode
        type: object
        properties:
          amount:
            description: >
              This is the amount of money remitted for the referred document.
              Note that this field accepts signed amounts. A positive amount
              value indicates amounts flowing in the direction of the payout
              transaction, and due to the recipient . A negative amount value
              indicates the amount due back to the sender, i.e. a reduction in
              the total remitted amount. An amount value without the explicit
              mention of sign would be assumed positive.
            allOf:
              - $ref: '#/components/schemas/SignedAmount'
          taxAmount:
            example: 1.23
            allOf:
              - $ref: '#/components/schemas/Amount'
          taxCurrencyCode:
            allOf:
              - $ref: '#/components/schemas/AlphaCurrencyCode'
          creditorReference:
            required:
              - code
              - number
            type: object
            properties:
              code:
                maxLength: 4
                minLength: 4
                type: string
                description: Refer to PACS.008 SRI Creditor Reference Type codes
                example: SCOR
                enum:
                  - RADM
                  - RPIN
                  - FXDR
                  - DISP
                  - PUOR
                  - SCOR
              number:
                maxLength: 35
                minLength: 1
                type: string
                example: TLD1215
          amountCurrencyCode:
            allOf:
              - $ref: '#/components/schemas/AlphaCurrencyCode'
          referredDocumentInformation:
            maxItems: 1
            type: array
            items:
              required:
                - code
                - number
              type: object
              properties:
                code:
                  maxLength: 4
                  minLength: 4
                  type: string
                  description: >-
                    Refer to PACS.008 SRI Referred Document Type codes. Only
                    'CINV' and 'CREN' are supported values.
                  example: CINV
                  enum:
                    - MSIN
                    - CNFA
                    - DNFA
                    - CINV
                    - CREN
                    - DEBN
                    - HIRI
                    - SBIN
                    - CMCN
                    - SOAC
                    - DISP
                    - BOLD
                    - VCHR
                    - AROI
                    - TSUT
                    - PUOR
                number:
                  maxLength: 35
                  minLength: 1
                  type: string
                  example: '24895544'
                relatedDate:
                  type: string
                  format: date
    SenderAccountNumber:
      maxLength: 34
      minLength: 1
      type: string
      description: >
        Conditional - This field is Mandatory if a senderReferenceNumber is not
        sent. <br />

        Note:

        Client should provide either a sender reference number or a sender
        account number but not both.

        Client should not send any PANs in this field for payout.         
      example: A42434234S324234
    ValidPayoutResponse:
      required:
        - validationResultCode
      type: object
      properties:
        validationResultCode:
          type: string
          description: |
            - VALID - Visa's validation succeeds. 
          enum:
            - VALID
    AccountQuerySuccessResponse-2:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          required:
            - clientReferenceId
            - destinationAmount
            - destinationCurrencyCode
            - initiatingPartyId
            - payoutId
            - settlementAmount
            - settlementCurrencyCode
            - status
            - transactionAmount
            - transactionCurrencyCode
            - transactionDateTime
          type: object
          properties:
            status:
              allOf:
                - $ref: '#/components/schemas/TransactionStatus-1'
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for Payouts and
                Reversals, Chargeback, Response, Advice for to Card. 
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            payoutSpeed:
              description: >
                The payout processing speed send in the request. Currently
                supported value is "STANDARD". This field will be enhanced in
                future to include additional speed options


                Conditional (Mandatory for an approved transaction and send in
                the request) 


                ISO20022 field name: Transaction Information And Status -
                Instruction Priority
              allOf:
                - $ref: '#/components/schemas/PayoutSpeed'
            returnAmount:
              description: >
                The return amount to be paid out to the Originating Entity
                expressed in the currency specified in returnCurrencyCode field.
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            serviceDetail:
              $ref: '#/components/schemas/ServiceDetail'
            returnDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            returnPayoutId:
              description: |
                This is the payoutId generated by the Visa for the return 
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            fxConversionRate:
              description: >
                This field contains the exchange rate applied to the pair of
                settlementCurrencyCode and destinationCurrencyCode
              allOf:
                - $ref: '#/components/schemas/ConversionRate-1'
            settlementAmount:
              description: >
                This is the amount to be debited from Originating Entity/Visa
                Client's funding account.
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            clientReferenceId:
              $ref: '#/components/schemas/ClientReferenceId'
            destinationAmount:
              description: >
                The destination amount that will be deposited to the beneficiary
                account, expressed in the Recipient bank currency code provided
                in the original request. If the Originating Entity sends a
                payout in a currency that is not the same as the destination
                currency then Visa will perform FX conversion and calculate the
                amount to be deposited to the beneficiary bank account, and
                provide this information back to the Originating Entity.


                Note: Destination amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units.


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId-1'
            transactionAmount:
              description: >
                The amount to debit from merchant's funding account or credit to
                beneficiary's bank account.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            returnCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnAmount value. It will be same
                as the client’s settlement currency against the original payout
                transaction.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Payment Return - Instructed Amount Currency
                Code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            returnSourceAmount:
              description: >
                The return amount as sent by Visa’s network partner, expressed
                in the currency specified in returnSourceCurrencyCode field.
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            expectedPostingDate:
              allOf:
                - $ref: '#/components/schemas/ExpectedPostingDate-2'
            returnReasonDetails:
              $ref: '#/components/schemas/ReturnReasonDetails-1'
            transactionDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            returnConversionRate:
              description: >-
                This field contains the exchange rate applied to convert
                returnSourceCurrencyCode to returnCurrencyCode.
              allOf:
                - $ref: '#/components/schemas/ConversionRate-1'
            settlementCurrencyCode:
              description: >
                The settlement currency code


                The 3-character ISO-4217 code in this field reflects the
                currency for the Settlement amount to be debited from
                Originating Entity/Visa Client's funding account.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: GBP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            destinationCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the destination amount 


                Format: 3-character ISO-4217 (Alpha-3) currency code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            transactionCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount 

                Format: 3-character ISO-4217 (Alpha-3) currency code       
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            returnSourceCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnSourceAmount value. It will
                be same as the destination currency on the original payout
                transaction


                Format: 3-character ISO-4217 (Alpha-3) currency code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    NotificationsErrorResponse:
      type: object
      properties:
        reason:
          type: string
          description: The short description of the error.
        status:
          maximum: 999
          minimum: 100
          type: integer
          description: 3 digit HTTP status code
          example: 400
        details:
          type: array
          description: Reserved for future use.
          items:
            type: object
            properties:
              code:
                type: string
                description: A short code indicating the specific error that occurred.
              message:
                type: string
                description: The long description of the specific error that occurred.
              location:
                type: string
                description: >-
                  The place in the incoming message that the particular error
                  occurred.
        message:
          type: string
          description: The long description of the error
    StructuredReferenceValue:
      maxLength: 100
      minLength: 1
      type: string
      description: SRI Value of the field.
    BeneficiaryRelationship:
      maxLength: 30
      minLength: 1
      type: string
      description: Sender's relationship with recipient
    SenderAdditionalData:
      type: array
      description: >-
        Additional fields that are needed in order to complete the additional
        screening. The additional fields can be included as name value pairs
        (Field name, Field value)
      items:
        required:
          - name
          - value
        type: object
        properties:
          name:
            description: >
              Originating Entity to send additional sender information needed in
              order to process the payment. The additional fields can be
              included as name value pairs (Field name, Field value). This field
              represents the name component of the name-value pair.


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)
            allOf:
              - $ref: '#/components/schemas/AdditionalDataName'
          value:
            description: >
              Originating Entity to send additional sender information needed in
              order to process the payment. The additional fields can be
              included as name value pairs (Field name, Field value). This field
              represents the value  component of the name-value pair.


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)
            allOf:
              - $ref: '#/components/schemas/AdditionalDataValue'
    PurposeOfPayment:
      maxLength: 35
      minLength: 1
      type: string
      description: >
        Purpose of payment code is required in certain markets to clearly
        identify the purpose of the payment based on the standard values defined
        for respective market


        Conditional (Refer to Payouts Endpoint Guide on country-specific
        required fields and lengths)


        ISO20022 field name: Purpose of Payment
      example: ISBEXP
    DateOfBirth-1:
      description: This field should contain recipient’s date of birth.
      allOf:
        - $ref: '#/components/schemas/Date'
    ContactNumber-1:
      maxLength: 16
      minLength: 1
      pattern: ^\+[1-9]\d{1,14}$
      type: string
      description: >-
        Contact Number. Symbol + followed by digits, no other symbols, e.g.
        something like +447809713678 (note, refer ISO spec E.164)
    WalletPayoutRequest-1:
      required:
        - transactionDetail
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/WalletTransactionDetail-1'
            - required:
                - clientReferenceId
              type: object
              properties:
                quoteId:
                  allOf:
                    - $ref: '#/components/schemas/QuoteId-1'
                clientReferenceId:
                  allOf:
                    - $ref: '#/components/schemas/ClientReferenceId'
      allOf:
        - $ref: '#/components/schemas/PayoutWalletRequest-1'
    ReturnReasonDetails:
      required:
        - code
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ReturnReasonCode'
        description:
          $ref: '#/components/schemas/ReturnReasonCodeDescription'
    AccountBalanceWithTimestamp:
      required:
        - accountId
        - balance
      type: object
      properties:
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
        balanceTimestamp:
          allOf:
            - $ref: '#/components/schemas/TimestampType'
        lastTransactionTimestamp:
          description: >
            The timestamp of the last money movement on the client's account. 


            This is a valid ISO 8601 timestamp, such as
            YYYY-MM-DDThh:mm:ss.sss±hh:mm.                  
          allOf:
            - $ref: '#/components/schemas/TimestampType'
    200TransactionStatus:
      type: string
      description: >
        - PAYMENT_RECEIVED: Visa has acknowledged the payout instruction has
        been received
      enum:
        - PAYMENT_RECEIVED
    PayoutResponse:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          required:
            - clientReferenceId
            - destinationAmount
            - destinationCurrencyCode
            - initiatingPartyId
            - payoutId
            - settlementAmount
            - settlementCurrencyCode
            - status
            - transactionAmount
            - transactionCurrencyCode
            - transactionDateTime
          type: object
          properties:
            status:
              $ref: '#/components/schemas/200TransactionStatus'
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for Payouts and
                Reversals, Chargeback, Response, Advice for to Card. 
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            payoutSpeed:
              description: >
                The payout processing speed send in the request. Currently
                supported value is "STANDARD". This field will be enhanced in
                future to include additional speed options


                Conditional (Mandatory for an approved transaction and send in
                the request) 


                ISO20022 field name: Transaction Information And Status -
                Instruction Priority
              allOf:
                - $ref: '#/components/schemas/PayoutSpeed'
            fxConversionRate:
              description: >
                This field contains the exchange rate applied to the pair of
                settlementCurrencyCode and destinationCurrencyCode
              allOf:
                - $ref: '#/components/schemas/ConversionRate'
            settlementAmount:
              description: >
                This is the amount to be debited from Originating Entity/Visa
                Client's funding account.
              allOf:
                - $ref: '#/components/schemas/Amount'
            clientReferenceId:
              $ref: '#/components/schemas/ClientReferenceId'
            destinationAmount:
              description: >
                The destination amount that will be deposited to the beneficiary
                account, expressed in the Recipient bank currency code provided
                in the original request. If the Originating Entity sends a
                payout in a currency that is not the same as the destination
                currency then Visa will perform FX conversion and calculate the
                amount to be deposited to the beneficiary bank account, and
                provide this information back to the Originating Entity.


                Note: Destination amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units.


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            transactionAmount:
              description: >
                The amount to debit from merchant's funding account or credit to
                beneficiary's bank account.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            expectedPostingDate:
              $ref: '#/components/schemas/ExpectedPostingDate'
            transactionDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            settlementCurrencyCode:
              description: >
                The settlement currency code


                The 3-character ISO-4217 code in this field reflects the
                currency for the Settlement amount to be debited from
                Originating Entity/Visa Client's funding account.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: GBP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            destinationCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Transaction Information And Status -
                Instructed Amount Currency Code


                Example: PHP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            transactionCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount. 


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: PHP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    PayoutFromOriginator500Response:
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            status:
              type: integer
              description: 3 digit http status code
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
            message:
              type: string
              description: The long description of the error.
    DateOfBirth:
      maxLength: 10
      minLength: 10
      type: string
      description: This field should contain recipient’s date of birth.
      format: date
    RecipientIndividual:
      required:
        - type
      properties:
        name:
          description: >-
            Full name of recipient, conditionally required when firstName and
            lastName are not provided
          example: Joe Smith
          allOf:
            - $ref: '#/components/schemas/Name'
        type:
          description: |
            Identifies the type of recipient - "I" for Individual 

            ISO20022 field name: Creditor Identification Type       
          allOf:
            - $ref: '#/components/schemas/Type'
        address:
          $ref: '#/components/schemas/RecipientAccountPayoutAddress'
        lastName:
          description: >
            Recipient last name, conditionally required when name is not
            provided


            ISO20022 field name: Creditor Last Name
          allOf:
            - $ref: '#/components/schemas/LastName'
        firstName:
          description: >
            Recipient first name, conditionally required when name is not
            provided


            ISO20022 field name: Creditor First Name
          allOf:
            - $ref: '#/components/schemas/FirstName'
        cityOfBirth:
          description: |
            Recipient city of birth

            ISO20022 field name: Creditor City of Birth
          allOf:
            - $ref: '#/components/schemas/CityOfBirth'
        dateOfBirth:
          description: >
            Recipient date of birth (Format: "YYYY-MM-DD", e.g. "1980-02-01")


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Birth Date
          allOf:
            - $ref: '#/components/schemas/DateOfBirth'
        countryOfBirth:
          description: >
            Recipient country of birth


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            Format: 3-character ISO-3166 (Alpha-3) country code


            ISO20022 field name: Creditor Country of Birth
          allOf:
            - $ref: '#/components/schemas/AlphaCountryCode'
    ReturnedTransactionStatus:
      type: string
      description: |
        - RETURNED: Returned request is refunded to Originating Entity
        - REJECTED: Rejected request is refunded to Originating Entity
      enum:
        - RETURNED
        - REJECTED
    AccountQuerySuccessResponse:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          required:
            - clientReferenceId
            - destinationAmount
            - destinationCurrencyCode
            - initiatingPartyId
            - payoutId
            - settlementAmount
            - settlementCurrencyCode
            - status
            - transactionAmount
            - transactionCurrencyCode
            - transactionDateTime
          type: object
          properties:
            status:
              allOf:
                - $ref: '#/components/schemas/TransactionStatus'
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for Payouts and
                Reversals, Chargeback, Response, Advice for to Card. 
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            payoutSpeed:
              description: >
                The payout processing speed send in the request. Currently
                supported value is "STANDARD". This field will be enhanced in
                future to include additional speed options


                Conditional (Mandatory for an approved transaction and send in
                the request) 


                ISO20022 field name: Transaction Information And Status -
                Instruction Priority
              allOf:
                - $ref: '#/components/schemas/PayoutSpeed'
            returnAmount:
              description: >
                The return amount to be paid out to the Originating Entity
                expressed in the currency specified in returnCurrencyCode field.
              allOf:
                - $ref: '#/components/schemas/Amount'
            fundingStatus:
              allOf:
                - $ref: '#/components/schemas/FundingStatus'
            serviceDetail:
              $ref: '#/components/schemas/ServiceDetail'
            returnDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            returnPayoutId:
              description: |
                This is the payoutId generated by the Visa for the return 
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            fxConversionRate:
              description: >
                This field contains the exchange rate applied to the pair of
                settlementCurrencyCode and destinationCurrencyCode
              allOf:
                - $ref: '#/components/schemas/ConversionRate'
            settlementAmount:
              description: >
                This is the amount to be debited from Originating Entity/Visa
                Client's funding account.
              allOf:
                - $ref: '#/components/schemas/Amount'
            clientReferenceId:
              $ref: '#/components/schemas/ClientReferenceId'
            destinationAmount:
              description: >
                The destination amount that will be deposited to the beneficiary
                account, expressed in the Recipient bank currency code provided
                in the original request. If the Originating Entity sends a
                payout in a currency that is not the same as the destination
                currency then Visa will perform FX conversion and calculate the
                amount to be deposited to the beneficiary bank account, and
                provide this information back to the Originating Entity.


                Note: Destination amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units.


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            transactionAmount:
              description: >
                The amount to debit from merchant's funding account or credit to
                beneficiary's bank account.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            returnCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnAmount value. It will be same
                as the client’s settlement currency against the original payout
                transaction.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Payment Return - Instructed Amount Currency
                Code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            returnSourceAmount:
              description: >
                The return amount as sent by Visa’s network partner, expressed
                in the currency specified in returnSourceCurrencyCode field.
              allOf:
                - $ref: '#/components/schemas/Amount'
            expectedPostingDate:
              allOf:
                - $ref: '#/components/schemas/ExpectedPostingDate'
            returnReasonDetails:
              $ref: '#/components/schemas/ReturnReasonDetails'
            transactionDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            returnConversionRate:
              description: >-
                This field contains the exchange rate applied to convert
                returnSourceCurrencyCode to returnCurrencyCode.
              allOf:
                - $ref: '#/components/schemas/ConversionRate'
            settlementCurrencyCode:
              description: >
                The settlement currency code


                The 3-character ISO-4217 code in this field reflects the
                currency for the Settlement amount to be debited from
                Originating Entity/Visa Client's funding account.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: GBP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            destinationCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the destination amount 


                Format: 3-character ISO-4217 (Alpha-3) currency code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            transactionCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount 

                Format: 3-character ISO-4217 (Alpha-3) currency code       
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            returnSourceCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnSourceAmount value. It will
                be same as the destination currency on the original payout
                transaction


                Format: 3-character ISO-4217 (Alpha-3) currency code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    202AccountPayoutCreatedResponse-1:
      type: object
      properties:
        transactionalDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - status
          properties:
            status:
              $ref: '#/components/schemas/202TransactionStatus'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId-1'
      description: Transaction is accepted and will be processed & notified status.
    AmountWithZero:
      minimum: 0
      type: number
      description: >
        This field only applies to 'THRESHOLD' and 'LIQUIDITY_FAILURE'
        eventType. Threshold value would be zero for LIQUIDITY_FAILURE
        eventType.
      format: double
      example: 12.34
    Bank-1:
      required:
        - accountName
        - accountNumber
        - accountNumberType
        - countryCode
        - currencyCode
      type: object
      properties:
        BIC:
          description: >
            beneficiary bank account Business Identifier Code (BIC)


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Agent Financial Institution BICFI
          allOf:
            - $ref: '#/components/schemas/BIC'
        bankCode:
          maxLength: 12
          minLength: 1
          type: string
          description: >
            beneficiary bank account bank code


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Agent Financial Institution Clearing
            System Member Identification
          example: '173'
        bankName:
          description: |
            Recipient's bank name

            ISO20022 field name: Creditor Agent Financial Institution Name
          allOf:
            - $ref: '#/components/schemas/BankName'
        branchCode:
          maxLength: 12
          minLength: 1
          type: string
          description: >
            beneficiary bank account branch code


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Agent Branch Identification
          example: '123456'
        accountName:
          description: >
            beneficiary bank account name i.e. accountholder name as recorded on
            beneficiary bank account


            (Refer to Payouts Endpoint Guide on country-specific required fields
            and lengths)


            ISO20022 field name: Creditor Account Name
          allOf:
            - $ref: '#/components/schemas/AccountName'
        accountType:
          type: string
          description: >
            Recipient bank account type


            * `1` - Checking

            * `2` - Saving 

            * `3` - Maestra

            * `4` - Visa

            * `5` - Loan


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Account Type
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
        countryCode:
          allOf:
            - $ref: '#/components/schemas/AlphaCountryCode'
        bankCodeType:
          type: string
          description: >
            beneficiary bank account bank code type


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Creditor Agent Financial Institution Clearing
            System Member Identification Type
          enum:
            - ABA
            - SORT_CODE
            - DEFAULT
        currencyCode:
          description: >
            beneficiary bank account currency code


            Format: 3-character ISO-4217 (Alpha-3) currency code


            (Refer to Payouts Endpoint Guide on country-specific required fields
            and lengths)


            ISO20022 field name: Creditor Account Currency
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        accountNumber:
          description: >
            beneficiary bank account number


            (Refer to Payouts Endpoint Guide on country-specific required fields
            and lengths)


            ISO20022 field name: Creditor Account Number or IBAN
          allOf:
            - $ref: '#/components/schemas/AccountNumber'
        accountNumberType:
          type: string
          description: >
            beneficiary bank account number type. Valid values: "IBAN" and
            "DEFAULT"


            (Refer to Payouts Endpoint Guide on country-specific required fields
            and lengths)


            ISO20022 field name: Creditor Financial Institution Account Number
            Type
          example: DEFAULT
          enum:
            - IBAN
            - DEFAULT
      description: |
        Recipient's bank object

        Conditional object when payoutMethod has value 'B'
    IdentityField-1:
      title: IdentityField
      required:
        - description
        - elementName
        - inputType
        - locale
        - mandatory
      type: object
      properties:
        locale:
          type: string
          description: The localization setting of this particular record.
        maxSize:
          type: integer
          description: Suggested client side syntactic validation rule.
          format: int64
        subTitle:
          type: string
          description: If present contains a sub-label to be displayed with the field.
        tabOrder:
          type: integer
          description: Indicates the ordering of this field in the UI.
          format: int64
        inputType:
          $ref: '#/components/schemas/IdentityFieldInput'
        listItems:
          minItems: 1
          type: array
          description: >-
            The identityListItems contain listItem sub-elements. The listItem
            sub-elements would normally be present where the inputType attribute
            is 'list'.
          items:
            $ref: '#/components/schemas/IdentityListItem'
        mandatory:
          type: boolean
          description: Indicates whether the field is mandatory.
        separator:
          type: string
          description: >-
            The separator to display following (to the right hand side) this
            field, usually '-' or '/'.
        description:
          type: string
          description: Suggested roll-over or help text description to assist users.
        displaySize:
          type: integer
          description: A suggested field size to display.
          format: int64
        elementName:
          type: string
          description: The name of the element.
        valueRegexp:
          type: string
          description: The regexp for the value of this field.
      description: >-
        Each IdentityField would normally be displayed in the UI from left to
        right based on the tabOrder attribute. The IdentityField element
        contains the attributes described below:-
    IdType:
      type: string
      description: |
        When present, this field contains the type of identification document.

        Valid values:
        * `P` - Passport
        * `D` - Driving License
        * `N` - National Id
        * `T` - Tax Id
        * `L` - Legal Entity Registration Number
        * `F` - Foreign Id
      example: P
      enum:
        - P
        - D
        - 'N'
        - T
        - L
        - F
    AddressLine3:
      maxLength: 50
      minLength: 1
      type: string
      description: This field contains individual recipient's 3rd line of address.
      example: Building 4
    AddressLine2:
      maxLength: 50
      minLength: 1
      type: string
      description: This field contains individual recipient's 2nd line of address.
    PendingCancelledTransactionStatus:
      type: string
      description: |
        - PENDING: Payout is accepted but has not been acknowledged
        - PENDING_CANCELLATION: Cancel payout status is pending
        - CANCELLED - Payout is cancelled when in pending status
      enum:
        - PENDING
        - PENDING_CANCELLATION
        - CANCELLED
    AddressLine1:
      maxLength: 50
      minLength: 1
      type: string
      description: This field contains individual recipient's 1st line of address.
      example: 555 Dragon Drive
    PayoutNotificationReceivedRequest:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod'
        transactionDetail:
          required:
            - clientReferenceId
            - destinationAmount
            - destinationCurrencyCode
            - initiatingPartyId
            - notificationDateTime
            - payoutId
            - settlementAmount
            - settlementCurrencyCode
            - status
            - transactionAmount
            - transactionCurrencyCode
            - transactionDateTime
          type: object
          properties:
            status:
              type: string
              description: >
                Status of the transaction, only received in 202

                - PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received. Only happens in 202.

                ISO20022 field name: Transaction Information And Status -
                Transaction Status
              example: PAYMENT_RECEIVED
              allOf:
                - $ref: '#/components/schemas/PayoutNotificationRequestStatus'
              enum:
                - PAYMENT_RECEIVED
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for the
                original payout


                ISO20022 field name: Transaction Information And Status -
                Original Additional Remittance Information
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            payoutSpeed:
              $ref: '#/components/schemas/PayoutSpeed'
            fxConversionRate:
              description: >
                This field contains the exchange rate applied to the pair of
                settlementCurrencyCode and destinationCurrencyCode
              allOf:
                - $ref: '#/components/schemas/ConversionRate'
            settlementAmount:
              description: >
                This is the amount to be debited from Originating Entity/Visa
                Client's funding account.
              allOf:
                - $ref: '#/components/schemas/Amount'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            destinationAmount:
              description: >
                The destination amount that will be deposited to the beneficiary
                account, expressed in the destination currency code provided in
                the original request. If the Originating Entity sends a payout
                in a currency that is not the same as the destination currency
                then Visa will perform FX conversion and calculate the amount to
                be deposited to the beneficiary bank account, and provide this
                information back to the Originating Entity.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Transaction Information And Status -
                Remitted Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            transactionAmount:
              description: >
                The amount to debit from merchant's funding account or credit to
                beneficiary's bank account.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            expectedPostingDate:
              allOf:
                - $ref: '#/components/schemas/ExpectedPostingDate'
            transactionDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            notificationDateTime:
              $ref: '#/components/schemas/TimestampType'
            settlementCurrencyCode:
              description: >
                The settlement currency code


                The 3-character ISO-4217 code in this field reflects the
                currency for the Settlement amount to be debited from
                Originating Entity/Visa Client's funding account.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: GBP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            destinationCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the destination amount 


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Transaction Information And Status -
                Remitted Amount Currency Code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            transactionCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount 


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Transaction Information And Status -
                Instructed Amount Currency Code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    ReturnReasonCode-1:
      maxLength: 5
      minLength: 5
      type: string
      description: >
        If the Transaction Status is RETURNED or REJECTED then Return reason
        code will be populated


        ISO20022 field name: Payment Return - Reason Code  


        Code Description:

        * RE101 The account not found

        * RE102 The bank could not be located using the bank information
        provided

        * RE103 The beneficiary name does not match the account owner's name

        * RE104 The amount is higher than the limit

        * RE105 The ID number provided to identify the beneficiary does not
        match the owner of the account

        * RE106 Missing sender data

        * RE107 Missing beneficiary data

        * RE201 Returned due to regulatory reason

        * RE202 The account has been restricted

        * RE203 The beneficiary bank rejected the transfer

        * RE204 The account has been closed

        * RE205 The payment was not accepted by the beneficiary bank since it is
        not permitted as per a regulation or policy

        * RE206 The beneficiary bank returned the payment since it is a
        duplicate

        * RE207 The recipient did not accept the payment

        * RE208 No reason provided

        * RE301 The payment was returned based on a good faith request from
        sending bank
      example: RE101
    PayoutFromOriginator400Response:
      required:
        - errorResponse
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            status:
              type: integer
              description: 3 digit http status code
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
            message:
              type: string
              description: The long description of the error.
    ValidatePayoutFromOriginator500Response:
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            status:
              type: integer
              description: 3 digit http status code
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
            message:
              type: string
              description: The long description of the error.
    WalletTransactionDetail-1:
      required:
        - businessApplicationId
        - endToEndId
        - initiatingPartyId
        - transactionAmount
        - transactionCurrencyCode
      type: object
      properties:
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        payoutSpeed:
          $ref: '#/components/schemas/PayoutSpeed'
        additionalData:
          $ref: '#/components/schemas/TransactionalAdditionalData'
        purposeOfPayment:
          description: >
            Purpose of payment is required in certain markets to clearly
            identify the purpose of the payment based on the standard values
            defined for respective market

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Purpose of Payment
          allOf:
            - $ref: '#/components/schemas/PurposeOfPayment'
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId-1'
        transactionAmount:
          description: >
            The amount to debit from merchant's funding account or credit to
            beneficiary's bank account.

            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 

            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.

            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount-1'
        statementNarrative:
          description: >
            Originating Entity is advised to provide a narrative that helps the
            recipient clearly identify the sender and reason for the payment.

            Text will be displayed on the recipient’s statement when the payment
            gets posted to the recipient’s wallet provider account

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Remittance Information Unstructured
          allOf:
            - $ref: '#/components/schemas/StatementNarrative-1'
        senderSourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds-1'
        businessApplicationId:
          $ref: '#/components/schemas/BusinessApplicationId-1'
        settlementCurrencyCode:
          description: >
            The settlement currency code

            The 3-character ISO-4217 code in this field reflects the currency
            for the Settlement amount to be debited from Originating Entity/Visa
            Client's funding account.

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: GBP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        transactionCurrencyCode:
          description: >
            The 3-character ISO-4217 code in this field reflects the currency
            associated to the transaction amount. 

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: PHP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        senderBeneficiaryRelationship:
          $ref: '#/components/schemas/BeneficiaryRelationship-1'
    PayoutAccountRequest:
      required:
        - payoutMethod
        - recipientDetail
        - senderDetail
      type: object
      properties:
        payoutMethod:
          description: >
            Originating Entity must indicate the payout method i.e. To Account
            or Wallet


            Valid values:

            “B” – Visa Direct Account
          allOf:
            - $ref: '#/components/schemas/PayoutMethod'
        senderDetail:
          properties:
            address:
              $ref: '#/components/schemas/SenderAccountPayoutAddress'
            contactEmail:
              description: |
                Sender email address

                ISO20022 field name: Ultimate Debtor Contact Email Address
              allOf:
                - $ref: '#/components/schemas/ContactEmail'
            contactNumber:
              description: >
                Sender contact number

                + symbol followed by digits, no other symbols, e.g.
                +447700123456
              example: 447700123456
              allOf:
                - $ref: '#/components/schemas/ContactNumber'
            additionalData:
              $ref: '#/components/schemas/SenderAdditionalData'
            contactNumberType:
              type: string
              enum:
                - MOBILE
                - WORK
                - HOME
            identificationList:
              $ref: '#/components/schemas/SenderIdentificationList'
            senderAccountNumber:
              $ref: '#/components/schemas/SenderAccountNumber'
            senderReferenceNumber:
              $ref: '#/components/schemas/SenderReferenceNumber'
          allOf:
            - $ref: '#/components/schemas/SenderTransactorDetail'
        recipientDetail:
          required:
            - bank
          properties:
            bank:
              $ref: '#/components/schemas/Bank'
            contactEmail:
              description: |
                Recipient email address

                ISO20022 field name: Ultimate Creditor Contact Email Address
              allOf:
                - $ref: '#/components/schemas/ContactEmail'
            contactNumber:
              description: >
                Recipient contact number

                + symbol followed by digits, no other symbols, e.g.
                +447700123456
              example: 447700123456
              allOf:
                - $ref: '#/components/schemas/ContactNumber'
            additionalData:
              $ref: '#/components/schemas/RecipientAdditionalData'
            contactNumberType:
              type: string
              enum:
                - MOBILE
                - WORK
                - HOME
            identificationList:
              properties:
                idType:
                  description: >
                    Recipient identification type (issued by a government or
                    similar authority) needs to be provided by Originating
                    Entity along with the payment in certain markets. 


                    Valid values : 

                    * P- Passport 

                    * D-Driving License 

                    * N-National Id 

                    * T-Tax Id 

                    * L-Legal Entity Registration Number 

                    * F-Foreign Id


                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)


                    ISO20022 field name: Creditor Identification Code
              allOf:
                - $ref: '#/components/schemas/RecipientIdentificationList'
          allOf:
            - $ref: '#/components/schemas/RecipientTransactorDetail'
    PayoutMethod-1:
      type: string
      description: >
        Originating Entity must indicate the payout method i.e. Account or
        Wallet


        Valid values:

        - "B" Send to Bank account

        - "W" Send to Wallet
      enum:
        - B
        - W
    RecipientTransactorDetail-1:
      oneOf:
        - $ref: '#/components/schemas/RecipientIndividual-1'
        - $ref: '#/components/schemas/RecipientCompany'
    AccountName:
      maxLength: 70
      minLength: 1
      type: string
      description: When present, this field contains recipient’s account name at the bank.
      example: John Doe
    ValidateAccountTransactionDetail:
      required:
        - businessApplicationId
        - initiatingPartyId
        - transactionAmount
        - transactionCurrencyCode
      type: object
      properties:
        quoteId:
          $ref: '#/components/schemas/QuoteId'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        payoutSpeed:
          $ref: '#/components/schemas/PayoutSpeed'
        additionalData:
          $ref: '#/components/schemas/TransactionalAdditionalData'
        purposeOfPayment:
          description: >
            Purpose of payment is required in certain markets to clearly
            identify the purpose of the payment based on the standard values
            defined for respective market

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Purpose of Payment
          allOf:
            - $ref: '#/components/schemas/PurposeOfPayment'
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId'
        transactionAmount:
          description: >
            The amount to debit from merchant's funding account or credit to
            beneficiary's bank account.

            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 

            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.

            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
        statementNarrative:
          allOf:
            - $ref: '#/components/schemas/StatementNarrative'
        senderSourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds'
        structuredRemittance:
          description: >
            This object carries ISO20022 SMI data. It applies to Visa Direct
            Account payouts only.
          allOf:
            - $ref: '#/components/schemas/TransactionalStructuredRemittance'
        businessApplicationId:
          $ref: '#/components/schemas/BusinessApplicationId'
        settlementCurrencyCode:
          description: >
            The settlement currency code

            The 3-character ISO-4217 code in this field reflects the currency
            for the Settlement amount to be debited from Originating Entity/Visa
            Client's funding account.

            Format: 3-character ISO-4217 (Alpha-3) currency code


            <b>This field is mandatory</b>


            Example: GBP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        transactionCurrencyCode:
          description: >
            The 3-character ISO-4217 code in this field reflects the currency
            associated to the transaction amount. 

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: PHP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        senderBeneficiaryRelationship:
          $ref: '#/components/schemas/BeneficiaryRelationship'
    ValidatePayoutWalletRequest:
      required:
        - transactionDetail
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/ValidateWalletTransactionDetail'
      allOf:
        - $ref: '#/components/schemas/PayoutWalletRequest'
    SenderIndividual-1:
      required:
        - type
      properties:
        name:
          description: >-
            Full name of sender, conditionally required when firstName and
            lastName are not provided.
          example: Joe Smith
          allOf:
            - $ref: '#/components/schemas/Name'
        type:
          description: |
            Identifies the type of sender - "I" for Individual 

            ISO20022 field name: Debtor Identification Type       
          allOf:
            - $ref: '#/components/schemas/Type'
        address:
          $ref: '#/components/schemas/SenderAccountPayoutAddress'
        lastName:
          description: |
            Sender last name, conditionally required when name is not provided

            ISO20022 field name: Ultimate Debtor Last Name
          allOf:
            - $ref: '#/components/schemas/LastName'
        firstName:
          description: |
            Sender first name, conditionally required when name is not provided

            ISO20022 field name: Ultimate Debtor First Name
          allOf:
            - $ref: '#/components/schemas/FirstName'
        cityOfBirth:
          description: |
            Sender city of birth

            ISO20022 field name: Ultimate Debtor City of Birth
          allOf:
            - $ref: '#/components/schemas/CityOfBirth'
        dateOfBirth:
          description: >
            Sender date of birth


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Ultimate Debtor Birth Date 
          allOf:
            - $ref: '#/components/schemas/DateOfBirth-1'
        countryOfBirth:
          description: >
            Sender country of birth


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            Format: 3-character ISO-3166 (Alpha-3) country code


            ISO20022 field name: Ultimate Debtor Country of Birth
          allOf:
            - $ref: '#/components/schemas/AlphaCountryCode'
    PayoutResponse-1:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          required:
            - clientReferenceId
            - destinationAmount
            - destinationCurrencyCode
            - initiatingPartyId
            - payoutId
            - settlementAmount
            - settlementCurrencyCode
            - status
            - transactionAmount
            - transactionCurrencyCode
            - transactionDateTime
          type: object
          properties:
            status:
              $ref: '#/components/schemas/200TransactionStatus'
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for Payouts and
                Reversals, Chargeback, Response, Advice for to Card. 
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            payoutSpeed:
              description: >
                The payout processing speed send in the request. Currently
                supported value is "STANDARD". This field will be enhanced in
                future to include additional speed options


                Conditional (Mandatory for an approved transaction and send in
                the request) 


                ISO20022 field name: Transaction Information And Status -
                Instruction Priority
              allOf:
                - $ref: '#/components/schemas/PayoutSpeed'
            fxConversionRate:
              description: >
                This field contains the exchange rate applied to the pair of
                settlementCurrencyCode and destinationCurrencyCode
              allOf:
                - $ref: '#/components/schemas/ConversionRate'
            settlementAmount:
              description: >
                This is the amount to be debited from Originating Entity/Visa
                Client's funding account.
              allOf:
                - $ref: '#/components/schemas/Amount'
            clientReferenceId:
              $ref: '#/components/schemas/ClientReferenceId'
            destinationAmount:
              description: >
                The destination amount that will be deposited to the beneficiary
                account, expressed in the Recipient bank currency code provided
                in the original request. If the Originating Entity sends a
                payout in a currency that is not the same as the destination
                currency then Visa will perform FX conversion and calculate the
                amount to be deposited to the beneficiary bank account, and
                provide this information back to the Originating Entity.


                Note: Destination amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units.


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            transactionAmount:
              description: >
                The amount to debit from merchant's funding account or credit to
                beneficiary's bank account.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount'
            expectedPostingDate:
              $ref: '#/components/schemas/ExpectedPostingDate-1'
            transactionDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            settlementCurrencyCode:
              description: >
                The settlement currency code


                The 3-character ISO-4217 code in this field reflects the
                currency for the Settlement amount to be debited from
                Originating Entity/Visa Client's funding account.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: GBP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            destinationCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Transaction Information And Status -
                Instructed Amount Currency Code


                Example: PHP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            transactionCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount. 


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: PHP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    SendPayoutRequest-2:
      oneOf:
        - $ref: '#/components/schemas/AccountPayoutRequest-2'
        - $ref: '#/components/schemas/WalletPayoutRequest-1'
    StatementNarrative:
      maxLength: 140
      minLength: 1
      type: string
      description: >
        Originating Entity is advised to provide a narrative that helps the
        recipient clearly identify the sender and reason for the payment. Text
        will be displayed on the recipient’s statement when the payment gets
        posted to the recipient’s account or wallet statement. 

        Not all wallet operators support a statement narrative.


        Conditional - (Refer to Payouts Endpoint Guide on country-specific
        required fields and lengths).


        ISO20022 field name: Remittance Information Unstructured       
      example: testing narrative
    ServiceDetail:
      properties:
        traceable:
          type: boolean
          description: Indicates if a payout transaction is traceable
        recallable:
          type: boolean
          description: Indicates if a payout transaction is recallable
        paymentRail:
          type: string
          description: Indicates the payment rail used for the payout transaction
          enum:
            - ACH
            - RTP
            - RTGS
            - SWIFT
    SendPayoutRequest-1:
      oneOf:
        - $ref: '#/components/schemas/AccountPayoutRequest-1'
        - $ref: '#/components/schemas/WalletPayoutRequest'
    PayoutReturnRequest-1:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod-1'
        transactionDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - originalPayoutId
            - originalTransactionAmount
            - originalTransactionCurrencyCode
            - returnAmount
            - returnCurrencyCode
            - returnDateTime
            - returnPayoutId
            - returnReasonDetails
            - status
          type: object
          properties:
            status:
              $ref: '#/components/schemas/ReturnReasonCodeDetailsType'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            returnAmount:
              description: >
                The returned amount credited to Originating Entity as a result
                of the return Payout 


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            returnDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            returnPayoutId:
              description: >
                This is the Visa-generated unique identifier of the returned
                payout.


                ISO20022 field name: Payment Return - Original Additional
                Remittance Information
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            originalPayoutId:
              description: >
                This is Visa-generated unique identifier of the original payout.


                ISO20022 field name: Payment Return - Original Additional
                Remittance Information
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            clientReferenceId:
              $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId-1'
            returnCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the returnAmount. 


                Format: 3-character ISO-4217 (Alpha-3) currency code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            returnSourceAmount:
              description: >
                The return amount as sent by Visa’s network partner, expressed
                in the currency specified in returnSourceCurrencyCode field.
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            returnReasonDetails:
              $ref: '#/components/schemas/ReturnReasonDetails-1'
            returnConversionRate:
              description: >-
                This field contains the exchange rate applied to convert
                returnSourceCurrencyCode to returnCurrencyCode.
              allOf:
                - $ref: '#/components/schemas/ConversionRate-1'
            returnSourceCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnSourceAmount value. It will
                be same as the destination currency on the original payout
                transaction


                Format: 3-character ISO-4217 (Alpha-3) currency code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    QueryPayoutIdResponse200:
      required:
        - originatorDetail
        - transactionDetail
      type: object
      properties:
        recipientDetail:
          type: object
          properties:
            bank:
              required:
                - accountName
                - accountNumber
                - bankName
                - countryCode
              type: object
              properties:
                bankName:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: Recipient bank name
                accountName:
                  maxLength: 70
                  minLength: 1
                  type: string
                  description: >-
                    Recipient bank account name i.e. accountholder name as
                    recorded on recipient bank account
                countryCode:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: |-
                    Recipient bank account country code
                    Format: 3-digit ISO-3166 (numeric) country code
                accountNumber:
                  maxLength: 34
                  minLength: 1
                  type: string
                  description: Recipient bank account number
              description: This object is only relevant for P2A transactions.
            wallet:
              required:
                - accountIdentifier
                - accountIdentifierType
                - countryCode
                - currencyCode
              type: object
              properties:
                countryCode:
                  maxLength: 3
                  minLength: 3
                  pattern: ^\d\d\d$
                  type: string
                  description: |-
                    Recipient wallet country code.
                    Format: 3-digit ISO-3166 (numeric) country code
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  type: string
                  description: |-
                    Recipient wallet country code.
                    Format: 3-digit ISO-4217 (numeric) currency code
                operatorName:
                  type: string
                  description: >-
                    This identifies the non bank wallet operator that has issued
                    the account to the recipient and is going to receive and
                    post the funds to the recipients account. Enum provided by
                    Visa Direct to Wallet Operator.
                  enum:
                    - WECHATPAY
                accountIdentifier:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: "This identifies the identifier of the recipients account with the wallet operator to which the funds have to be deposited. (e.g., wallet address - phone/email/custom identifier that identifies the account with the digital wallet operator)\n-\tIf EMAIL then verify whether the Email is in valid Email format\n-\tIf PHONENUMBER then verify if the value is numeric , + at the beginning of the value will be considered as valid. e.g. +65123456789 (note, refer ISO spec E.164)\n-\tIf USERNAME then check whether it is a valid string. \n\nNote - An E.164 number has three components.\n1. The prefix +.\n2. A 1-3 digit country code.\n3. A subscriber number."
                accountIdentifierType:
                  type: string
                  description: >-
                    This identifies type of account Identifier. Supported values
                    are PHONENUMBER, EMAIL, USERNAME.
                  enum:
                    - PHONENUMBER
                    - EMAIL
                    - USERNAME
              description: This object is only relevant for P2W transactions.
        originatorDetail:
          required:
            - bankId
            - originatorId
          type: object
          properties:
            bankId:
              type: integer
              description: >-
                Originating bank ID is the Bank Identification Number (BIN)
                assigned to each Visa Member upon enrollment. If the Originator
                is not a Financial Institution (FI) and will be processing using
                a sponsor FI (i.e. Acquirer ) , this is the BIN of the
                sponsoring FI (Acquirer). It uniquely identifies the Bank/FI
                that is sponsoring the Originating Entity in Visa’s core system.
                Note: This is also referred to as the “Acquiring BIN” by Visa
            originatorId:
              maxLength: 15
              minLength: 1
              type: string
              description: >-
                An alphanumeric field that uniquely identifies the Originating
                Entity for Push to Account or Push to Wallet transactions and
                Card Acceptor Terminal ID (CAID) for Push to Card transactions.


                ISO20022 field name: N/A

                P2A: Mandatory 

                P2W: Mandatory 

                P2C: N/A
            merchantVerificationValue:
              type: integer
              description: >-
                Conditional The concatenated Merchant Verification Value of Visa
                assigned and Acquirer assigned value is returned.
                 Note: This field is present if the MVV value was included on the Send Payout request.

                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
        transactionDetail:
          required:
            - originalTransmissionDateTime
            - payoutId
            - retrievalReferenceNumber
            - status
            - statusUpdateTime
            - systemTraceAuditNumber
            - transactionAmount
            - transactionCurrencyCode
          type: object
          properties:
            authId:
              type: integer
              description: >-
                This is a unique authorization code for an approved transaction
                from Issuer.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
            status:
              type: string
              description: >
                Status of the transaction being queried


                P2C Valid Value are:

                COMPLETED, IN_PROGRESS, FAILED, PENDING, CANCELLED


                Status definition:

                - COMPLETED - Transaction was processed by Visa.

                - IN_PROGRESS - Transaction is in progress, being processed by
                Visa

                - FAILED - Transaction was received and rejected by Visa

                - PENDING - Transaction is pending for processing by Visa

                - CANCELLED - Transaction was cancelled as requested by the
                originating acquirer


                P2A Valid Value are:

                PAYMENT_RECEIVED, PENDING, PAYMENT_SENT, VALIDATION_FAILED,
                AWAITING_INFORMATION, PENDING_CANCELLATION, RETURNED, ERROR,
                DECLINED, CANCELLED


                P2A Status definition:

                PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received

                PENDING : Payout request is pending validation

                PAYMENT_SENT: The payout has been submitted to the Network
                partner by PSP

                VALIDATION_FAILED: Payout request failed validation and will not
                be processed further

                AWAITING_INFORMATION: PSP is awaiting more information from
                Originating Entity before transaction can be processed 

                PENDING_CANCELLATION: Cancel payout request is pending

                RETURNED: Payout has been returned and funds are being refunded

                ERROR: Payout is in error status. Ex: HTTP 500, 404 403 etc.,

                DECLINED: Payout is declined by Visa and will not be proccessed
                further

                CANCELLED: Payout has been successfully cancelledn


                P2W Valid Value are:

                PAYMENT_RECEIVED, PENDING, PAYMENT_SENT, VALIDATION_FAILED,
                AWAITING_INFORMATION, PENDING_CANCELLATION, RETURNED, ERROR,
                DECLINED, CANCELLED


                P2W Status definition:

                PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received

                PENDING : Payout request is pending validation

                PAYMENT_SENT: The payout has been submitted to the Network
                partner by PSP

                VALIDATION_FAILED: Payout request failed validation and will not
                be processed further

                AWAITING_INFORMATION: PSP is awaiting more information from
                Originating Entity before transaction can be processed 

                PENDING_CANCELLATION: Cancel payout request is pending

                RETURNED: Payout has been returned and funds are being refunded

                ERROR: Payout is in error status. Ex: HTTP 500, 404 403 etc.,

                DECLINED: Payout is declined by Visa and will not be proccessed
                further

                CANCELLED: Payout has been successfully cancelledn
              enum:
                - PAYMENT_RECEIVED
                - PENDING
                - PAYMENT_SENT
                - VALIDATION_FAILED
                - AWAITING_INFORMATION
                - PENDING_CANCELLATION
                - RETURNED
                - ERROR
                - DECLINED
                - CANCELLED
                - IN_PROGRESS
                - FAILED
            payoutId:
              maxLength: 50
              minLength: 1
              type: string
              description: >-
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for P2A, P2W and
                Reversals, Chargeback, Response, Advice for P2C.
            networkId:
              maxLength: 4
              minLength: 1
              type: string
              description: >-
                This contains a code that identifies the network on which the
                transaction was processed.
                 Note: This field is returned only if it is anything other than networkId value 2. Supported only in US for domestic transactions

                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Conditional
            tokenData:
              type: object
              properties:
                accountRange:
                  type: integer
                  description: >-
                    Contains the first 9 digits of the cardholder PAN..

                    Note: Acquirers must not forward this value to their
                    merchants after receiving it in the response message from
                    Visa.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                accountSuffix:
                  maxLength: 4
                  minLength: 4
                  type: string
                  description: >-
                    Last four digits of the card number/PAN 

                    Note: This is only relevant for push to card payouts, where
                    a card network token was sent by the Originating Entity in
                    the payout request (in the
                    recipientDetail.card.accountNumber field).


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                additionalTokenRespInfo:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: "This field will contain a value used to\_identify transactions eligible for token\_services. \nValid value: \n1 - Token program.\n\nISO20022 field name: N/A\nP2A: N/A\nP2W: N/A\nP2C: Optional"
            endToEndId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity's customer to
                uniquely identify the transaction


                ISO20022 field name: Payment Identification - EndtoEnd
                Identification
            settlement:
              type: object
              properties:
                date:
                  maxLength: 10
                  minLength: 10
                  pattern: YYYY-MM-DD
                  type: string
                  description: >-
                    This is date when the transaction is settled between Visa
                    and the Acquirer 


                    P2A: Conditional (Mandatory when the transaction is settled)

                    P2W: N/A

                    P2C: Conditional (Mandatory when the transaction is settled)
                amount:
                  type: integer
                  description: >-
                    Contains the transaction amount converted to settlement
                    currency, expressed in the currency specified in
                    settlementCurrencyCode field. 


                    P2A: This field will be populated for Accelerated Settlement
                    transactions.

                    P2W: N/A

                    P2C: N/A


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to the Payouts Endpoint Guide
                    for P2A on country-specific currency minor units. Refer to
                    SMS POS Visa & Visa Electron

                    Technical Specifications - Appendix E Country and Currency
                    codes for P2C.


                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should populate “10099”. If the
                    amount is $100.00 then this field should populate “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should populate “10000”.
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  type: string
                  description: >-
                    The 3-digit ISO-4217 code in this field reflects the
                    currency associated with the settlement amount 

                    Format: 3-digit ISO-4217 (numeric) currency code


                    P2A: This field will be populated for Accelerated Settlement
                    transactions.

                    P2W: N/A

                    P2C: N/A
                rateSourceId:
                  type: string
                  description: >-
                    Contains the source ID of the foreign exchange rate applied
                    to the derive the settlement amount in case of cross
                    currency payment.


                    P2A: Conditional (Mandatory when the transaction is settled
                    via VisaNet)

                    P2W: N/A

                    P2C: Conditional (Mandatory when the transaction is settled)
                conversionRate:
                  maxLength: 14
                  minLength: 1
                  pattern: \d{1,7}(\.\d{1,12})?
                  type: string
                  description: >-
                    Contains the foreign exchange rate applied to the derive the
                    settlement amount in case of cross currency payment.


                    Conditional (Mandatory when the transaction is settled via
                    VisaNet)


                    ISO20022 field name: Transaction Information And Status -
                    Remittance Information Settlement Conversion or FX Rate


                    P2A: This field will be populated for Accelerated Settlement
                    transactions.

                    P2W: N/A

                    P2C: N/A
            responseCode:
              type: integer
              description: >-
                Response code that provides the result of the payout request.
                List of valid response codes (add VDP link
                (https://developer.visa.com/request_response_codes#action_code))
            returnAmount:
              type: integer
              description: >-
                The return amount to be paid out to the Originating Entity
                expressed in the currency specified in returnCurrencyCode field.

                The amount originally assessed for settlement on the Payout will
                be reversed as-is in case of rejects and cancellations.

                In case of returns from Visa's network partner on a
                cross-currency transaction, this value could vary from the
                settlement amount on the original payout.


                This field will be populated for Accelerated Settlement
                transactions.
              example: 12345
            fundingStatus:
              type: string
              description: >-
                Funding Status of the payout transaction


                Possible values: "FUNDED" "NOT_FUNDED"


                FUNDED - Indicates that the originating entity has provided
                funding for the transaction and Visa Direct has allocated funds
                to the transaction

                NOT_FUNDED - Indicates that the originating entity has not
                provided funding for the transaction
                 
                P2A: Conditional (will be populated after the funding has been
                assessed) 

                P2W: Conditional (will be populated after the funding has been
                assessed)
              enum:
                - FUNDED
                - NOT_FUNDED
            returnDateTime:
              pattern: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.\0\0\0Z
              type: string
              description: >-
                This field contains the date and time Visa has returned the
                payout to the Originating Entity

                Format: YYYY-MM-DDThh:mm:ss.000Z

                Example: 2021-01-01T22:52:46.000Z


                ISO20022 field name: Payment Return - Message Creation Date Time
              example: '2020-05-05T12:12:12.000Z'
            nationalNetData:
              type: object
              properties:
                reimbursementFee:
                  type: number
                  description: >-
                    Applies to Argentina domestic data only and indicates the
                    installment payment details for Argentina National Net
                    Settlement Service.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                  format: double
                memberSuppliedIRF:
                  maxLength: 13
                  minLength: 1
                  type: string
                  description: >-
                    This field contains the client-calculated interchange
                    reimbursement fee (IRF) for countries using this capability.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                reimbursementAttribute:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Contains a code that identifies the applicable interchange
                    reimbursement fee for a transaction. Its an optional value
                    and if not supplied by Originating entities, Visa applies
                    default value 0 and passes onwards to Issuers/Receiving
                    entities.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
            statusUpdateTime:
              pattern: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.000Z
              type: string
              description: >-
                This is the time when latest event reflected in
                transactionDetail.status is processed using Visa’s clock Format:
                UTC time YYYY-MM-DThh:mm:ss.000Z Example:
                2021-01-01T22:52:46.000Z
              format: UTC time YYYY-MM-DThh:mm:ss.000Z
              example: '2021-01-01T22:52:46.000Z'
            clientReferenceId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity to uniquely
                identify the transaction


                ISO20022 field name: Payment Identification - Transaction
                Identification
            destinationAmount:
              type: integer
              description: >-
                The destination amount that will be deposited to the recipient
                account, expressed in the destination currency code provided in
                the original request. If the Originating Entity sends a payout
                in a currency that is not the same as the destination currency
                then Visa will perform FX conversion and calculate the amount to
                be deposited to the recipient bank account, and provide this
                information back to the Originating Entity.


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to the Payouts Endpoint Guide for
                P2A on country-specific currency minor units. Refer to SMS POS
                Visa & Visa Electron Technical Specifications - Appendix E
                Country and Currency codes for P2C.


                Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.
            transactionAmount:
              type: integer
              description: >-
                The transaction amount to be paid out to the recipient bank
                account or card. Expressed in the currency specified in
                transaction currency code.


                Note: The number of decimal places assumed for this field
                depends on the currency. Refer to the Payouts Endpoint Guide for
                P2A on country-specific currency minor units. Refer to SMS POS
                Visa & Visa Electron Technical Specifications - Appendix E
                Country and Currency codes for P2C.


                Example: Currency exponent for USD is 2. If the transaction
                amount is $100.99, then this field should populate “10099”. If
                the transaction amount is $100.00 then this field should
                populate “10000”. Currency exponent for JPY is 0. If the
                transaction amount is JPY 10,000, then this field should
                populate “10000”.
            returnCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnAmount value. It will be same
                as the client’s settlement currency against the original payout
                transaction.


                This field will be populated for Accelerated Settlement
                transactions.
              example: '840'
            returnSourceAmount:
              type: integer
              description: "The return amount as sent by Visa’s network partner in the destination country, expressed in the currency specified in returnSourceCurrencyCode field. \nThis field will be\_conditionally present when returnReasonDetails.type=”RETURN\"."
              example: 12345
            expectedPostingDate:
              maxLength: 10
              minLength: 10
              type: string
              description: >-
                This is an estimated date by which the payout should be posted
                to the recipient’s account. This date should be communicated to
                the sender and recipient (if possible) to ensure that they know
                when to expect the funds

                Conditional (Mandatory for an approved transaction) 

                P2C: N/A
              format: YYYY-MM-DD
            feeProgramIndicator:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                Contains the fee program indicator, which is used to assess the
                Interchange Fee Amount in certain scenarios


                ISO20022 field name: n/a

                P2A: N/A

                P2W: N/A

                P2C: Optional
            returnReasonDetails:
              type: object
              properties:
                code:
                  maxLength: 5
                  minLength: 5
                  type: string
                  description: >-
                    Indicates the return reason code when the payout is
                    returned.
                type:
                  type: string
                  description: Indicates the PSP return type when the payout is returned.
                  enum:
                    - REJECT
                    - RETURN
                description:
                  maxLength: 105
                  minLength: 1
                  type: string
                  description: >-
                    Indicates the PSP return description when the payout is
                    returned.
            returnConversionRate:
              maxLength: 14
              type: string
              description: >-
                This field contains the exchange rate applied to convert
                returnSourceAmount to returnAmount.


                This field will be populated for Accelerated Settlement
                transactions.
              format: \d{1,7}(\.\d{1,12})?
            transactionIdentifier:
              maxLength: 15
              minLength: 15
              type: string
              description: >-
                Visa-generated Transaction Identifier that is unique for each
                original authorization and financial request. The identifier
                links original messages to subsequent messages, such as those
                for exception item processing and clearing records. It can also
                be used to match the payouts to settlement reports.
            systemTraceAuditNumber:
              maxLength: 6
              minLength: 6
              type: string
              description: >-
                This field contains a number assigned by the Originating Entity
                that uniquely identifies a transaction and all message types.
                The trace number is a key data element used to match a response
                to its request or to match a message to others for a given
                transaction set
            destinationCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated with the destination amount 

                Format: 3-digit ISO-4217 (numeric) currency code


                P2A: Optional 

                P2W: Optional 

                P2C: N/A
            transactionCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated to the transaction amount Format: 3-digit ISO-4217
                (numeric) currency code
            retrievalReferenceNumber:
              maxLength: 12
              minLength: 12
              pattern: ^\d{12}$
              type: string
              description: >-
                This is a unique identifier generated by the Originating Entity
                for a transaction and its one of the key fields for matching a
                transaction with the subsequent messages with in the transaction
                set example Notification, Returns, Cancel, Exception management
                via VD Portal for P2A, P2W and Reversals, Chargeback, Response,
                Advice for P2C.


                The format is recommended to be ydddhhnnnnnn yddd - The first
                four digits must be a valid Julian date format, where the first
                digit = 0-9 (last digit of current year) and the next three
                digits = 001-366 (number of the day in the year). hh - can be
                the two digit hour in a 24 hour clock (00-23) during which the
                transaction is performed. nnnnnn - can be the
                systemsTraceAuditNumber or any 6 digit number
            returnSourceCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: "The 3-character ISO-4217 code in this field reflects the currency associated with the returnSourceAmount value. It will be same as the destination currency on the original payout transaction. \nThis field will be\_conditionally present when returnReasonDetails.type=”RETURN\"."
              example: '840'
            destinationConversionRate:
              maxLength: 14
              type: string
              description: >-
                This field contains the exchange rate applied to convert
                transactionAmount to destinationAmount.
              format: \d{1,7}(\.\d{1,12})?
            originalTransmissionDateTime:
              type: string
              description: The time the request was received by Visa
              format: YYYY-MM-DDThh:mm:ss.sssZ
    PayoutResponse-2:
      required:
        - transactionDetail
      type: object
      properties:
        transactionDetail:
          required:
            - clientReferenceId
            - destinationAmount
            - destinationCurrencyCode
            - initiatingPartyId
            - payoutId
            - settlementAmount
            - settlementCurrencyCode
            - status
            - transactionAmount
            - transactionCurrencyCode
            - transactionDateTime
          type: object
          properties:
            status:
              $ref: '#/components/schemas/200TransactionStatus'
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for Payouts and
                Reversals, Chargeback, Response, Advice for to Card. 
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            payoutSpeed:
              description: >
                The payout processing speed send in the request. Currently
                supported value is "STANDARD". This field will be enahnaced in
                future to include additional speed options


                Conditional (Mandatory for an approved transaction and send in
                the request) 


                ISO20022 field name: Transaction Information And Status -
                Instruction Priority
              allOf:
                - $ref: '#/components/schemas/PayoutSpeed'
            fxConversionRate:
              description: >
                This field contains the exchange rate applied to the pair of
                settlementCurrencyCode and destinationCurrencyCode
              allOf:
                - $ref: '#/components/schemas/ConversionRate-1'
            settlementAmount:
              description: >
                This is the amount to be debited from Originating Entity/Visa
                Client's funding account.
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            clientReferenceId:
              $ref: '#/components/schemas/ClientReferenceId'
            destinationAmount:
              description: >
                The destination amount that will be deposited to the beneficiary
                account, expressed in the Recipient bank currency code provided
                in the original request. If the Originating Entity sends a
                payout in a currency that is not the same as the destination
                currency then Visa will perform FX conversion and calculate the
                amount to be deposited to the beneficiary bank account, and
                provide this information back to the Originating Entity.


                Note: Destination amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units.


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId-1'
            transactionAmount:
              description: >
                The amount to debit from merchant's funding account or credit to
                beneficiary's bank account.


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.


                ISO20022 field name: Instructed Amount
              allOf:
                - $ref: '#/components/schemas/Amount-1'
            expectedPostingDate:
              $ref: '#/components/schemas/ExpectedPostingDate-2'
            transactionDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            settlementCurrencyCode:
              description: >
                The settlement currency code


                The 3-character ISO-4217 code in this field reflects the
                currency for the Settlement amount to be debited from
                Originating Entity/Visa Client's funding account.


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: GBP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            destinationCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount


                Format: 3-character ISO-4217 (Alpha-3) currency code


                ISO20022 field name: Transaction Information And Status -
                Instructed Amount Currency Code


                Example: PHP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            transactionCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the transaction amount. 


                Format: 3-character ISO-4217 (Alpha-3) currency code


                Example: PHP
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    ConversionRate-1:
      type: number
      format: double
      example: 0.07
    PayoutFromOriginator200Response:
      required:
        - originatorDetail
        - transactionDetail
      type: object
      properties:
        recipientDetail:
          type: object
          properties:
            vauData:
              type: object
              properties:
                vauFlag:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Recipient primary account number Visa Account Updater (VAU)
                    flag


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional 

                    Note: Possible values are : Y (replacement occurred) N (No
                    replacements)
                accountStatus:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Indicates recipient account status. Possible values are C
                    (closed account) or Q (contact cardholder)


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                vauErrorReasonCode:
                  maxLength: 25
                  minLength: 1
                  type: string
                  description: |-
                    Indicates the reason the VAU failed
                    Possible values 
                    VAU_SUCCESS
                    VAU_FAILED
                    VAU_PAN_TKN_SUCCESS
                    VAU_PAN_TKN_FAILED
                    VAU_PPCS_SUCCESS
                    VAU_PPCS_FAILED

                    ISO20022 field name: n/a
                    P2A: N/A
                    P2W: N/A
                    P2C: Optional
                  enum:
                    - VAU_SUCCESS
                    - VAU_FAILED
                    - VAU_PAN_TKN_SUCCESS
                    - VAU_PAN_TKN_FAILED
                    - VAU_PPCS_SUCCESS
                    - VAU_PPCS_FAILED
                replacementCardAccountNumber:
                  maxLength: 19
                  minLength: 13
                  type: string
                  description: >-
                    Contains the recipient replacement primary account number,
                    if it exists


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                replacementCardExpirationDate:
                  maxLength: 7
                  minLength: 7
                  type: string
                  description: >-
                    Contains the recipient replacement primary account number
                    expiration date, if it exists. This is returned even if the
                    expiration date was not passed in the request.

                     Format: YYYY-MM 

                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                  format: YYYY-MM
            prepaidBalanceData:
              required:
                - amount
                - currencyCode
              type: object
              properties:
                amount:
                  type: integer
                  description: >-
                    Contains the prepaid load amount to the prepaid card,
                    expressed in the currency specified in prepaidBalanceData
                    currency code field. 


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (Mandatory only for Top Up Transactions)


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to SMS POS Visa & Visa
                    Electron

                    Technical Specifications - Appendix E Country and Currency
                    codes for P2C.


                    Example: Currency exponent for USD is 2. If the transaction
                    amount is $100.99, then this field should populate “10099”.
                    If the transaction amount is $100.00 then this field should
                    populate “10000”. Currency exponent for JPY is 0. If the
                    transaction amount is JPY 10,000, then this field should
                    populate “10000”.
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  type: string
                  description: >-
                    The 3-digit ISO-4217 code in this field reflects the
                    currency associated with the prepaid balance data amount 

                    Format: 3-digit ISO-4217 (numeric) currency code


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Conditional (Mandatory only for Top Up Transactions)
        originatorDetail:
          required:
            - bankId
            - originatorId
          type: object
          properties:
            bankId:
              type: integer
              description: >-
                Originating bank ID is the Bank Identification Number (BIN)
                assigned to each Visa Member upon enrollment. If the Originator
                is not a Financial Institution (FI) and will be processing using
                a sponsor FI (i.e. Acquirer ) , this is the BIN of the
                sponsoring FI (Acquirer). It uniquely identifies the Bank/FI
                that is sponsoring the Originating Entity in Visa’s core system.


                Note: This is also referred to as the “Acquiring BIN” by Visa


                ISO20022 field name: Debtor Agent FI Identification
            originatorId:
              type: integer
              description: >-
                An alphanumeric field that uniquely identifies the Originating
                Entity for Push to Account transactions. The Originating Entity
                should populate Card Acceptor Terminal ID (CAID) for Push to
                Card transactions.


                ISO20022 field name: Debtor - Originating Entity Identification

                P2A: Mandatory

                P2W: Mandatory

                P2C: N/A
            merchantVerificationValue:
              type: integer
              description: >-
                Conditional The concatenated Merchant Verification Value of Visa
                assigned and Acquirer assigned value is returned.
                 Note: This field is present if the MVV value was included on the Send Payout request.

                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
        transactionDetail:
          required:
            - payoutId
            - responseCode
            - retrievalReferenceNumber
            - systemTraceAuditNumber
            - transactionAmount
            - transactionCurrencyCode
            - transactionIdentifier
            - transmissionDateTime
          type: object
          properties:
            authId:
              type: integer
              description: >-
                This is a unique authorization code for an approved transaction
                from Issuer.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Optional
            payoutId:
              maxLength: 50
              minLength: 1
              type: string
              description: >-
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for P2A ,P2W and
                Reversals, Chargeback, Response, Advice for P2C.


                ISO20022 field name: Transaction Information And Status -
                Additional Remittance Information
            networkId:
              maxLength: 4
              minLength: 1
              type: string
              description: >-
                This contains a code that identifies the network on which the
                transaction was processed.
                 Note: This field is returned only if it is anything other than networkId value 2. Supported only in US for domestic transactions

                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Conditional
            tokenData:
              type: object
              properties:
                accountRange:
                  type: integer
                  description: >-
                    Contains the first 9 digits of the cardholder PAN..

                    Note: Acquirers must not forward this value to their
                    merchants after receiving it in the response message from
                    Visa.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                accountSuffix:
                  maxLength: 4
                  minLength: 4
                  type: string
                  description: >-
                    Last four digits of the card number/PAN 

                    Note: This is only relevant for push to card payouts, where
                    a card network token was sent by the Originating Entity in
                    the payout request (in the
                    recipientDetail.card.accountNumber field).


                    ISO20022 field name: n/a

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                additionalTokenRespInfo:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This field when present in the API response identifies if
                    the transaction is eligible for token services. Valid token
                    service values are: 1 (Token program). <br><br> This field
                    will not be present in the response if the transaction is
                    ineligible for token services. <br><br> ISO20022 field name:
                    N/A P2A: N/A P2C: Optional
            endToEndId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity's customer to
                uniquely identify the transaction


                ISO20022 field name: Transaction Information And Status -
                Original EndtoEnd Identification


                Conditional (Field present when transactionDetail.endToEndId is
                provided in the original Send Payout request)

                P2A: Optional

                P2W: Optional

                P2C: N/A
            settlement:
              type: object
              properties:
                date:
                  maxLength: 10
                  minLength: 10
                  type: string
                  description: >-
                    This is date when the transaction is settled between Visa
                    and the Acquirer 


                    ISO20022 field name: Transaction Information And Status -
                    Interbank Settlement Date

                    P2A: Conditional (Mandatory when the transaction is settled)

                    P2W: N/A

                    P2C: Conditional (Mandatory when the transaction is settled)
                  format: YYYY-MM-DD
                amount:
                  type: integer
                  description: >-
                    Contains the transaction amount converted to settlement
                    currency, expressed in the currency specified in
                    settlementCurrencyCode field. 


                    ISO20022 field name: Transaction Information And Status -
                    Interbank Settlement Amount

                    P2A: Conditional (Mandatory when the transaction is settled)

                    P2W: N/A

                    P2C: N/A


                    Note: The number of decimal places assumed for this field
                    depends on the currency. Refer to the Payouts Endpoint Guide
                    for P2A on country-specific currency minor units. Refer to
                    SMS POS Visa & Visa Electron

                    Technical Specifications - Appendix E Country and Currency
                    codes for P2A.


                    Example: Currency exponent for USD is 2. If the amount is
                    $100.99, then this field should populate “10099”. If the
                    amount is $100.00 then this field should populate “10000”.
                    Currency exponent for JPY is 0. If the amount is JPY 10,000,
                    then this field should populate “10000”.
                serviceFlag:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Indicates the settlement service applicable for the
                    transaction.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                currencyCode:
                  maxLength: 3
                  minLength: 3
                  type: string
                  description: >-
                    The 3-digit ISO-4217 code in this field reflects the
                    currency associated with the settlement amount 

                    Format: 3-digit ISO-4217 (numeric) currency code


                    ISO20022 field name: Transaction Information And Status -
                    Interbank Settlement Amount Currency Code

                    P2A: Conditional (Mandatory when the transaction is settled)

                    P2W: N/A

                    P2C: N/A
                rateSourceId:
                  maxLength: 5
                  type: string
                  description: >-
                    Contains the source ID of the foreign exchange rate applied
                    to the derive the settlement amount in case of cross
                    currency payment.


                    ISO20022 field name: Transaction Information And Status -
                    Remittance Information Settlement Conversion or FX Rate
                    Source ID

                    P2A: Conditional (Mandatory when the transaction is settled
                    via VisaNet)

                    P2W: N/A

                    P2C: Conditional (Mandatory when the transaction is settled)
                conversionRate:
                  maxLength: 14
                  minLength: 1
                  pattern: \d{1,7}(\.\d{1,12})?
                  type: string
                  description: >-
                    Contains the foreign exchange rate applied to the derive the
                    settlement amount in case of cross currency payment.


                    ISO20022 field name: Transaction Information And Status -
                    Remittance Information Settlement Conversion or FX Rate

                    P2A: Conditional (Mandatory when the transaction is settled
                    via VisaNet)

                    P2W: N/A

                    P2C: N/A
                responsibleParty:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This flag is set to 1 to indicate that VisaNet has
                    settlement responsibility for this transaction. This flag
                    does not indicate the transaction will be settled.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                grossInterchangeValue:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This flag is set to 1 to indicate that this transaction has
                    financial impact and that the value of the transaction (if
                    approved) will be included in the settlement accumulation
                    during processing of this request-response or advice-advice
                    response message pair.

                    The flag is set to 0 if a transaction is ineligible for
                    settlement processing.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                priorGrossInterchangeValue:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    This flag is set to 1 indicating this transaction has
                    financial impact, but VisaNet has updated its reconciliation
                    totals for the value of this transaction.

                    This flag is set to 0 if the transaction is ineligible for
                    settlement processing.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
            payoutSpeed:
              type: string
              description: >-
                Originating Entity to indicate the desired payout speed for the
                payment. Currently supported value is "STANDARD". This field
                will be enhanced in future to include additional speed options


                ISO20022 field name: Instruction Priority

                P2A: Conditional (Mandatory for an approved transaction and send
                in the request)

                P2W: Conditional (Mandatory for an approved transaction and send
                in the request)

                P2C: N/A
              enum:
                - STANDARD
                - PREMIUM
            responseCode:
              maxLength: 2
              minLength: 2
              type: string
              description: >-
                Response code that provides the result of the payout request.
                List of valid response codes
            responseSource:
              maxLength: 1
              minLength: 1
              type: string
              description: >-
                Contains the response source/reason code that identifies the
                source of the responseCode i.e. whether it is from Visa or from
                the Issuer.


                ISO20022 field name: N/A

                P2A: N/A

                P2W: N/A

                P2C: Mandatory
            nationalNetData:
              type: object
              properties:
                reimbursementFee:
                  type: number
                  description: >-
                    Applies to Argentina domestic data only and indicates the
                    installment payment details for Argentina National Net
                    Settlement Service.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                  format: double
                memberSuppliedIRF:
                  maxLength: 13
                  minLength: 1
                  type: string
                  description: >-
                    This field contains the client-calculated interchange
                    reimbursement fee (IRF) for countries using this capability.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
                reimbursementAttribute:
                  maxLength: 1
                  minLength: 1
                  type: string
                  description: >-
                    Contains a code that identifies the applicable interchange
                    reimbursement fee for a transaction. Its an optional value
                    and if not supplied by Originating entities, Visa applies
                    default value 0 and passes onwards to Issuers/Receiving
                    entities.


                    ISO20022 field name: N/A

                    P2A: N/A

                    P2W: N/A

                    P2C: Optional
            clientReferenceId:
              maxLength: 35
              minLength: 1
              type: string
              description: >-
                Identifier assigned by the Originating Entity to uniquely
                identify the transaction


                ISO20022 field name: Transaction Information And Status -
                Original Transaction Identification


                Conditional (Field present when
                transactionDetail.clientReferenceId is provided in the original
                Send Payout request)

                P2A: Optional

                P2W: Optional

                P2C: N/A
            destinationAmount:
              type: integer
              description: >-
                The destination amount that will be deposited to the recipient
                account, expressed in the destination currency code provided in
                the original request. If the Originating Entity sends a payout
                in a currency that is not the same as the destination currency
                then Visa will perform FX conversion and calculate the amount to
                be deposited to the recipient bank account, and provide this
                information back to the Originating Entity. <br>Note: The number
                of decimal places assumed for this field depends on the
                currency. Refer to the Payouts Endpoint Guide for P2A on
                country-specific currency minor units. Refer to SMS POS Visa &
                Visa Electron Technical Specifications - Appendix E Country and
                Currency codes for P2C.<br>Example: Currency exponent for USD is
                2. If the amount is $100.99, then this field should populate
                “10099”. If the amount is $100.00 then this field should
                populate “10000”. Currency exponent for JPY is 0. If the amount
                is JPY 10,000, then this field should populate “10000”.

                P2C: N/A
              x-variant: '| positive'
            transactionAmount:
              type: integer
              description: >-
                The transaction amount to be paid out to the recipient bank
                account or card. Expressed in the currency specified in
                transaction currency code.<br>Note:The number of decimal places
                assumed for this field depends on the currency. Refer to the
                Payouts Endpoint Guide for P2A on country-specific currency
                minor units. Refer to SMS POS Visa & Visa Electron Technical
                Specifications - Appendix E Country and Currency codes for P2C.
                <br>Example: Currency exponent for USD is 2. If the amount is
                $100.99, then this field should populate “10099”. If the amount
                is $100.00 then this field should populate “10000”. Currency
                exponent for JPY is 0. If the amount is JPY 10,000, then this
                field should populate “10000”.
              x-variant: '| positive'
            expectedPostingDate:
              type: string
              description: >-
                This is an estimated date by which the payout should be posted
                to the recipient’s account. This date should be communicated to
                the sender and recipient (if possible) to ensure that they know
                when to expect the funds


                ISO20022 field name: Transaction Information And Status -
                Effective Interbank Settlement Date

                P2A: Conditional (Mandatory for an approved transaction)

                P2W: Conditional (Mandatory for an approved transaction)

                P2C: N/A
              format: YYYY-MM-DD
            feeProgramIndicator:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                Originating Entity to indicate the fee program indicator, which
                is used to assess the Interchange Fee Amount in certain
                scenarios


                ISO20022 field name: n/a

                P2A: N/A

                P2W: N/A

                P2C: Optional 
            originalResponseCode:
              maxLength: 2
              minLength: 2
              type: string
              description: >-
                Response code that provides the result of original payout
                request when current request is identified as duplicate of
                original (in which case the responseCode will be 94)
            transmissionDateTime:
              pattern: \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d\.000Z
              type: string
              description: The time the request was received by Visa
            serviceProcessingType:
              required:
                - requestType
              type: object
              properties:
                requestType:
                  maxLength: 2
                  minLength: 2
                  type: string
                  description: 'Reserved for future use.</br></br>P2A: N/A P2C: Optional'
              description: >-
                This field will contain values that identifies the type of
                service assigned for the transaction.
            transactionIdentifier:
              maxLength: 15
              type: string
              description: >-
                Visa-generated Transaction Identifier that is unique for each
                original authorization and financial request. The identifier
                links original messages to subsequent messages, such as those
                for exception item processing and clearing records. It can also
                be used to match the payouts to settlement reports.
            systemTraceAuditNumber:
              maxLength: 6
              minLength: 6
              type: string
              description: >-
                This field contains a number assigned by the Originating Entity
                that uniquely identifies a transaction and all message types.
                The trace number is one of the key data elements used to match a
                response to its request or to match a message to others for a
                given transaction set
            destinationCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated with the destination amount\n\nFormat: 3-digit
                ISO-4217 (numeric) currency code\n\nISO20022 field name: 
                Transaction Information And Status - Remitted Amount Currency
                Code

                P2C: N/A
            transactionCurrencyCode:
              maxLength: 3
              minLength: 3
              type: string
              description: >-
                The 3-digit ISO-4217 code in this field reflects the currency
                associated to the transaction amount <br>Format: 3-digit
                ISO-4217 (numeric) currency code
            retrievalReferenceNumber:
              maxLength: 12
              minLength: 12
              pattern: ^\d{12}$
              type: string
              description: >-
                This is a unique identifier generated by the Originating Entity
                for a transaction and its one of the key fields for matching a
                transaction with the subsequent messages with in the transaction
                set example Notification, Returns, Cancel, Exception management
                via VD Portal for P2A and Reversals, Chargeback, Response,
                Advice for P2C.


                The format is recommended to be ydddhhnnnnnn


                yddd - The first four digits must be a valid Julian date format,
                where the first digit = 0-9 (last digit of current year) and the
                next three digits = 001-366 (number of the day in the year).

                hh - can be the two digit hour in a 24 hour clock (00-23) during
                which the transaction is performed.

                nnnnnn - can be the systemsTraceAuditNumber or any 6 digit
                number


                ISO20022 field name: Transaction Information And Status -
                Original Instruction Identification
            destinationConversionRate:
              maxLength: 14
              type: string
              description: >-
                This field contains the exchange rate applied to convert
                transactionAmount to destinationAmount. 

                P2C: N/A
              format: \d{1,7}(\.\d{1,12})?
    SenderIdentificationList:
      type: array
      description: Identification list of sender
      items:
        type: object
        properties:
          idType:
            description: >
              Sender identification type (issued by a government or similar
              authority) needs to be provided by Originating Entity along with
              the payment in certain markets. 


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)


              Valid values : 

              * P- Passport 

              * D-Driving License

              * N-National Id

              * T-Tax Id

              * L-Legal Entity Registration Number

              * F-Foreign Id


              ISO20022 field name: Ultimate Debtor Identification Code
            allOf:
              - $ref: '#/components/schemas/IdType'
          idNumber:
            description: >
              Sender identification number (issued by a government or similar
              authority) needs to be provided by Originating Entity along with
              the payment in certain markets. 


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)


              ISO20022 field name: Ultimate Debtor Identification
            allOf:
              - $ref: '#/components/schemas/IdNumber'
          idIssueCountry:
            description: >
              Sender identification issuing country needs to be provided by
              Originating Entity along with the payment in certain markets. 


              Format: 3-character ISO (Alpha-3) country code


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)


              ISO20022 field name: Ultimate Debtor Identification Issuer Country
            example: USD
            allOf:
              - $ref: '#/components/schemas/AlphaCountryCode'
    Amount:
      minimum: 0
      exclusiveMinimum: true
      type: number
      format: double
      example: 12.34
    PayoutAccountRequest-1:
      required:
        - payoutMethod
        - recipientDetail
        - senderDetail
      type: object
      properties:
        payoutMethod:
          description: >
            Originating Entity must indicate the payout method i.e. To Account
            or Wallet


            Valid values:

            “B” – Send to Bank account
          allOf:
            - $ref: '#/components/schemas/PayoutMethod-1'
        senderDetail:
          properties:
            contactEmail:
              description: |
                Sender email address

                ISO20022 field name: Ultimate Debtor Contact Email Address
              allOf:
                - $ref: '#/components/schemas/ContactEmail'
            contactNumber:
              description: >
                Sender contact number

                Format: Symbol + followed by digits, no other symbols, e.g. like
                +447809713678 (note, refer ISO spec E.164)

                ISO20022 field name: Ultimate Debtor Contact Phone Number
              allOf:
                - $ref: '#/components/schemas/ContactNumber-1'
            additionalData:
              $ref: '#/components/schemas/SenderAdditionalData'
            contactNumberType:
              type: string
              enum:
                - MOBILE
                - WORK
                - HOME
            identificationList:
              $ref: '#/components/schemas/SenderIdentificationList'
            senderAccountNumber:
              $ref: '#/components/schemas/SenderAccountNumber-1'
            senderReferenceNumber:
              $ref: '#/components/schemas/SenderReferenceNumber'
          allOf:
            - $ref: '#/components/schemas/SenderTransactorDetail-1'
        recipientDetail:
          required:
            - bank
          properties:
            bank:
              $ref: '#/components/schemas/Bank-1'
            contactEmail:
              description: |
                Recipient email address

                ISO20022 field name: Ultimate Creditor Contact Email Address
              allOf:
                - $ref: '#/components/schemas/ContactEmail'
            contactNumber:
              description: >
                Recipient contact number

                Format: Symbol + followed by digits, no other symbols, e.g. like
                +447809713678 (note, refer ISO spec E.164)

                ISO20022 field name: Ultimate Creditor Contact Phone Number
              allOf:
                - $ref: '#/components/schemas/ContactNumber-1'
            additionalData:
              $ref: '#/components/schemas/RecipientAdditionalData'
            contactNumberType:
              type: string
              enum:
                - MOBILE
                - WORK
                - HOME
            identificationList:
              properties:
                idType:
                  description: >
                    Recipient identification type (issued by a government or
                    similar authority) needs to be provided by Originating
                    Entity along with the payment in certain markets. 


                    Valid values : 

                    * P- Passport 

                    * D-Driving License 

                    * N-National Id 

                    * T-Tax Id 

                    * L-Legal Entity Registration Number 

                    * F-Foreign Id


                    Conditional (Refer to Payouts Endpoint Guide on
                    country-specific required fields and lengths)


                    ISO20022 field name: Creditor Identification Code
              allOf:
                - $ref: '#/components/schemas/RecipientIdentificationList'
          allOf:
            - $ref: '#/components/schemas/RecipientTransactorDetail-1'
    Type:
      type: string
      description: |
        Identifies the type of sender or recipient - Individual or Company 
        * I - Individual
        * C - Company
      example: I
      enum:
        - I
        - C
    ValidatePayoutRequest:
      type: object
      oneOf:
        - $ref: '#/components/schemas/ValidatePayoutAccountRequest'
        - $ref: '#/components/schemas/ValidatePayoutWalletRequest'
    QuoteId-1:
      maximum: 9999999999999
      minimum: 0
      type: integer
      description: >
        This is a unique FX quote ID generated by Visa for a payout currency
        pair.         
      format: int64
      example: 987654321
    InitiatingPartyId-1:
      type: integer
      description: >
        Identifier assigned by Visa to uniquely identify the Originating Entity
        who initiates the transaction


        ISO20022 field name: <InitgPtyId> - InitiatingPartyIdentification, new
        identification of the initiating party. Visa uses integer instead of
        string(1-35) for uniformed value generation and presentation.
      example: 100111
    IdentityField:
      title: IdentityField
      required:
        - description
        - elementName
        - inputType
        - locale
        - mandatory
      type: object
      properties:
        locale:
          type: string
          description: The localization setting of this particular record.
        maxSize:
          type: integer
          description: Suggested client side syntactic validation rule.
          format: int32
        subTitle:
          type: string
          description: If present contains a sub-label to be displayed with the field.
        tabOrder:
          type: integer
          description: Indicates the ordering of this field in the UI.
          format: int32
        inputType:
          $ref: '#/components/schemas/IdentityFieldInput'
        listItems:
          minItems: 1
          type: array
          description: >-
            The identityListItems contain listItem sub-elements. The listItem
            sub-elements would normally be present where the inputType attribute
            is 'list'.
          items:
            $ref: '#/components/schemas/IdentityListItem'
        mandatory:
          type: boolean
          description: Indicates whether the field is mandatory.
        separator:
          type: string
          description: >-
            The separator to display following (to the right hand side) this
            field, usually '-' or '/'.
        description:
          type: string
          description: Suggested roll-over or help text description to assist users.
        displaySize:
          type: integer
          description: A suggested field size to display.
          format: int32
        elementName:
          type: string
          description: The name of the element.
        valueRegexp:
          type: string
          description: The regexp for the value of this field.
      description: >-
        Each IdentityField would normally be displayed in the UI from left to
        right based on the tabOrder attribute. The IdentityField element
        contains the attributes described below:-
    S2AMetaData-1:
      required:
        - recipientDetail
        - transactionDetail
      type: object
      properties:
        recipientDetail:
          allOf:
            - $ref: '#/components/schemas/RecipientDetailMetadata-1'
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/TransactionDetailMetadata'
    S2AMetaData:
      required:
        - recipientDetail
        - transactionDetail
      type: object
      properties:
        recipientDetail:
          allOf:
            - $ref: '#/components/schemas/RecipientDetailMetadata'
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/TransactionDetailMetadata'
    PayoutIdentifier:
      oneOf:
        - $ref: '#/components/schemas/ClientReferenceId'
        - $ref: '#/components/schemas/PayoutId'
    ErrorResponseWithKey:
      type: object
      properties:
        errorResponse:
          allOf:
            - $ref: '#/components/schemas/ErrorResponse'
    QueryPayoutIdResponse503:
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            status:
              type: integer
              description: 3 digit http status code
            message:
              type: string
              description: The long description of the error.
    BalanceNotification-1:
      required:
        - accountId
        - balance
        - eventType
        - initiatingPartyId
      type: object
      properties:
        balance:
          type: array
          description: array of balances for all currencies of the 'accountId'
          items:
            allOf:
              - $ref: '#/components/schemas/AccountBalance'
              - type: object
                properties:
                  operator:
                    type: string
                    description: >-
                      This field only applies to 'THRESHOLD' and
                      'LIQUIDITY_FAILURE' eventType
                    enum:
                      - LESS_THAN
                  threshold:
                    $ref: '#/components/schemas/AmountWithZero-1'
                  balanceTimestamp:
                    allOf:
                      - $ref: '#/components/schemas/TimestampType'
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
        eventType:
          type: string
          description: |
            Indicates why the balance notification is triggered

            Possible values:
            * `THRESHOLD` - When balance threshold is exceeded
            * `LIQUIDITY_FAILURE` - when balance is negative
            * `PERIODIC` - Regular balance snapshot at certain day/time
          enum:
            - THRESHOLD
            - LIQUIDITY_FAILURE
            - PERIODIC
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId'
    QueryPayoutIdResponse500:
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            status:
              type: integer
              description: 3 digit http status code
            message:
              type: string
              description: The long description of the error.
    FundingStatus:
      type: string
      description: >
        Indicates funding status of the payout transaction. This field is
        applicable for account payments only.
      enum:
        - FUNDED
        - NOT_FUNDED
    IdentityGroup:
      title: IdentityGroup
      required:
        - groupLabel
        - groupName
        - identityFields
        - mandatory
      type: object
      properties:
        groupName:
          type: string
          description: >
            The name of the metadata element/enum.

            This generic Identity Group object can represent either 'Beneficiary
            Identity Field Group object' or 'Bank Account Registration Field
            Group object' . 

            Enum value signifies the particular metadata element. 


            For example : 
             a) if enum is "address", this can contain array of 'IdentityField' object where each object can represent elements like addressLine1, addressLine2, city, countryCode, postalCode etc    

             b) enum can be "identificationList", which contains array of "IdentityField' objects, one of the IdentityField object can have elementName="idType" and inputType="list", in this scenario array of IdentityListItem will have 
             [
               {
                 "label": "Passport",
                 "value": "Passport"
               },
               {
                 "label": "National ID Card",
                 "value": "National ID Card"
               },
               {
                 "label": "Driving License",
                 "value": "Driving License"
               }
             ], 
             second 'IdentityField' Object -> elementName as "identificationNumber" with inputType="text" 
             third 'IdentityField' Object -> elementName as "identificationCountry" with inputType="text" 
             fourth 'IdentityField' Object -> elementName as "validFromDate" with inputType="text"
             fifth  'IdentityField' Object -> elementName as "validToDate" with inputType="text" and so on.

             c) If enum is "additionalData",this will have array of two 'IdentityField' objects, one representing 'additionalDataKey' and other one 'additionalDataValue'.

             d) If enum is "name", "middleName" may be required for some countries (e.g. Africa). This can be accommodated by appending a space and then middleName to <firstName> 
          enum:
            - bank
            - address
            - name
            - additionalData
            - identificationList
            - legalEntityIdentity
            - contactInfo
            - birthInfo
        mandatory:
          type: boolean
          description: Indicates if the identity group is mandatory.
        groupLabel:
          type: string
          description: Displays a label for this group of identity fields.
        identityFields:
          type: array
          description: This type defines a list of recipient identity fields.
          items:
            $ref: '#/components/schemas/IdentityField'
      description: >-
        This type defines a recipient identity data group. Each group is
        normally represented as a section of fields on the UI. 'groupLabel' is
        the UI test to display as a name for this section. 'mandatory' indicates
        whether all section is mandatory. 'elementName' is the name of the
        element in the request for the corresponding section.
    PostingDate-2:
      required:
        - cutoffDateTime
        - expectedPostingDate
      type: object
      properties:
        cutoffDateTime:
          $ref: '#/components/schemas/TimestampType'
        expectedPostingDate:
          allOf:
            - $ref: '#/components/schemas/ExpectedPostingDate-2'
    PostingDate-1:
      required:
        - cutoffDateTime
        - expectedPostingDate
      type: object
      properties:
        cutoffDateTime:
          $ref: '#/components/schemas/TimestampType'
        expectedPostingDate:
          allOf:
            - $ref: '#/components/schemas/ExpectedPostingDate-1'
    ValidatePayoutRequest-1:
      type: object
      oneOf:
        - $ref: '#/components/schemas/ValidatePayoutAccountRequest-1'
        - $ref: '#/components/schemas/ValidatePayoutWalletRequest-1'
    ValidatePayoutAccountRequest-1:
      required:
        - transactionDetail
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/ValidateAccountTransactionDetail-1'
      allOf:
        - $ref: '#/components/schemas/PayoutAccountRequest'
    ValidatePayoutAccountRequest-2:
      required:
        - transactionDetail
      properties:
        transactionDetail:
          allOf:
            - $ref: '#/components/schemas/AccountTransactionDetail-2'
      allOf:
        - $ref: '#/components/schemas/PayoutAccountRequest-1'
    ValidatePayoutRequest-4:
      type: object
      oneOf:
        - $ref: '#/components/schemas/ValidatePayoutAccountRequest-2'
        - $ref: '#/components/schemas/ValidatePayoutWalletRequest-2'
    SenderIndividual:
      required:
        - type
      properties:
        name:
          description: >-
            Full name of sender, conditionally required when firstName and
            lastName are not provided.
          example: Joe Smith
          allOf:
            - $ref: '#/components/schemas/Name'
        type:
          description: |
            Identifies the type of sender - "I" for Individual 

            ISO20022 field name: Debtor Identification Type       
          allOf:
            - $ref: '#/components/schemas/Type'
        lastName:
          description: |
            Sender last name, conditionally required when name is not provided

            ISO20022 field name: Ultimate Debtor Last Name
          allOf:
            - $ref: '#/components/schemas/LastName'
        firstName:
          description: |
            Sender first name, conditionally required when name is not provided

            ISO20022 field name: Ultimate Debtor First Name
          allOf:
            - $ref: '#/components/schemas/FirstName'
        cityOfBirth:
          description: |
            Sender city of birth

            ISO20022 field name: Ultimate Debtor City of Birth
          allOf:
            - $ref: '#/components/schemas/CityOfBirth'
        dateOfBirth:
          description: >
            Sender date of birth (Format: "YYYY-MM-DD", e.g. "1980-02-01")


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            ISO20022 field name: Ultimate Debtor Birth Date 
          allOf:
            - $ref: '#/components/schemas/DateOfBirth'
        countryOfBirth:
          description: >
            Sender country of birth


            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)


            Format: 3-character ISO-3166 (Alpha-3) country code


            ISO20022 field name: Ultimate Debtor Country of Birth
          allOf:
            - $ref: '#/components/schemas/AlphaCountryCode'
    BeneficiaryRelationship-1:
      maxLength: 30
      minLength: 1
      type: string
      description: Sender's relationship with beneficiary
    ErrorResponse-3:
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            status:
              type: integer
              description: 3 digit http status code
              example: 400
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
            message:
              type: string
              description: The long description of the error.
    ErrorResponse-2:
      type: object
      properties:
        errorResponse:
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            status:
              maxLength: 3
              minLength: 3
              type: integer
              description: 3 digit HTTP status code
              example: 400
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
            message:
              type: string
              description: The long description of the error
    ErrorResponse-1:
      type: object
      properties:
        reason:
          type: string
          description: The short description of the error.
        status:
          maximum: 999
          minimum: 100
          type: integer
          description: 3 digit HTTP status code
          example: 400
        details:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: A short code indicating the specific error that occurred.
              message:
                type: string
                description: The long description of the specific error that occurred.
              location:
                type: string
                description: >-
                  The place in the incoming message that the particular error
                  occurred.
        message:
          type: string
          description: The long description of the error
    LedgerNotification:
      required:
        - accountId
        - amount
        - creditDebitIndicator
        - currencyCode
        - entryId
        - entryType
        - initiatingPartyId
      type: object
      properties:
        amount:
          description: >
            Funding amount that is credited by the Originating Entity. Expressed
            in the currency provided in field currencyCode


            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 


            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.


            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
        entryId:
          maxLength: 35
          minLength: 1
          type: string
          description: >-
            The entry Id is used to uniquely identify a ledger notification for
            a single account and currency
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
        entryType:
          type: string
          description: |
            Entry type helps to classify entries in ledger. 

            Possible values:
            * 'FUNDING'
            * 'REPATRIATION'
            * 'JOURNAL'
            * 'MANAGED_LIQUIDITY'
          enum:
            - FUNDING
            - REPATRIATION
            - JOURNAL
            - MANAGED_LIQUIDITY
        narrative:
          maxLength: 2000
          minLength: 1
          type: string
          description: >-
            An optional description for the reason why a ledger notification was
            performed.
        valueDate:
          description: The date at which the funds are available to fund transactions.
          allOf:
            - $ref: '#/components/schemas/Date'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        bookingDate:
          description: THe date at which funds are received into the ledger.
          allOf:
            - $ref: '#/components/schemas/Date'
        currencyCode:
          description: >
            The 3-character ISO-4217 code in this field reflects the currency
            associated to the destination amount 


            Format: 3-character ISO-4217 (Alpha-3) currency code
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        additionalInfo1:
          maxLength: 140
          minLength: 1
          type: string
          description: >
            Additional information that may be in the original funding to the
            bank, and passed along in this field.
        additionalInfo2:
          maxLength: 140
          minLength: 1
          type: string
          description: >
            Additional information that may be in the original funding to the
            bank, and passed along in this field.
        additionalInfo3:
          maxLength: 140
          minLength: 1
          type: string
          description: >
            Additional information that may be in the original funding to the
            bank, and passed along in this field.
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId'
        creditDebitIndicator:
          type: string
          description: |
            Indicates that money credited to or debited from the account

            Possible values:
            * `CREDIT` - Indicates that the client has funded their account.
            * `DEBIT` - Indicates that money was removed from a client account.
          enum:
            - CREDIT
            - DEBIT
      description: >-
        Used to indicate to originators that various ledger entries has been
        received by Visa.
    RecipientIdentificationList:
      type: array
      description: Identification list of recipient
      items:
        type: object
        properties:
          idType:
            description: >
              Recipient identification type (issued by a government or similar
              authority) needs to be provided by Originating Entity along with
              the payment in certain markets. 


              Valid values : 

              * P- Passport 

              * D-Driving License 

              * N-National Id 

              * T-Tax Id 

              * L-Legal Entity Registration Number 

              * F-Foreign Id


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)


              ISO20022 field name: Creditor Identification Code
            allOf:
              - $ref: '#/components/schemas/IdType'
          idNumber:
            description: >
              Recipient identification number (issued by a government or similar
              authority) needs to be provided by Originating Entity along with
              the payment in certain markets. 


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)


              ISO20022 field name: Creditor Identification
            allOf:
              - $ref: '#/components/schemas/IdNumber'
          idIssueCountry:
            description: >
              Recipient identification issuing country needs to be provided by
              Originating Entity along with the payment in certain markets. 


              Format: 3-character ISO (Alpha-3) country code


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)


              ISO20022 field name: Creditor Identification Issuer Country
            example: US
            allOf:
              - $ref: '#/components/schemas/AlphaCountryCode'
    AccountQueryPendingResponse-1:
      $ref: '#/components/schemas/202AccountPayoutCreatedResponse-1'
    City:
      maxLength: 35
      minLength: 1
      type: string
      description: When present, this field contains individual recipient's city
      example: Santa Fe
    Province:
      maxLength: 25
      minLength: 1
      type: string
      description: >-
        When present, this field contains individual recipient's address
        subdivision Major code, state or province
      example: New Mexico
    PayoutNotificationProcessRequest:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod'
        transactionDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - notificationDateTime
            - payoutId
            - status
          type: object
          properties:
            status:
              type: string
              description: >
                Status of the transaction

                - PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received. This event can be repeated when
                'fundingStatus' or 'expectedPostingDate' fields change value

                - AWAITING_INFORMATION: PSP is awaiting more information from
                Originating Entity before transaction can be processed

                - PAYMENT_SENT: The payout has been submitted to the Network
                partner by PSP. This event can be repeated 'fundingStatus' or
                'expectedPostingDate' fields change value

                - PAYMENT_DELIVERED: The payout has been posted to the
                recipient's account. This status is only applicable for Wallet
                Payments

                ISO20022 field name: Transaction Information And Status -
                Transaction Status
              example: PAYMENT_SENT
              allOf:
                - $ref: '#/components/schemas/PayoutNotificationRequestStatus'
              enum:
                - PAYMENT_RECEIVED
                - AWAITING_INFORMATION
                - PAYMENT_SENT
                - PAYMENT_DELIVERED
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for Payout


                ISO20022 field name: Transaction Information And Status -
                Original Additional Remittance Information
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            fundingStatus:
              allOf:
                - $ref: '#/components/schemas/FundingStatus'
            serviceDetail:
              $ref: '#/components/schemas/ServiceDetail'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            expectedPostingDate:
              allOf:
                - $ref: '#/components/schemas/ExpectedPostingDate'
            notificationDateTime:
              $ref: '#/components/schemas/TimestampType'
    AdditionalDataName:
      maxLength: 35
      minLength: 1
      type: string
      description: Name of the field.
    PurposeOfPaymentCodes:
      title: PurposeOfPaymentCodes
      required:
        - code
        - description
      type: object
      properties:
        code:
          $ref: '#/components/schemas/PurposeOfPayment'
        description:
          maxLength: 140
          minLength: 1
          type: string
          description: Description of purpose of payment code.
          example: Salary/payroll
        senderCompany:
          type: boolean
          description: Is the purpose of payment code valid if the sender is a company.
        recipientCompany:
          type: boolean
          description: Is the purpose of payment code valid if the recipient is a company.
        senderIndividual:
          type: boolean
          description: Is the purpose of payment code valid if the sender is an individual.
        recipientIndividual:
          type: boolean
          description: >-
            Is the purpose of payment code valid if the recipient is an
            individual.
    SenderAccountNumber-1:
      maxLength: 34
      minLength: 1
      type: string
      description: >
        CONDITIONAL - This field is Mandatory if a senderReferenceNumber is not
        sent. 

        Note:

        Client should provide either a sender reference number or a sender
        account number but not both.

        Client should not send any PANs in this field for payout.         
      example: A42434234S324234
    PayoutNotificationFailedRequest:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod'
        transactionDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - notificationDateTime
            - status
          type: object
          properties:
            status:
              type: string
              description: >
                Status of the transaction

                - VALIDATION_FAILED: Payout request failed validation and will
                not be proccessed further (only receive in case of 202 response)

                ISO20022 field name: Transaction Information And Status -
                Transaction Status

                - ERROR: Payout is in error status after 24 hours of retry in
                202
              example: VALIDATION_FAILED
              allOf:
                - $ref: '#/components/schemas/PayoutNotificationRequestStatus'
              enum:
                - VALIDATION_FAILED
                - ERROR
            errorResponses:
              type: array
              items:
                $ref: '#/components/schemas/ErrorResponse'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            notificationDateTime:
              $ref: '#/components/schemas/TimestampType'
    PayoutMethod:
      type: string
      description: >
        Originating Entity must indicate the payout method i.e. Account or
        Wallet


        Valid values:

        - "B" Visa Direct Account

        - "W" Visa Direct Wallet
      enum:
        - B
        - W
    TransactionIdType:
      type: string
      description: |
        This field indicates the type of identifier
        - CLIENT_REFERENCE_ID is merchant's transaction reference ID
        - PAYOUT_ID is Visa's transaction reference ID 
      enum:
        - CLIENT_REFERENCE_ID
        - PAYOUT_ID
    ExpectedPostingDate:
      maxLength: 10
      minLength: 10
      description: >
        This is an estimated date by which the payout should be posted to the
        recipient’s account. This date should be communicated to the sender and
        recipient (if possible) to ensure that they know when to expect the
        funds


        It is optional field, if exists, indicates expected posting date change


        ISO20022 field name: Transaction Information And Status - Effective
        Interbank Settlement Date
      format: date
      example: '1980-02-01'
    QueryPendingCancelledResponse:
      type: object
      properties:
        transactionalDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - status
          properties:
            status:
              $ref: '#/components/schemas/PendingCancelledTransactionStatus'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
      description: >-
        Transaction is in pending or cancelled (cancelled during pending)
        status.
    SenderCompany:
      required:
        - name
        - type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        type:
          description: |
            Identifies the type of sender - "C" for Company 

            ISO20022 field name: Debtor Identification Type       
          allOf:
            - $ref: '#/components/schemas/Type'
    ReturnReasonDetails-1:
      required:
        - code
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ReturnReasonCode-1'
        description:
          $ref: '#/components/schemas/ReturnReasonCodeDescription'
    SourceOfFunds-1:
      type: string
      description: >
        Conditional Sender source of funds indicator i.e. the funding method
        used by the sender to fund the payout.Valid values are:


        01 = Visa credit


        02 = Visa debit


        03 = Visa prepaid


        04 = Cash


        05 = Deposit accounts other than those linked to a Visa card (includes
        checking/savings accounts and proprietary debit/ATMcards)


        06 = Credit accounts other than those linked to a Visa card (includes
        credit cards and proprietary credit lines)


        Note: For any Company to Company (C2C) or Company to Individual (C2I)
        use-case, this should be “05”, since the funds come from the sender’s
        bank account. This field is required for Money Transfers and Funds
        Disbursements.


        ISO20022 field name: Debtor Account Type Source of Funds
    QueryPayoutIdResponse404:
      required:
        - errorResponse
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            status:
              type: integer
              description: 3 digit http status code
            message:
              type: string
              description: The long description of the error.
    PayoutNotificationProcessRequest-2:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod-1'
        transactionDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - notificationDateTime
            - payoutId
            - status
          type: object
          properties:
            status:
              type: string
              description: >
                Status of the transaction


                Status definition (add a link to Status Transition diagram on
                VDP):

                - AWAITING_INFORMATION: PSP is awaiting more information from
                Originating Entity before transaction can be processed

                - PAYMENT_SENT: The payout has been submitted to the Network
                partner by PSP. This event can be repeated when
                "changePostingDate" is true

                - PAYMENT_DELIVERED: The payout has been posted to the
                recipient's account

                ISO20022 field name: Transaction Information And Status -
                Transaction Status
              example: PAYMENT_SENT
              allOf:
                - $ref: '#/components/schemas/PayoutNotificationRequestStatus'
              enum:
                - PAYMENT_RECEIVED
                - AWAITING_INFORMATION
                - PAYMENT_SENT
                - PAYMENT_DELIVERED
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for Payout


                ISO20022 field name: Transaction Information And Status -
                Original Additional Remittance Information
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            serviceDetail:
              $ref: '#/components/schemas/ServiceDetail'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId-1'
            expectedPostingDate:
              allOf:
                - $ref: '#/components/schemas/ExpectedPostingDate-2'
            notificationDateTime:
              $ref: '#/components/schemas/TimestampType'
    PostalCode:
      maxLength: 16
      minLength: 1
      type: string
      description: >-
        When present, this field contains individual recipient's address postal
        code.
      example: '94320'
    TransactionalAdditionalData:
      type: array
      description: >-
        Additional fields that are needed in order to complete the additional
        screening. The additional fields can be included as name value pairs
        (Field name, Field value)
      items:
        required:
          - name
          - value
        type: object
        properties:
          name:
            description: >
              Originating Entity to send additional transaction information
              needed in order to process the payment. The additional fields can
              be included as name value pairs (Field name, Field value). This
              field represents the name component of the name-value pair.


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)
            allOf:
              - $ref: '#/components/schemas/AdditionalDataName'
          value:
            description: >
              Originating Entity to send additional transaction information
              needed in order to process the payment. The additional fields can
              be included as name value pairs (Field name, Field value). This
              field represents the value  component of the name-value pair.


              Conditional (Refer to Payouts Endpoint Guide on country-specific
              required fields and lengths)
            allOf:
              - $ref: '#/components/schemas/AdditionalDataValue'
    PayoutNotificationProcessRequest-1:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod'
        transactionDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - notificationDateTime
            - payoutId
            - status
          type: object
          properties:
            status:
              type: string
              description: >
                Status of the transaction

                - PAYMENT_RECEIVED: Visa has acknowledged the payout instruction
                has been received. This event can be repeated when
                'fundingStatus' or 'expectedPostingDate' fields change value

                - AWAITING_INFORMATION: PSP is awaiting more information from
                Originating Entity before transaction can be processed

                - PAYMENT_SENT: The payout has been submitted to the Network
                partner by PSP. This event can be repeated 'fundingStatus' or
                'expectedPostingDate' fields change value

                - PAYMENT_DELIVERED: The payout has been posted to the
                recipient's account. This status is only applicable for Wallet
                Payments

                ISO20022 field name: Transaction Information And Status -
                Transaction Status
              example: PAYMENT_SENT
              allOf:
                - $ref: '#/components/schemas/PayoutNotificationRequestStatus'
              enum:
                - PAYMENT_RECEIVED
                - AWAITING_INFORMATION
                - PAYMENT_SENT
                - PAYMENT_DELIVERED
            payoutId:
              description: >
                This is a unique identifier generated by the Visa for a
                transaction and is key field used in the subsequent messages
                with in the transaction set example Notification, Returns,
                Cancel, Exception management via VD Portal for Payout


                ISO20022 field name: Transaction Information And Status -
                Original Additional Remittance Information
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            fundingStatus:
              allOf:
                - $ref: '#/components/schemas/FundingStatus'
            serviceDetail:
              $ref: '#/components/schemas/ServiceDetail'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            expectedPostingDate:
              allOf:
                - $ref: '#/components/schemas/ExpectedPostingDate-1'
            notificationDateTime:
              $ref: '#/components/schemas/TimestampType'
    QueryPayoutIdResponse400:
      required:
        - errorResponse
      type: object
      properties:
        errorResponse:
          required:
            - status
          type: object
          properties:
            reason:
              type: string
              description: The short description of the error.
            status:
              type: integer
              description: 3 digit http status code
            details:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                    description: A short code indicating the specific error that occurred.
                  message:
                    type: string
                    description: The long description of the specific error that occurred.
                  location:
                    type: string
                    description: >-
                      The place in the incoming message that the particular
                      error occurred.
            message:
              type: string
              description: The long description of the error.
    PayoutReturnRequest:
      required:
        - transactionDetail
      type: object
      properties:
        payoutMethod:
          $ref: '#/components/schemas/PayoutMethod'
        transactionDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - originalPayoutId
            - originalTransactionAmount
            - originalTransactionCurrencyCode
            - returnAmount
            - returnCurrencyCode
            - returnDateTime
            - returnPayoutId
            - returnReasonDetails
            - status
          type: object
          properties:
            status:
              $ref: '#/components/schemas/ReturnReasonCodeDetailsType'
            endToEndId:
              $ref: '#/components/schemas/EndToEndId'
            returnAmount:
              description: >
                The returned amount credited to Originating Entity as a result
                of the return Payout 


                Note: Transaction amount can have decimal point for currencies
                that allow it. Refer to the Payouts Endpoint Guide for Payout on
                country-specific currency minor units. 


                Example: Currency exponent for USD is 2, the amount is $100.99.
                Currency exponent for JPY is 0. If the amount is JPY 10,000,
                then this field should populate “10000”.
              allOf:
                - $ref: '#/components/schemas/Amount'
            returnDateTime:
              allOf:
                - $ref: '#/components/schemas/TimestampType'
            returnPayoutId:
              description: >
                This is the Visa-generated unique identifier of the returned
                payout.


                ISO20022 field name: Payment Return - Original Additional
                Remittance Information
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            originalPayoutId:
              description: >
                This is Visa-generated unique identifier of the original payout.


                ISO20022 field name: Payment Return - Original Additional
                Remittance Information
              allOf:
                - $ref: '#/components/schemas/PayoutId'
            clientReferenceId:
              $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
            returnCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated to the returnAmount. 


                Format: 3-character ISO-4217 (Alpha-3) currency code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
            returnSourceAmount:
              description: >
                The return amount as sent by Visa’s network partner, expressed
                in the currency specified in returnSourceCurrencyCode field.
              allOf:
                - $ref: '#/components/schemas/Amount'
            returnReasonDetails:
              $ref: '#/components/schemas/ReturnReasonDetails'
            returnConversionRate:
              description: >-
                This field contains the exchange rate applied to convert
                returnSourceCurrencyCode to returnCurrencyCode.
              allOf:
                - $ref: '#/components/schemas/ConversionRate'
            returnSourceCurrencyCode:
              description: >
                The 3-character ISO-4217 code in this field reflects the
                currency associated with the returnSourceAmount value. It will
                be same as the destination currency on the original payout
                transaction


                Format: 3-character ISO-4217 (Alpha-3) currency code
              allOf:
                - $ref: '#/components/schemas/AlphaCurrencyCode'
    InitiatingPartyId:
      type: integer
      description: >
        Identifier assigned by Visa to uniquely identify the Originating Entity
        who initiates the transaction


        ISO20022 field name: <InitgPtyId> - InitiatingPartyIdentification, new
        identification of the initiating party. Visa uses integer instead of
        string(1-35) for uniformed value generation and presentation.
      format: int64
      example: 100111
    AccountQueryErrorResponse:
      type: object
      properties:
        transactionalDetail:
          required:
            - status
          properties:
            status:
              type: string
              description: |
                - VALIDATION_FAILED: Payout request failed validation
                - ERROR: Payout is in error status
              enum:
                - VALIDATION_FAILED
                - ERROR
            errorDetails:
              type: array
              items:
                $ref: '#/components/schemas/ErrorResponse'
      description: Transaction is accepted and will be processed & notified status.
    QueryPendingCancelledResponse-1:
      type: object
      properties:
        transactionalDetail:
          required:
            - clientReferenceId
            - initiatingPartyId
            - status
          properties:
            status:
              $ref: '#/components/schemas/PendingCancelledTransactionStatus-1'
            clientReferenceId:
              allOf:
                - $ref: '#/components/schemas/ClientReferenceId'
            initiatingPartyId:
              allOf:
                - $ref: '#/components/schemas/InitiatingPartyId'
      description: >-
        Transaction is in pending or cancelled (cancelled during pending)
        status.
    InvalidPayoutResponse:
      required:
        - validationDetails
        - validationResultCode
      type: object
      properties:
        validationDetails:
          type: array
          description: comprehensive array of errors
          items:
            $ref: '#/components/schemas/ErrorResponse'
        validationResultCode:
          type: string
          description: |
            - INVALID - see validationDetails for validation errors
          enum:
            - INVALID
    AccountQueryResponse:
      oneOf:
        - $ref: '#/components/schemas/AccountQuerySuccessResponse'
        - $ref: '#/components/schemas/AccountQueryErrorResponse'
        - $ref: '#/components/schemas/QueryPendingCancelledResponse'
    ReturnReasonCodeDescription:
      maxLength: 105
      minLength: 1
      type: string
      description: >
        Indicates the PSP return description when the payout is returned. Refer
        to PSP Return Description (add link to VDP)


        ISO20022 field name: Payment Return - PSP Return Description
    Wallet:
      required:
        - accountIdentifier
        - accountIdentifierType
        - countryCode
        - currencyCode
        - operatorName
      type: object
      properties:
        countryCode:
          allOf:
            - $ref: '#/components/schemas/AlphaCountryCode'
        currencyCode:
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        operatorName:
          type: string
          description: >
            This identifies the operator that has issued the account to the
            recipient and is going to receive and post the funds to the
            recipient’s wallet.

            (Refer to Payouts Endpoint Guide on list of supported Wallet
            Operators).
        accountIdentifier:
          maxLength: 210
          minLength: 1
          type: string
          description: >
            The wallet recipient's actual account identifier associated with the
            wallet operator (e.g., wallet address - phone/email/username that
            identifies the account associated with the wallet operator)
        accountIdentifierType:
          type: string
          description: |
            The type of account identifier used by the recipient. 

            Supported values are PHONENUMBER, EMAIL and USERNAME.          
          example: PHONENUMBER
          enum:
            - PHONENUMBER
            - EMAIL
            - USERNAME
      description: |
        Recipient's wallet object

        Conditional object when payoutMethod has value 'W'
    PayoutId:
      maxLength: 50
      minLength: 1
      type: string
      description: >
        This is a globally unique identifier generated by Visa for a payout
        transaction


        ISO20022 field name: Transaction Information And Status - Additional
        Remittance Information
      example: 5003f6a0-2c44-11b2-aa57-47378ae53313_1
    ErrorResponseWithKey-1:
      type: object
      properties:
        errorResponse:
          allOf:
            - $ref: '#/components/schemas/ErrorResponse-1'
    AlphaCurrencyCode:
      maxLength: 3
      minLength: 3
      type: string
      description: |
        3-character ISO-4217 (Alpha-3) currency code
      example: USD
    MiddleName:
      maxLength: 35
      minLength: 1
      type: string
      description: Optional middle name or middle initial when recipient is an individual.
      example: A
    Date:
      maxLength: 10
      minLength: 10
      type: string
      description: a Date
      format: date
    ValidateWalletTransactionDetail-1:
      required:
        - businessApplicationId
        - endToEndId
        - initiatingPartyId
        - transactionAmount
        - transactionCurrencyCode
      type: object
      properties:
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        payoutSpeed:
          $ref: '#/components/schemas/PayoutSpeed'
        additionalData:
          $ref: '#/components/schemas/TransactionalAdditionalData'
        purposeOfPayment:
          description: >
            Purpose of payment is required in certain markets to clearly
            identify the purpose of the payment based on the standard values
            defined for respective market

            Conditional (Refer to Payouts Endpoint Guide on country-specific
            required fields and lengths)

            ISO20022 field name: Purpose of Payment
          allOf:
            - $ref: '#/components/schemas/PurposeOfPayment'
        initiatingPartyId:
          allOf:
            - $ref: '#/components/schemas/InitiatingPartyId'
        transactionAmount:
          description: >
            The amount to debit from merchant's funding account or credit to
            beneficiary's bank account.

            Note: Transaction amount can have decimal point for currencies that
            allow it. Refer to the Payouts Endpoint Guide for Payout on
            country-specific currency minor units. 

            Example: Currency exponent for USD is 2, the amount is $100.99.
            Currency exponent for JPY is 0. If the amount is JPY 10,000, then
            this field should populate “10000”.

            ISO20022 field name: Instructed Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
        statementNarrative:
          allOf:
            - $ref: '#/components/schemas/StatementNarrative'
        senderSourceOfFunds:
          $ref: '#/components/schemas/SourceOfFunds'
        businessApplicationId:
          $ref: '#/components/schemas/BusinessApplicationId'
        settlementCurrencyCode:
          description: >
            The settlement currency code

            The 3-character ISO-4217 code in this field reflects the currency
            for the Settlement amount to be debited from Originating Entity/Visa
            Client's funding account.

            Format: 3-character ISO-4217 (Alpha-3) currency code


            <b>This field is mandatory</b>


            Example: GBP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        transactionCurrencyCode:
          description: >
            The 3-character ISO-4217 code in this field reflects the currency
            associated to the transaction amount. 

            Format: 3-character ISO-4217 (Alpha-3) currency code

            Example: PHP
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
        senderBeneficiaryRelationship:
          $ref: '#/components/schemas/BeneficiaryRelationship'
    PostingDate:
      required:
        - cutoffDateTime
        - expectedPostingDate
      type: object
      properties:
        cutoffDateTime:
          $ref: '#/components/schemas/TimestampType'
        expectedPostingDate:
          allOf:
            - $ref: '#/components/schemas/ExpectedPostingDate'
    IdentityFieldInput:
      title: IdentityFieldInput
      type: string
      description: Supported input types for a recipient identity UI.
      enum:
        - text
        - date
        - number
        - list
      x-enum-elements:
        - name: text
          description: Text UI field.
        - name: date
          description: Date UI field.
        - name: number
          description: Number UI field.
        - name: list
          description: List UI field.
    ContactEmail:
      maxLength: 210
      minLength: 1
      type: string
      description: Contact Email.
    RecipientDetailMetadata-1:
      title: RecipientDetail
      required:
        - identityGroups
      type: object
      properties:
        identityGroups:
          type: array
          items:
            $ref: '#/components/schemas/IdentityGroup-1'
    202TransactionStatus:
      type: string
      description: |
        - PENDING: Payout is accepted but has not been acknowledged
      enum:
        - PENDING
    AccountBalance-1:
      required:
        - amount
        - currencyCode
      type: object
      properties:
        amount:
          description: >
            The balance amount for a particular currency.


            Note: The number of decimal places assumed for this field depends on
            the currency.
          allOf:
            - $ref: '#/components/schemas/Amount-1'
        currencyCode:
          description: |
            The currency code is a three letter ISO 4217 code. 

            E.g. GBP for British sterling pounds.
          allOf:
            - $ref: '#/components/schemas/AlphaCurrencyCode'
      description: >
        Represents a monetary value containing a decimal amount value along with
        a currency code. 
  responses:
    401ErrorResponse-1:
      description: Request is unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse-2'
    QueryResponseAccount:
      description: Transaction details response for account
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AccountQueryResponse'
    GetPostingCalendarResponse-1:
      description: >
        An array of PostingDate objects. 


        Each PostingDate represents the expected posting date along with that
        date's cut-off time.   
      content:
        application/json:
          schema:
            required:
              - postingCalendar
            type: object
            properties:
              postingCalendar:
                type: array
                items:
                  $ref: '#/components/schemas/PostingDate-1'
    400ErrorResponses:
      description: Comprehensive array of errors
      content:
        application/problem+json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ErrorResponse'
    GetMetaDataResponse-1:
      description: >
        Returns the metadata of fields for creating the SendPayout request.


        Note:  

        Get Metadata API response varies based on the recipeint individual,
        recipient company and for a given country and currency combinations.


        Sample response payload under the 'examples' represents different types
        of 'Identity groups' and 'Element Names' based on the given request
        parameters.   
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/S2AMetaData-1'
          examples:
            GetMetadaResponse:
              value:
                recipientDetail:
                  identityGroups:
                    - groupName: name
                      mandatory: true
                      groupLabel: Recipient name details
                      identityFields:
                        - locale: en
                          maxSize: 1024
                          subTitle: The first name of the recipient
                          tabOrder: 1
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the first name of the recipient
                          displaySize: 35
                          elementName: firstName
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 1024
                          subTitle: The last name of the recipient
                          tabOrder: 2
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the family name of the recipient
                          displaySize: 35
                          elementName: lastName
                          valueRegexp: '*'
                    - groupName: legalEntityIdentity
                      mandatory: true
                      groupLabel: Legal Entity Identity
                      identityFields:
                        - locale: en
                          maxSize: 70
                          subTitle: Name of the company
                          tabOrder: 1
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Enter the name of the recipient company
                          displaySize: 35
                          elementName: name
                        - locale: en
                          maxSize: 35
                          subTitle: Registration number of the company
                          tabOrder: 2
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: >-
                            Enter the registration number of the recipient
                            company
                          displaySize: 10
                          elementName: idNumber
                        - locale: en
                          maxSize: 2
                          subTitle: Company registration ISO country
                          tabOrder: 3
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter the ISO country code where recipient company
                            is registered
                          displaySize: 2
                          elementName: country
                    - groupName: bank
                      mandatory: true
                      groupLabel: Bank details
                      identityFields:
                        - locale: en
                          maxSize: 50
                          subTitle: Bank Name
                          tabOrder: 1
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the Bank Name
                          displaySize: 30
                          elementName: bankName
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 35
                          subTitle: Account Holder
                          tabOrder: 2
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Account Holders Name
                          displaySize: 35
                          elementName: accountName
                        - locale: en
                          maxSize: 8
                          subTitle: Account
                          tabOrder: 3
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Enter the Account Number
                          displaySize: 8
                          elementName: accountNumber
                        - locale: en
                          maxSize: 3
                          subTitle: Currency Code
                          tabOrder: 4
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Recipient bank account currency code
                          displaySize: 3
                          elementName: currencyCode
                        - locale: en
                          maxSize: 12
                          subTitle: Branch Code
                          tabOrder: 5
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Recipient bank account branch code
                          displaySize: 12
                          elementName: branchCode
                        - locale: en
                          maxSize: 3
                          subTitle: Country Code
                          tabOrder: 6
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: this element contains ISO3166 country code (Alpha-3)
                          displaySize: 3
                          elementName: countryCode
                        - locale: en
                          maxSize: 12
                          subTitle: Bank Code
                          tabOrder: 7
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Enter the Bank Code
                          displaySize: 12
                          elementName: bankCode
                        - locale: en
                          maxSize: 8
                          subTitle: Account Type
                          tabOrder: 8
                          inputType: list
                          listItems:
                            - label: Checking
                              value: '1'
                            - label: Savings
                              value: '2'
                            - label: Loan
                              value: '5'
                          mandatory: true
                          separator: ' '
                          description: Select the Account Type
                          displaySize: 8
                          elementName: accountType
                        - locale: en
                          maxSize: 22
                          subTitle: Account Number Type
                          tabOrder: 8
                          inputType: list
                          listItems:
                            - label: DEFAULT
                              value: DEFAULT
                            - label: IBAN
                              value: IBAN
                            - label: BIC
                              value: BIC
                          mandatory: true
                          separator: ' '
                          description: >-
                            Recipient bank account number type. Valid values:
                            'IBAN', 'BIC' and 'DEFAULT'
                          displaySize: 22
                          elementName: accountNumberType
                        - locale: en
                          maxSize: 25
                          subTitle: Bank Code Type
                          tabOrder: 8
                          inputType: list
                          listItems:
                            - label: DEFAULT
                              value: DEFAULT
                            - label: ABARouting
                              value: ABA
                            - label: SORT_CODE
                              value: SORT_CODE
                          mandatory: true
                          separator: ' '
                          description: >-
                            Recipient bank account - bank code type. Valid
                            values: 'DEFAULT', 'ABA' and 'SORT_CODE'
                          displaySize: 25
                          elementName: bankCodeType
                    - groupName: address
                      mandatory: false
                      groupLabel: Address details
                      identityFields:
                        - locale: en
                          maxSize: 254
                          subTitle: First line of address of recipient
                          tabOrder: 3
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the first line of address of recipient
                          displaySize: 35
                          elementName: addressLine1
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 254
                          subTitle: Second line of address of recipient
                          tabOrder: 4
                          inputType: text
                          mandatory: false
                          separator: '-'
                          description: Enter the second line of address of recipient
                          displaySize: 35
                          elementName: addressLine2
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 254
                          subTitle: City of residency of recipient
                          tabOrder: 6
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the city of residency of recipient
                          displaySize: 35
                          elementName: city
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 254
                          subTitle: State of residency of recipient
                          tabOrder: 7
                          inputType: text
                          mandatory: false
                          separator: '-'
                          description: Enter the state of residency of recipient
                          displaySize: 35
                          elementName: state
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 10
                          subTitle: Postal Code of residency of recipient
                          tabOrder: 8
                          inputType: text
                          mandatory: false
                          separator: '-'
                          description: Enter the Postal Code of residency of recipient
                          displaySize: 10
                          elementName: postalCode
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 2
                          subTitle: ISO county of residency of recipient
                          tabOrder: 9
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the ISO county code of residency of recipient
                          displaySize: 2
                          elementName: country
                          valueRegexp: '*'
                    - groupName: contactInfo
                      mandatory: true
                      groupLabel: Contact Information
                      identityFields:
                        - locale: en
                          maxSize: 16
                          subTitle: Contact Number
                          tabOrder: 1
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: >-
                            Contact Number of recipient. Symbol + followed by
                            digits, no other symbols, e.g. something like
                            +447809713678 (note, refer ISO spec E.164)
                          displaySize: 16
                          elementName: contactNumber
                        - locale: en
                          maxSize: 210
                          subTitle: Contact Email
                          tabOrder: 2
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Contact email of recipient
                          displaySize: 210
                          elementName: contactEmail
                        - locale: en
                          maxSize: 8
                          subTitle: Contact Number Type
                          tabOrder: 8
                          inputType: list
                          listItems:
                            - label: MOBILE
                              value: MOBILE
                            - label: HOME
                              value: HOME
                            - label: WORK
                              value: WORK
                          mandatory: true
                          separator: ' '
                          description: 'Contact Number Type can be ''MOBILE'', ''WORK'',''HOME'' '
                          displaySize: 8
                          elementName: contactNumberType
                    - groupName: identificationList
                      mandatory: false
                      groupLabel: Identification details
                      identityFields:
                        - locale: en
                          maxSize: 25
                          subTitle: Identification information of recipient
                          tabOrder: 10
                          inputType: list
                          listItems:
                            - label: Passport
                              value: Passport
                            - label: National ID Card
                              value: National ID Card
                            - label: Driving License
                              value: Driving License
                          mandatory: true
                          description: >-
                            Enter one of the identification information of
                            recipient
                          displaySize: 25
                          elementName: idType
                        - locale: en
                          maxSize: 50
                          subTitle: Identifier value of the document
                          tabOrder: 11
                          inputType: text
                          mandatory: true
                          description: Enter the identifier value of the recipient document
                          displaySize: 10
                          elementName: idNumber
                        - locale: en
                          maxSize: 2
                          subTitle: ISO country of issue of the identification document
                          tabOrder: 12
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter the ISO country code of issue of the recipient
                            identification document
                          displaySize: 2
                          elementName: idIssueCountry
                    - groupName: additionalData
                      mandatory: false
                      groupLabel: Enter any additional data
                      identityFields:
                        - locale: en
                          maxSize: 35
                          subTitle: Additional data parameter name
                          tabOrder: 14
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter parameter name (e.g. : validFromDate) for the
                            additional data
                          displaySize: 35
                          elementName: name
                        - locale: en
                          maxSize: 100
                          subTitle: Additional data parameter value
                          tabOrder: 14
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter value (e.g. : validFromDate) for the
                            additional data
                          displaySize: 100
                          elementName: value
                    - groupName: additionalData
                      mandatory: false
                      groupLabel: Enter any additional data
                      identityFields:
                        - locale: en
                          maxSize: 35
                          subTitle: Additional data parameter name
                          tabOrder: 14
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter parameter name (e.g. : validToDate) for the
                            additional data
                          displaySize: 35
                          elementName: additionalDataKey
                        - locale: en
                          maxSize: 100
                          subTitle: Additional data parameter value
                          tabOrder: 14
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter value (e.g. : validToDate) for the additional
                            data
                          displaySize: 100
                          elementName: additionalDataValue
                    - groupName: birthInfo
                      mandatory: false
                      groupLabel: birth information of recipient
                      identityFields:
                        - locale: en
                          maxSize: 10
                          subTitle: The date of birth of the recipient
                          tabOrder: 15
                          inputType: date
                          mandatory: true
                          description: Enter the date of birth of the recipient
                          displaySize: 10
                          elementName: dateOfBirth
                        - locale: en
                          maxSize: 254
                          subTitle: The city of birth of the recipient
                          tabOrder: 16
                          inputType: text
                          mandatory: false
                          description: Enter the city of birth of the recipient
                          displaySize: 35
                          elementName: cityOfBirth
                        - locale: en
                          maxSize: 2
                          subTitle: The ISO country of birth of the recipient
                          tabOrder: 16
                          inputType: text
                          mandatory: true
                          description: Enter the ISO country code of birth of the recipient
                          displaySize: 2
                          elementName: countryOfBirth
                    - groupName: additionalData
                      mandatory: false
                      groupLabel: Enter any additional data
                      identityFields:
                        - locale: en
                          maxSize: 35
                          subTitle: Additional data parameter name
                          tabOrder: 18
                          inputType: text
                          mandatory: true
                          description: Enter parameter name for the additional data
                          displaySize: 35
                          elementName: additionalDataKey
                        - locale: en
                          maxSize: 100
                          subTitle: Additional data parameter value
                          tabOrder: 19
                          inputType: text
                          mandatory: true
                          description: Enter value for the additional data
                          displaySize: 100
                          elementName: additionalDataValue
                transactionDetail:
                  purposeOfPayment:
                    mandatory: true
                    purposeOfPaymentCodes:
                      - code: TAX
                        description: Tax
                        senderIndividual: true
                        recipientIndividual: true
                      - code: MOR
                        description: Mortgage
                        senderCompany: true
                        recipientIndividual: true
                      - code: MIS
                        description: Miscellaneous
                        recipientCompany: true
                        senderIndividual: true
                      - code: SAL
                        description: Salary/payroll
                        senderCompany: true
                        recipientCompany: true
                      - code: LOA
                        description: Loan
                        senderCompany: true
                        recipientCompany: true
                      - code: BUS
                        description: Business/commercial payment
                        recipientCompany: true
                        senderIndividual: true
                      - code: DEP
                        description: Deposit
                        senderCompany: true
                        recipientIndividual: true
                      - code: PEN
                        description: Pension
                        recipientCompany: true
                        senderIndividual: true
    QueryResponseAccount-3:
      description: Transaction details response for account
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AccountQueryResponse-3'
    QueryResponseAccount-1:
      description: Transaction details response for account
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AccountQueryResponse-1'
    QueryResponseAccount-2:
      description: Transaction details response for account
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/AccountQueryResponse-2'
    400ErrorResponse:
      description: >-
        When any field fails schematic validation or when any required field is
        missing or when request is inconsistent with the Request definitions.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponseWithKey'
    GetPostingCalendarResponse-2:
      description: >
        An array of PostingDate objects. 


        Each PostingDate represents the expected posting date along with that
        date's cut-off time.   
      content:
        application/json:
          schema:
            required:
              - postingCalendar
            type: object
            properties:
              postingCalendar:
                type: array
                items:
                  $ref: '#/components/schemas/PostingDate-2'
    GetAccountBalanceResponse:
      description: >
        An array of the balances of the accounts for contracting or managed
        merchants. 

        The array can have a list of balances for all the currencies the
        merchant may have or has transacted with.    
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/AccountBalanceWithTimestamp'
                - required:
                    - balance
                  type: object
                  properties:
                    balance:
                      $ref: '#/components/schemas/AccountBalance'
    202CreatedResponse:
      description: Transaction is accepted and will be processed & notified status.
      content:
        application/json:
          schema:
            required:
              - transactionDetail
            properties:
              transactionalDetail:
                required:
                  - payoutId
                type: object
                properties:
                  payoutId:
                    $ref: '#/components/schemas/PayoutId'
    CancelPayoutResponse:
      description: cancel payout response
      content:
        application/json:
          schema:
            required:
              - transactionDetail
            type: object
            properties:
              transactionDetail:
                required:
                  - clientReferenceId
                  - initiatingPartyId
                  - status
                type: object
                properties:
                  status:
                    description: >
                      Status of the cancel request


                      Valid Value are: PENDING_CANCELLATION, CANCELLED

                      - PENDING_CANCELLATION: Cancel payout request is pending
                      before cancellation

                      - CANCELLED: A transaction has been successfully cancelled
                    allOf:
                      - $ref: '#/components/schemas/PayoutCancelStatus'
                  payoutId:
                    description: >
                      This is a unique identifier generated by the Visa for a
                      transaction and is key field used in the subsequent
                      messages with in the transaction set example Notification,
                      Returns, Cancel, Exception management via VD Portal for
                      Payout and Reversals, Chargeback, Response, Advice for to
                      Card. 
                    allOf:
                      - $ref: '#/components/schemas/PayoutId'
                  clientReferenceId:
                    $ref: '#/components/schemas/ClientReferenceId'
                  initiatingPartyId:
                    allOf:
                      - $ref: '#/components/schemas/InitiatingPartyId'
    409ErrorResponse:
      description: Conflict
      content:
        application/problem+json: {}
    400NotificationsErrorResponse:
      description: >-
        When any field fails schematic validation or when any required field is
        missing or when request is inconsistent with the Request definitions.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotificationsErrorResponseWithKey'
    500ErrorResponse:
      description: Internal Server Error
      content:
        application/problem+json: {}
    403ErrorResponse-1:
      description: Request is forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse-2'
    403ErrorResponse:
      description: Request is forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/403ErrorResponseWithKey'
    404ErrorResponse:
      description: Resource not found
      content:
        application/problem+json: {}
    429ErrorResponse:
      description: Too Many Requests
      content:
        application/problem+json: {}
    401ErrorResponse:
      description: Request is unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/401ErrorResponseWithKey'
    400ErrorResponses-1:
      description: Comprehensive array of errors
      content:
        application/problem+json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ErrorResponse-1'
    400ErrorResponses-2:
      description: Comprehensive array of errors
      content:
        application/problem+json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ErrorResponse-2'
    GetAccountBalanceResponse-1:
      description: >
        An array of the balances of the accounts for contracting or managed
        merchants. 

        The array can have a list of balances for all the currencies the
        merchant may have or has transacted with.    
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AccountBalanceWithTimestamp-1'
    400ErrorResponse-1:
      description: >-
        When any field fails schematic validation or when any required field is
        missing or when request is inconsistent with the Request definitions.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponseWithKey-1'
    400ErrorResponse-2:
      description: >-
        When any field fails schematic validation or when any required field is
        missing or when request is inconsistent with the Request definitions.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse-2'
    CancelPayoutResponse-1:
      description: cancel payout response
      content:
        application/json:
          schema:
            required:
              - transactionDetail
            type: object
            properties:
              transactionDetail:
                required:
                  - clientReferenceId
                  - initiatingPartyId
                  - payoutId
                  - status
                type: object
                properties:
                  status:
                    description: >
                      Status of the cancel request


                      Valid Value are: PENDING_CANCELLATION, CANCELLED

                      - PENDING_CANCELLATION: Cancel payout request is pending
                      before cancellation

                      - CANCELLED: A transaction has been successfully cancelled
                    allOf:
                      - $ref: '#/components/schemas/PayoutCancelStatus'
                  payoutId:
                    description: >
                      This is a unique identifier generated by the Visa for a
                      transaction and is key field used in the subsequent
                      messages with in the transaction set example Notification,
                      Returns, Cancel, Exception management via VD Portal for
                      Payout and Reversals, Chargeback, Response, Advice for to
                      Card. 
                    allOf:
                      - $ref: '#/components/schemas/PayoutId'
                  clientReferenceId:
                    $ref: '#/components/schemas/ClientReferenceId'
                  initiatingPartyId:
                    allOf:
                      - $ref: '#/components/schemas/InitiatingPartyId'
    CancelPayoutResponse-2:
      description: cancel payout response
      content:
        application/json:
          schema:
            required:
              - transactionDetail
            type: object
            properties:
              transactionDetail:
                required:
                  - clientReferenceId
                  - initiatingPartyId
                  - payoutId
                  - status
                type: object
                properties:
                  status:
                    description: >
                      Status of the cancel request


                      Valid Value are: PENDING_CANCELLATION, CANCELLED


                      Status definition (add a link to Status Transition diagram
                      on VDP):

                      - PENDING_CANCELLATION: Cancel payout request is pending
                      before cancellation

                      - CANCELLED: A transaction has been successfully cancelled
                    allOf:
                      - $ref: '#/components/schemas/PayoutCancelStatus'
                  payoutId:
                    description: >
                      This is a unique identifier generated by the Visa for a
                      transaction and is key field used in the subsequent
                      messages with in the transaction set example Notification,
                      Returns, Cancel, Exception management via VD Portal for
                      Payout and Reversals, Chargeback, Response, Advice for to
                      Card. 
                    allOf:
                      - $ref: '#/components/schemas/PayoutId'
                  clientReferenceId:
                    $ref: '#/components/schemas/ClientReferenceId'
                  initiatingPartyId:
                    allOf:
                      - $ref: '#/components/schemas/InitiatingPartyId-1'
    503ErrorResponse:
      description: Service Unavailable
      content:
        application/problem+json: {}
    GetMetaDataResponse:
      description: >
        Returns the metadata of fields for creating the SendPayout request.


        Note:  

        Get Metadata API response varies based on the recipeint individual,
        recipient company and for a given country and currency combinations.


        Sample response payload under the 'examples' represents different types
        of 'Identity groups' and 'Element Names' based on the given request
        parameters.   
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/S2AMetaData'
          examples:
            GetMetadaResponse:
              value:
                recipientDetail:
                  identityGroups:
                    - groupName: name
                      mandatory: true
                      groupLabel: Recipient name details
                      identityFields:
                        - locale: en
                          maxSize: 35
                          subTitle: The first name of the recipient
                          tabOrder: 1
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the first name of the recipient
                          displaySize: 35
                          elementName: firstName
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 35
                          subTitle: The last name of the recipient
                          tabOrder: 2
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the family name of the recipient
                          displaySize: 35
                          elementName: lastName
                          valueRegexp: '*'
                    - groupName: legalEntityIdentity
                      mandatory: true
                      groupLabel: Legal Entity Identity
                      identityFields:
                        - locale: en
                          maxSize: 70
                          subTitle: Name of the company
                          tabOrder: 1
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Enter the name of the recipient company
                          displaySize: 35
                          elementName: name
                        - locale: en
                          maxSize: 35
                          subTitle: Registration number of the company
                          tabOrder: 2
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: >-
                            Enter the registration number of the recipient
                            company
                          displaySize: 10
                          elementName: idNumber
                        - locale: en
                          maxSize: 3
                          subTitle: Company registration ISO country
                          tabOrder: 3
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter the ISO country code where recipient company
                            is registered
                          displaySize: 2
                          elementName: country
                    - groupName: bank
                      mandatory: true
                      groupLabel: Bank details
                      identityFields:
                        - locale: en
                          maxSize: 50
                          subTitle: Bank Name
                          tabOrder: 1
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the Bank Name
                          displaySize: 30
                          elementName: bankName
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 70
                          subTitle: Account Holder
                          tabOrder: 2
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Account Holders Name
                          displaySize: 35
                          elementName: accountName
                        - locale: en
                          maxSize: 34
                          subTitle: Account
                          tabOrder: 3
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Enter the Account Number
                          displaySize: 8
                          elementName: accountNumber
                        - locale: en
                          maxSize: 3
                          subTitle: Currency Code
                          tabOrder: 4
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Recipient bank account currency code
                          displaySize: 3
                          elementName: currencyCode
                        - locale: en
                          maxSize: 12
                          subTitle: Branch Code
                          tabOrder: 5
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Recipient bank account branch code
                          displaySize: 12
                          elementName: branchCode
                        - locale: en
                          maxSize: 3
                          subTitle: Country Code
                          tabOrder: 6
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: this element contains ISO3166 country code (Alpha-3)
                          displaySize: 3
                          elementName: countryCode
                        - locale: en
                          maxSize: 12
                          subTitle: Bank Code
                          tabOrder: 7
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: Enter the Bank Code
                          displaySize: 12
                          elementName: bankCode
                        - locale: en
                          maxSize: 8
                          subTitle: Account Type
                          tabOrder: 8
                          inputType: list
                          listItems:
                            - label: Checking
                              value: '1'
                            - label: Savings
                              value: '2'
                            - label: Loan
                              value: '5'
                          mandatory: true
                          separator: ' '
                          description: Select the Account Type
                          displaySize: 8
                          elementName: accountType
                        - locale: en
                          maxSize: 7
                          subTitle: Account Number Type
                          tabOrder: 8
                          inputType: list
                          listItems:
                            - label: DEFAULT
                              value: DEFAULT
                            - label: IBAN
                              value: IBAN
                          mandatory: true
                          separator: ' '
                          description: >-
                            Recipient bank account number type. Valid values:
                            'IBAN' and 'DEFAULT'
                          displaySize: 7
                          elementName: accountNumberType
                        - locale: en
                          maxSize: 9
                          subTitle: Bank Code Type
                          tabOrder: 8
                          inputType: list
                          listItems:
                            - label: DEFAULT
                              value: DEFAULT
                            - label: ABARouting
                              value: ABA
                            - label: SORT_CODE
                              value: SORT_CODE
                          mandatory: true
                          separator: ' '
                          description: >-
                            Recipient bank account - bank code type. Valid
                            values: 'DEFAULT', 'ABA' and 'SORT_CODE'
                          displaySize: 9
                          elementName: bankCodeType
                    - groupName: address
                      mandatory: false
                      groupLabel: Address details
                      identityFields:
                        - locale: en
                          maxSize: 50
                          subTitle: First line of address of recipient
                          tabOrder: 3
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the first line of address of recipient
                          displaySize: 35
                          elementName: addressLine1
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 50
                          subTitle: Second line of address of recipient
                          tabOrder: 4
                          inputType: text
                          mandatory: false
                          separator: '-'
                          description: Enter the second line of address of recipient
                          displaySize: 35
                          elementName: addressLine2
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 35
                          subTitle: City of residency of recipient
                          tabOrder: 6
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the city of residency of recipient
                          displaySize: 35
                          elementName: city
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 25
                          subTitle: State of residency of recipient
                          tabOrder: 7
                          inputType: text
                          mandatory: false
                          separator: '-'
                          description: Enter the state of residency of recipient
                          displaySize: 25
                          elementName: state
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 16
                          subTitle: Postal Code of residency of recipient
                          tabOrder: 8
                          inputType: text
                          mandatory: false
                          separator: '-'
                          description: Enter the Postal Code of residency of recipient
                          displaySize: 10
                          elementName: postalCode
                          valueRegexp: '*'
                        - locale: en
                          maxSize: 3
                          subTitle: ISO county of residency of recipient
                          tabOrder: 9
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Enter the ISO county code of residency of recipient
                          displaySize: 3
                          elementName: country
                          valueRegexp: '*'
                    - groupName: contactInfo
                      mandatory: true
                      groupLabel: Contact Information
                      identityFields:
                        - locale: en
                          maxSize: 16
                          subTitle: Contact Number
                          tabOrder: 1
                          inputType: text
                          mandatory: true
                          separator: ' '
                          description: >-
                            Contact Number of recipient. Symbol + followed by
                            digits, no other symbols, e.g. something like
                            +447700123456 (note, refer ISO spec E.164)
                          displaySize: 16
                          elementName: contactNumber
                        - locale: en
                          maxSize: 210
                          subTitle: Contact Email
                          tabOrder: 2
                          inputType: text
                          mandatory: true
                          separator: '-'
                          description: Contact email of recipient
                          displaySize: 50
                          elementName: contactEmail
                        - locale: en
                          maxSize: 6
                          subTitle: Contact Number Type
                          tabOrder: 8
                          inputType: list
                          listItems:
                            - label: MOBILE
                              value: MOBILE
                            - label: HOME
                              value: HOME
                            - label: WORK
                              value: WORK
                          mandatory: true
                          separator: ' '
                          description: 'Contact Number Type can be ''MOBILE'', ''WORK'',''HOME'' '
                          displaySize: 6
                          elementName: contactNumberType
                    - groupName: identificationList
                      mandatory: false
                      groupLabel: Identification details
                      identityFields:
                        - locale: en
                          maxSize: 1
                          subTitle: Identification information of recipient
                          tabOrder: 10
                          inputType: list
                          listItems:
                            - label: Passport
                              value: P
                            - label: National ID Card
                              value: 'N'
                            - label: Driving License
                              value: D
                          mandatory: true
                          description: >-
                            Enter one of the identification information of
                            recipient
                          displaySize: 5
                          elementName: idType
                        - locale: en
                          maxSize: 35
                          subTitle: Identifier value of the document
                          tabOrder: 11
                          inputType: text
                          mandatory: true
                          description: Enter the identifier value of the recipient document
                          displaySize: 10
                          elementName: idNumber
                        - locale: en
                          maxSize: 3
                          subTitle: ISO country of issue of the identification document
                          tabOrder: 12
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter the ISO country code of issue of the recipient
                            identification document
                          displaySize: 3
                          elementName: idIssueCountry
                    - groupName: additionalData
                      mandatory: false
                      groupLabel: Enter any additional data
                      identityFields:
                        - locale: en
                          maxSize: 35
                          subTitle: Additional data parameter name
                          tabOrder: 14
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter parameter name (e.g. : validFromDate) for the
                            additional data
                          displaySize: 35
                          elementName: name
                        - locale: en
                          maxSize: 100
                          subTitle: Additional data parameter value
                          tabOrder: 14
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter value (e.g. : validFromDate) for the
                            additional data
                          displaySize: 100
                          elementName: value
                    - groupName: additionalData
                      mandatory: false
                      groupLabel: Enter any additional data
                      identityFields:
                        - locale: en
                          maxSize: 35
                          subTitle: Additional data parameter name
                          tabOrder: 14
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter parameter name (e.g. : validToDate) for the
                            additional data
                          displaySize: 35
                          elementName: additionalDataKey
                        - locale: en
                          maxSize: 100
                          subTitle: Additional data parameter value
                          tabOrder: 14
                          inputType: text
                          mandatory: true
                          description: >-
                            Enter value (e.g. : validToDate) for the additional
                            data
                          displaySize: 100
                          elementName: additionalDataValue
                    - groupName: birthInfo
                      mandatory: false
                      groupLabel: birth information of recipient
                      identityFields:
                        - locale: en
                          maxSize: 10
                          subTitle: The date of birth of the recipient
                          tabOrder: 15
                          inputType: date
                          mandatory: true
                          description: Enter the date of birth of the recipient
                          displaySize: 10
                          elementName: dateOfBirth
                        - locale: en
                          maxSize: 35
                          subTitle: The city of birth of the recipient
                          tabOrder: 16
                          inputType: text
                          mandatory: false
                          description: Enter the city of birth of the recipient
                          displaySize: 35
                          elementName: cityOfBirth
                        - locale: en
                          maxSize: 3
                          subTitle: The ISO country of birth of the recipient
                          tabOrder: 16
                          inputType: text
                          mandatory: true
                          description: Enter the ISO country code of birth of the recipient
                          displaySize: 3
                          elementName: countryOfBirth
                    - groupName: additionalData
                      mandatory: false
                      groupLabel: Enter any additional data
                      identityFields:
                        - locale: en
                          maxSize: 35
                          subTitle: Additional data parameter name
                          tabOrder: 18
                          inputType: text
                          mandatory: true
                          description: Enter parameter name for the additional data
                          displaySize: 35
                          elementName: additionalDataKey
                        - locale: en
                          maxSize: 100
                          subTitle: Additional data parameter value
                          tabOrder: 19
                          inputType: text
                          mandatory: true
                          description: Enter value for the additional data
                          displaySize: 100
                          elementName: additionalDataValue
                transactionDetail:
                  purposeOfPayment:
                    mandatory: true
                    purposeOfPaymentCodes:
                      - code: TAX
                        description: Tax
                        senderIndividual: true
                        recipientIndividual: true
                      - code: MOR
                        description: Mortgage
                        senderCompany: true
                        recipientIndividual: true
                      - code: MIS
                        description: Miscellaneous
                        recipientCompany: true
                        senderIndividual: true
                      - code: SAL
                        description: Salary/payroll
                        senderCompany: true
                        recipientCompany: true
                      - code: LOA
                        description: Loan
                        senderCompany: true
                        recipientCompany: true
                      - code: BUS
                        description: Business/commercial payment
                        recipientCompany: true
                        senderIndividual: true
                      - code: DEP
                        description: Deposit
                        senderCompany: true
                        recipientIndividual: true
                      - code: PEN
                        description: Pension
                        recipientCompany: true
                        senderIndividual: true
    GetPostingCalendarResponse:
      description: >
        An array of PostingDate objects. 


        Each PostingDate represents the expected posting date along with that
        date's cut-off time.   
      content:
        application/json:
          schema:
            required:
              - postingCalendar
            type: object
            properties:
              postingCalendar:
                type: array
                items:
                  $ref: '#/components/schemas/PostingDate'
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  callbacks: {}
x-tagGroups:
  - name: API Reference
    tags:
      - Visa Direct Account and Wallet Receive API
      - Visa Direct Account and Wallet Send API
